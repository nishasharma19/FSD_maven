<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Jakarta EE: What’s in store for Enterprise JavaBeans?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/w1Qa84Huv1Q/" /><category term="EJB Remote" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Enterprise Application Platform" scheme="searchisko:content:tags" /><author><name>rhsilva</name></author><id>searchisko:content:id:jbossorg_blog-jakarta_ee_what_s_in_store_for_enterprise_javabeans</id><updated>2019-10-22T07:00:49Z</updated><published>2019-10-22T07:00:49Z</published><content type="html">&lt;p&gt;&lt;a href="https://docs.oracle.com/cd/E13222_01/wls/docs100/ejb/deploy.html"&gt;Enterprise JavaBeans (EJB)&lt;/a&gt; has been very important to the Java EE ecosystem and promoted many robust solutions to enterprise problems. Besides that, in the past when integration techniques were not so advanced, EJB did great work with remote EJB, integrating many Java EE applications. However, remote EJB is not necessary anymore, and we have many techniques and tools that are better for doing that. So, does EJB still have a place in this new cloud-native world?&lt;/p&gt; &lt;p&gt;Before writing this post, I did an informal survey via &lt;a href="https://twitter.com/rhuan080/status/1175929075057274882"&gt;Twitter poll&lt;/a&gt; to hear what the community thinks about it. In this article, I&amp;#8217;ll share the results of the survey as well as some discussion that emerged as part of the poll&lt;em&gt;. &lt;/em&gt;Additionally, I&amp;#8217;ll share my opinions on the topic.&lt;span id="more-636847"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Twitter survey&lt;/h2&gt; &lt;p&gt;Here is the question I asked in the survey along with the results (from 385 respondents):&lt;/p&gt; &lt;p&gt;&lt;em&gt;We had many changes in the Java ecosystem mainly in Java enterprise. But what do you think about the EJB future? Do you think EJB has its place in this new cloud-native world? &lt;/em&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;em&gt;Yes, but needs updates &amp;#8230;..&lt;strong&gt;29%&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;No, EJB is unnecessary &amp;#8230;.&lt;strong&gt;50%&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Yes, it&amp;#8217;s very useful &amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&lt;strong&gt;17%&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Other &amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;..&lt;strong&gt;4%&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;As you can see, option 2 is the winner, and the majority of respondents think EJB is unnecessary. However, it&amp;#8217;s the winner with 50% of the vote, which means that 50% of respondents think EJB is necessary in some way or have some other opinion. That&amp;#8217;s not the only interesting thing in this survey, though; the other interesting thing was the discussion emerged from this survey about &lt;em&gt;getting the interesting features from EJB and distributing them to other specs with more affinity.&lt;/em&gt; But before we get into this discussion, I&amp;#8217;ll share my opinion and explain why I think this.&lt;/p&gt; &lt;h2&gt;My vote&lt;/h2&gt; &lt;p&gt;My vote is for option 1 (&lt;em&gt;Yes, but needs updates&lt;/em&gt;), because although EJB is an old technology, it has many features that are useful to the enterprise environment. But EJB can be sanitized to offer these features in a lighter technology. Here&amp;#8217;s a list of EJB&amp;#8217;s interesting features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Asynchronous invocation:&lt;/strong&gt; Is useful when you want to make a non-blocking call to some method.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Stateless EJBs pool: &lt;/strong&gt;Optimizes memory use, promoting reuse of stateless EJB objects.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;@Startup to call a method at startup time: &lt;/strong&gt;Is useful when we want to execute something at startup time.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;EJB timer: &lt;/strong&gt;Is a good feature to schedule a process to execute according to some configuration.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Singleton: &lt;/strong&gt;Is useful when we want only one instance of an object to all applications. Furthermore, it has the method lock feature that is useful when we need to control concurrent access to some method.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Message-driven bean (MDB): &lt;/strong&gt;Is very useful to consume JMS queues and topics. It promotes a simple interface with a high level of abstraction to consume JMS.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Transaction management: &lt;/strong&gt;Is useful to manage transactions with databases and resources (like JMS). It promotes a high level of abstraction to work with transnational processes.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These features are useful to the current scenario of the enterprise world, and having these features in a spec-based solution is good for the Java ecosystem. Many people have noted that Spring and other frameworks already have these features, but they are important features to have in a spec-based solution (like Jakarta EE) as well, because spec solutions are multi-vendor solutions and not coupled with a specific vendor.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;The interesting EJB features should survive, whether they have the EJB name or not. The idea of getting the interesting features from EJB and distributing them to other specs with more affinity is amazing and means we will have these important features in the Jakarta EE, but in lighter and more organized APIs. This is a good chance to evolve the Jakarta EE feature set to promote lighter, more cohesive Jakarta EE components and APIs.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#038;title=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" data-a2a-url="https://developers.redhat.com/blog/2019/10/22/jakarta-ee-whats-in-store-for-enterprise-javabeans/" data-a2a-title="Jakarta EE: What’s in store for Enterprise JavaBeans?"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/22/jakarta-ee-whats-in-store-for-enterprise-javabeans/"&gt;Jakarta EE: What&amp;#8217;s in store for Enterprise JavaBeans?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/w1Qa84Huv1Q" height="1" width="1" alt=""/&gt;</content><summary>Enterprise JavaBeans (EJB) has been very important to the Java EE ecosystem and promoted many robust solutions to enterprise problems. Besides that, in the past when integration techniques were not so advanced, EJB did great work with remote EJB, integrating many Java EE applications. However, remote EJB is not necessary anymore, and we have many techniques and tools that are better for doing that...</summary><dc:creator>rhsilva</dc:creator><dc:date>2019-10-22T07:00:49Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/22/jakarta-ee-whats-in-store-for-enterprise-javabeans/</feedburner:origLink></entry><entry><title>.NET Core 3.0 for Red Hat Enterprise Linux 7 now available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/md-52msxjlk/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term=".NET Core 3.0" scheme="searchisko:content:tags" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><author><name>Bob Davis</name></author><id>searchisko:content:id:jbossorg_blog-net_core_3_0_for_red_hat_enterprise_linux_7_now_available</id><updated>2019-10-21T15:41:13Z</updated><published>2019-10-21T15:41:13Z</published><content type="html">&lt;p&gt;We are very excited to announce the general availability of .NET Core 3.0 for Red Hat Enterprise Linux 7! .NET Core is the open source, cross-platform .NET platform for &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;building microservices&lt;/a&gt;. .NET Core is designed to provide the best performance at scale for applications that use microservices and &lt;a href="https://developers.redhat.com/topics/containers/"&gt;containers&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;.NET Core 3.0 is available today on Red Hat Enterprise Linux 7 via “yum” in the /dotnet repo, and in container images from the &lt;a href="https://access.redhat.com/containers/#/search/dotnet"&gt;Red Hat Container Container Catalog&lt;/a&gt;. Availability for Red Hat Enterprise Linux 8 will come with the release of RHEL 8.1 in Application Streams.&lt;span id="more-637017"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;.NET Core 3.0 continues to broaden its support and tools for application development in an open source environment. The latest version of .NET Core includes the following improvements:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Support for C# 8.0, f# 4.7&lt;/li&gt; &lt;li&gt;Support for building Windows desktop applications&lt;/li&gt; &lt;li&gt;Supports netstandard2.1&lt;/li&gt; &lt;li&gt;Native executables for framework-dependent applications&lt;/li&gt; &lt;li&gt;Single-file executables&lt;/li&gt; &lt;li&gt;Trimming applications on publish&lt;/li&gt; &lt;li&gt;Ahead-of-time (AOT) compiled applications&lt;/li&gt; &lt;li&gt;Improved support for containers with low-memory allocation&lt;/li&gt; &lt;li&gt;Fast, built-in JSON support&lt;/li&gt; &lt;li&gt;HTTP/2 support in HttpClient&lt;/li&gt; &lt;li&gt;TPS 1.3 support on Linux systems with OpenSSL 1.1.1&lt;/li&gt; &lt;li&gt;Support for building client-side web apps using Blazor&lt;/li&gt; &lt;li&gt;Create high-performance backend services with gRPC&lt;/li&gt; &lt;li&gt;HTTP/2 enabled by default in Kestrel&lt;/li&gt; &lt;li&gt;Authentication support integration with &lt;a href="https://identityserver.io/"&gt;IdentityServer&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Release and support information&lt;/h2&gt; &lt;p&gt;Developers may use .NET Core 3.0 to develop and deploy applications on:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat Enterprise Linux&lt;/li&gt; &lt;li&gt;Red Hat Enterprise Linux Atomic Host&lt;/li&gt; &lt;li&gt;Red Hat OpenShift Container Platform&lt;/li&gt; &lt;li&gt;Red Hat OpenShift Online&lt;/li&gt; &lt;li&gt;Red Hat OpenShift Dedicated&lt;/li&gt; &lt;li&gt;Red Hat OpenStack Platform&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;.NET Core 3.0 is a current release, &lt;a href="https://access.redhat.com/support/policy/updates/net-core"&gt;as outlined in our lifecycle documentation&lt;/a&gt;. .NET Core 3.1 will be a long-term supported release. We recommend that you adopt .NET Core 3.0. It will be easy to upgrade from .NET Core 3.0. .NET Core 2.2 (the previous &lt;i&gt;current&lt;/i&gt; release) will be supported through December 23, 2019.&lt;/p&gt; &lt;p&gt;For more information, please visit the following:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/3.0/html-single/getting_started_guide/index"&gt;Get Started with .NET Core 3.0&lt;/a&gt;!&lt;/li&gt; &lt;li&gt;Visit &lt;a href="http://www.redhatloves.net/"&gt;RedHatLoves.NET&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The Red Hat Developer Program &lt;a href="https://developers.redhat.com/products/dotnet/overview/"&gt;technology page on .NET Core&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/category/programming/dot-net/"&gt;Red Hat Developer blogs&lt;/a&gt; on .NET Core&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/3.0/html-single/release_notes_for_rpms/index"&gt;Product Documentation for .NET Core&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;For complete information on the updates and changes made in this release, please visit the &lt;a href="https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.0/3.0.0.md"&gt;project page on GitHub&lt;/a&gt;. Any important differences between Red Hat’s official source build and other builds that are available will be &lt;a href="https://developers.redhat.com/products/dotnet/docs-and-apis/"&gt;detailed in our release notes&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#038;title=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" data-a2a-url="https://developers.redhat.com/blog/2019/10/21/net-core-3-0-for-red-hat-enterprise-linux-7-now-available/" data-a2a-title=".NET Core 3.0 for Red Hat Enterprise Linux 7 now available"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/21/net-core-3-0-for-red-hat-enterprise-linux-7-now-available/"&gt;.NET Core 3.0 for Red Hat Enterprise Linux 7 now available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/md-52msxjlk" height="1" width="1" alt=""/&gt;</content><summary>We are very excited to announce the general availability of .NET Core 3.0 for Red Hat Enterprise Linux 7! .NET Core is the open source, cross-platform .NET platform for building microservices. .NET Core is designed to provide the best performance at scale for applications that use microservices and containers. .NET Core 3.0 is available today on Red Hat Enterprise Linux 7 via “yum” in the /dotnet ...</summary><dc:creator>Bob Davis</dc:creator><dc:date>2019-10-21T15:41:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/21/net-core-3-0-for-red-hat-enterprise-linux-7-now-available/</feedburner:origLink></entry><entry><title>3 steps toward improving container security</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OH0z1FD1tMI/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><author><name>David Strom</name></author><id>searchisko:content:id:jbossorg_blog-3_steps_toward_improving_container_security</id><updated>2019-10-21T07:00:12Z</updated><published>2019-10-21T07:00:12Z</published><content type="html">&lt;p&gt;As developers increasingly make use of containers, securing them becomes more and more important. Gartner has named &lt;a href="https://www.csoonline.com/article/3268922/why-securing-containers-and-microservices-is-a-challenge.html"&gt;container security&lt;/a&gt; one of its &lt;a href="https://www.gartner.com/doc/3900996/top--security-projects-"&gt;top 10 concerns for this year&lt;/a&gt; in this report, which isn’t surprising given their popularity in producing lightweight and reusable code and lowering app dev costs.&lt;/p&gt; &lt;p&gt;In this article, I’ll look at the three basic steps involved in container security: securing the build environment, securing the underlying container hosts, and securing the actual content that runs inside each container. To be successful at mastering container security means paying attention to all three of these elements. &lt;span id="more-639107"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;If you step back a moment, container security isn’t all that different from ordinary application security. If you replace the appropriate words in the above paragraph, you could have written this post 10, 20, or even 30 years ago with a few other modifications. But containers do have a few oddities and new twists that are worth highlighting. To get started, I suggest &lt;a href="https://developers.redhat.com/blog/2018/12/19/security-considerations-for-container-runtimes/"&gt;you listen to the recorded talk by Red Hat’s Dan Walsh about general container security considerations&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;1. Securing the build environment&lt;/h2&gt; &lt;p&gt;Let’s start with securing the build environment itself. As with any app dev process, adding security at the beginning of a project makes the most sense, rather than having to bolt something on after most of the code has been written. Using the right methods from the start increases your effectiveness as a programmer and makes for a smoother application development process.&lt;/p&gt; &lt;p&gt;This first component has three separate pieces of its own: First, you need to&lt;b&gt; understand your DevOps workflows.&lt;/b&gt; This includes how you construct your containers, where you obtain their code, and how often the underlying code changes. One of the attractions of containers is their “just-in-time” aspects, where you can pull code from a variety of online sources. How do you know that this code has been properly vetted for general use, and then how do you know that your own particular DevOps process isn’t introducing some specific corner case that will open up a backdoor? That should be your focus in these workflow exercises.&lt;/p&gt; &lt;p&gt;Part of securing your workflow is being able to use discovery tools (e.g., Red Hat’s Quay.io) to ensure that the containers are managed securely and scale up properly. This tool automatically scans each container for security vulnerabilities. &lt;a href="https://developers.redhat.com/blog/2019/06/26/using-quay-io-to-find-vulnerabilities-in-your-container-images/"&gt;This article walks you through how to use Quay&lt;/a&gt; and what to expect.&lt;/p&gt; &lt;p&gt;The second situation involves &lt;b&gt;examining your access rules and permissions for both users and the actual apps themselves&lt;/b&gt;. If you track security breaches, you will realize this is a common theme just among ordinary SaaS apps. How many unsecured web services storage containers have been leaked online, thanks to no actual password or “access all” permissions that haven’t been locked down? Far too many, and this can be true in the container world, where the number of apps can be overwhelming.&lt;/p&gt; &lt;p&gt;One must-do item is to &lt;strong&gt;examine the level of granularity you’ll need for the appropriate access controls&lt;/strong&gt;, both in terms of delivering the right levels of security for your apps as well as for the ultimate users. Do you know which portions of your code have root-level access? How about which portions &lt;strong&gt;actually need&lt;/strong&gt; root-level access? The different answers could mean a more or less secure container, and the optimum answer is as few as possible, approaching zero. If you use LDAP for your ordinary user and app access controls, you &lt;a href="https://developers.redhat.com/blog/2019/08/02/how-to-configure-ldap-user-authentication-and-rbac-in-red-hat-openshift-3-11/"&gt;might want to review the suggestions in this article about how to validate LDAP parameters&lt;/a&gt; and enable LDAP authentication in &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Finally, with hardening your build environment there is the &lt;b&gt;ability to use runtime protection&lt;/b&gt;. Like the tools for ordinary apps, some of these tools focus on static scans, while others offer continuous integration using your chosen development environment. The continuous method is better, given the dynamic nature of container code, and it could also be a major time saver when you have to perform an app audit. A good runtime protection container tool should be able to flag abnormal behavior, remediate potential threats, and isolate peculiar events for further forensic analysis.&lt;/p&gt; &lt;h2&gt;2. Securing the underlying container hosts&lt;/h2&gt; &lt;p&gt;Once your build environment is secure, the next step is to harden the underlying hosts that run the container servers and services. Take a closer look at what your container provider offers in the way of security. These options may be part of the native Linux container and OpenShift security features, such as policies to prevent abuse of resources, setting up access control groups, and ensuring that you remove root access everywhere, or at least where it isn’t really needed. Many are the same familiar security practices that are part of the virtual machine world, so they shouldn’t come as a surprise. They just have a slightly different context from what you might have been used to before getting involved with containers. One recommended best practice, for example, is to only run containers with read-only images.&lt;/p&gt; &lt;h2&gt;3. Securing the content that runs inside each container&lt;/h2&gt; &lt;p&gt;The final step is to secure the content that is inside the containers. This isn&amp;#8217;t really all that different from securing ordinary apps but it does have a few oddities. You should limit the various Linux OS features that are running within your container, for example. Linux has a general-purpose, OS-level security screening tool called &lt;a href="https://lwn.net/Articles/656307/"&gt;seccomp that is worth reviewing as well&lt;/a&gt;. You should also enforce image source integrity protection so you can track what content has changed in your containers and know who was responsible.&lt;/p&gt; &lt;p&gt;I realize this is a lot of work, and moreover the work will involve getting familiar with multiple tools and multiple application and container and OS constructs, too. A good place to start is to examine the numerous third-party container security tools. Some of these are available from open source vendors and others from commercial vendors that can also assist in your security journey.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#038;title=3%20steps%20toward%20improving%20container%20security" data-a2a-url="https://developers.redhat.com/blog/2019/10/21/3-steps-toward-improving-container-security/" data-a2a-title="3 steps toward improving container security"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/21/3-steps-toward-improving-container-security/"&gt;3 steps toward improving container security&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OH0z1FD1tMI" height="1" width="1" alt=""/&gt;</content><summary>As developers increasingly make use of containers, securing them becomes more and more important. Gartner has named container security one of its top 10 concerns for this year in this report, which isn’t surprising given their popularity in producing lightweight and reusable code and lowering app dev costs. In this article, I’ll look at the three basic steps involved in container security: securin...</summary><dc:creator>David Strom</dc:creator><dc:date>2019-10-21T07:00:12Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/21/3-steps-toward-improving-container-security/</feedburner:origLink></entry><entry><title>Eclipse Vert.x 3.8.1 update for Red Hat Runtimes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lC4uHOe-u1Q/" /><category term="Eclipse Vert.x" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="reactive programming" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><author><name>Syed M Shaaf</name></author><id>searchisko:content:id:jbossorg_blog-eclipse_vert_x_3_8_1_update_for_red_hat_runtimes</id><updated>2019-10-21T06:59:57Z</updated><published>2019-10-21T06:59:57Z</published><content type="html">&lt;p&gt;The latest update to Red Hat Runtimes has arrived and now supports Eclipse Vert.x 3.8.1.&lt;/p&gt; &lt;p&gt;Red Hat Runtimes provides application developers with a variety of application runtimes and enables them to run on the &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://developers.redhat.com/openshift/" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s new?&lt;/h2&gt; &lt;p&gt;With this update, some of the new additions and updates include:&lt;span id="more-638037"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Vert.x Web API Contract&lt;/strong&gt; extends Vert.x Web to support &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://www.openapis.org/" target="_blank" rel="noopener noreferrer"&gt;OpenAPI 3&lt;/a&gt;, bringing you a simple interface to build your Vert.x router and add security and validation handlers. Now you can define your API with OpenAPI and use them directly into your Vert.x code. Its a powerful feature for not just API first driven development but also to harness the Vert.x non-blocking API to build robust and high-performance backends.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Vert.x SQL client&lt;/strong&gt; &lt;ul&gt; &lt;li class="ql-indent-1"&gt;The client is the evolution of the legendary &lt;em&gt;Reactive PostgreSQL Client&lt;/em&gt; and provides &lt;ul&gt; &lt;li class="ql-indent-2"&gt;The Reactive PostgreSQL Client&lt;/li&gt; &lt;li class="ql-indent-2"&gt;The Reactive MySQL Client&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li class="ql-indent-1"&gt;These implementations offer high-performance non-blocking access to PostgreSQL and MySQL.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Vert.x Mail client &lt;/strong&gt;&lt;/li&gt; &lt;li&gt;The client enables a few additional auth methods like DIGEST-MD5, TLS, and SSL and is completely asynchronous. The client also allows connection pooling to keep connections open and reuse.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Openshift Container Platform&lt;/strong&gt;: Also, this latest release is verified on OCP 4.1 and support for OCP 4.2 will be included soon after it is available.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Documentation&lt;/h2&gt; &lt;p&gt;For more details, take a look at the supported configurations and component details&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat Runtimes Eclipse Vert.x Supported &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://access.redhat.com/articles/3985941" target="_blank" rel="noopener noreferrer"&gt;Configurations&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Red Hat Runtimes Eclipse Vert.x 3.8.1 &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://access.redhat.com/articles/4486451" target="_blank" rel="noopener noreferrer"&gt;Component Details&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you are new to the Eclipse Vert.x and would like to learn more, go to our live learning portal for a guided &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://learn.openshift.com/middleware/courses/middleware-vertx/" target="_blank" rel="noopener noreferrer"&gt;tutorial&lt;/a&gt; or the &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://docs.redhat.com/" target="_blank" rel="noopener noreferrer"&gt;documentation&lt;/a&gt; for details.&lt;/p&gt; &lt;h2&gt;Developer interactive learning scenarios&lt;/h2&gt; &lt;p&gt;These &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://learn.openshift.com/middleware/courses/middleware-vertx/" target="_blank" rel="noopener noreferrer"&gt;self-paced scenarios&lt;/a&gt; provide you with a preconfigured Red Hat OpenShift instance, accessible from your browser without any downloads or configuration. Use it to learn and experiment with Vert.x or learn about other technologies within Red Hat Runtimes and see how it helps solve real-world problems.&lt;/p&gt; &lt;h2&gt;Getting support for Eclipse Vert.x&lt;/h2&gt; &lt;p&gt;Support for Eclipse Vert.x is available to Red Hat customers through a subscription to &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://www.redhat.com/en/products/runtimes" target="_blank" rel="noopener noreferrer"&gt;Red Hat Runtimes&lt;/a&gt;. Contact your local Red Hat representative or &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://www.redhat.com/en/about/contact/sales" target="_blank" rel="noopener noreferrer"&gt;Red Hat Sales&lt;/a&gt; for details on how you can enjoy the world-class support offered by Red Hat and its worldwide partner network.&lt;/p&gt; &lt;p&gt;Moving forward, customers can expect support for Eclipse Vert.x and other runtimes according to the &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://access.redhat.com/support/policy/updates/jboss_notes/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Product Update and Support Lifecycle&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;The people behind Red Hat’s Runtimes and Eclipse Vert.x support&lt;/h3&gt; &lt;p&gt;This offering was produced by Red Hat’s Runtimes product and engineering team along with the &lt;a href="https://vertx.io/"&gt;Eclipse Vert.x&lt;/a&gt; upstream community, and involved many hours of development, testing, documentation writing, testing some more, and working with the wider Red Hat community of customers, partners, and Vert.x developers to incorporate contributions, both big and small. We are glad you have chosen to use it and hope that it meets or exceeds your expectations!&lt;/p&gt; &lt;h3&gt;More about Red Hat Runtimes&lt;/h3&gt; &lt;p&gt;&lt;a href="https://www.redhat.com/en/products/runtimes"&gt;Red Hat Runtimes&lt;/a&gt; provides a set of comprehensive frameworks, runtimes, and programming languages for developers, architects, and IT leaders with cloud-native application development needs. It is designed to accelerate the development and delivery of business solutions. The following are the different runtimes and enablers for you to create your microservices with Red Hat Runtimes. Head over to this &lt;a href="https://www.redhat.com/en/products/runtimes"&gt;link&lt;/a&gt; for more details.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone wp-image-641327 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-1024x475.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-300x139.png" alt="" width="870" height="403" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-300x139.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-768x357.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-1024x475.png 1024w" sizes="(max-width: 870px) 100vw, 870px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#038;title=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" data-a2a-url="https://developers.redhat.com/blog/2019/10/21/eclipse-vert-x-3-8-1-update-for-red-hat-runtimes/" data-a2a-title="Eclipse Vert.x 3.8.1 update for Red Hat Runtimes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/21/eclipse-vert-x-3-8-1-update-for-red-hat-runtimes/"&gt;Eclipse Vert.x 3.8.1 update for Red Hat Runtimes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lC4uHOe-u1Q" height="1" width="1" alt=""/&gt;</content><summary>The latest update to Red Hat Runtimes has arrived and now supports Eclipse Vert.x 3.8.1. Red Hat Runtimes provides application developers with a variety of application runtimes and enables them to run on the Red Hat OpenShift Container Platform. What’s new? With this update, some of the new additions and updates include: Vert.x Web API Contract extends Vert.x Web to support OpenAPI 3, bringing you...</summary><dc:creator>Syed M Shaaf</dc:creator><dc:date>2019-10-21T06:59:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/21/eclipse-vert-x-3-8-1-update-for-red-hat-runtimes/</feedburner:origLink></entry><entry><title>Extend C++ capabilities with LLVM STLExtras.h</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Ez-quzscw6s/" /><category term="C++" scheme="searchisko:content:tags" /><category term="Clang/LLVM" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><author><name>Jan Kratochvil</name></author><id>searchisko:content:id:jbossorg_blog-extend_c_capabilities_with_llvm_stlextras_h</id><updated>2019-10-18T07:00:29Z</updated><published>2019-10-18T07:00:29Z</published><content type="html">&lt;p&gt;The &lt;a href="https://llvm.org/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://llvm.org/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGy1QndY4UmIYMP-47-JCDe0FJcNQ"&gt;LLVM compiler project&lt;/a&gt; provides a &lt;a href="https://github.com/llvm-mirror/llvm/blob/master/include/llvm/ADT/STLExtras.h" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/master/include/llvm/ADT/STLExtras.h&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFCA_oggXUkXnzRlZVNJgud7-R9XA"&gt;header file called STLExtras.h&lt;/a&gt; that extends the capabilities of C++ without any dependency on the rest of LLVM. In this article, we take a quick look at its basic functionality.&lt;span id="more-639587"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;LLVM STLExtras.h&lt;/h2&gt; &lt;p&gt;For the &lt;code&gt;/usr/include/llvm/ADT/STLExtras.h&lt;/code&gt; file, you need to install:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Fedora: &lt;code&gt;dnf install llvm-devel&lt;/code&gt;&lt;/li&gt; &lt;li&gt;RHEL-8: &lt;code&gt;yum install llvm-devel&lt;/code&gt;&lt;/li&gt; &lt;li&gt;RHEL-7/8 with &lt;a href="https://developers.redhat.com/HW/ClangLLVM-RHEL-7/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://developers.redhat.com/HW/ClangLLVM-RHEL-7/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFl8pCz2sRfZS0pi9pww75BDtXsbw"&gt;LLVM toolset 7.0&lt;/a&gt;: &lt;code&gt;yum install llvm-toolset-7.0-{clang,llvm-devel};scl enable llvm-toolset-7.0 -- clang++ -I$(scl enable llvm-toolset-7.0 -- llvm-config --includedir) -std=c++17 ...&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;llvm::reverse&lt;/h2&gt; &lt;p&gt;= reverse range-based for loop&lt;/p&gt; &lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/C%2B%2B11" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.wikipedia.org/wiki/C%252B%252B11&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHE0u7b18Ycy_XBKMVpUmy_T7K2MA"&gt;C++11&lt;/a&gt; brought &lt;a href="https://en.cppreference.com/w/cpp/language/range-for" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.cppreference.com/w/cpp/language/range-for&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE1LrneBrh6byiNYcQeV7h8GIIJZw"&gt;range-based for loops&lt;/a&gt;. We no longer have to deal with iterators in the most common cases.&lt;/p&gt; &lt;p&gt;See also &lt;a href="https://godbolt.org/z/GgIB-R" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://godbolt.org/z/GgIB-R&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFfhkHXHP2Ex29rlgCzfiy0YeUodg"&gt;online compiler sample code.&lt;/a&gt;&lt;/p&gt; &lt;pre&gt; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; // C++11 initializer list // C++98 iterator: 1 2 3 4 for (std::vector&lt;u&gt;&lt;/u&gt;::iterator it = vec.begin(); it != vec.end(); ++it) std::cout &amp;#60;&amp;#60; *it; // C++11 range-based for loop: 1 2 3 4 for (int i : vec) std::cout &amp;#60;&amp;#60; i; &lt;/pre&gt; &lt;p&gt;Except&amp;#8230; when we need to iterate in the opposite way. C++11 somehow forgot about that. Here comes LLVM with its &lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L273" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L273&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGYDyvzBn0Ogb1Us1lVGIlsqYfXRg"&gt;llvm::reverse&lt;/a&gt; container adapter.&lt;/p&gt; &lt;p&gt;See also &lt;a href="https://godbolt.org/z/TX59Jv" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://godbolt.org/z/TX59Jv&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFtm7gjJtJ4WCILJ8dpItFKTd4IwA"&gt;online compiler sample code.&lt;/a&gt;&lt;/p&gt; &lt;pre&gt; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; // Reverse range-based for loop - llvm::reverse: 4 3 2 1 for (int i : llvm::reverse(vec)) std::cout &amp;#60;&amp;#60; i; } &lt;/pre&gt; &lt;h2&gt;Range-based algorithms&lt;/h2&gt; &lt;p&gt;= &lt;code&gt;vec.begin(),vec.end()&lt;/code&gt; → &lt;code&gt;vec&lt;/code&gt;&lt;/p&gt; &lt;p&gt;It&amp;#8217;s a bit annoying to always write both &lt;code&gt;begin()&lt;/code&gt; and &lt;code&gt;end()&lt;/code&gt; for container algorithms, right?&lt;/p&gt; &lt;pre&gt; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; std::sort(vec.begin(),vec.end()); // or: std::sort(vec.begin(),vec.end(), std::greater&lt;u&gt;&lt;/u&gt;()); &lt;/pre&gt; &lt;p&gt;The problem is solved already; it really is that simple:&lt;/p&gt; &lt;pre&gt;#define LLVM_DISABLE_ABI_BREAKING_CHECKS_ENFORCING 1 // no LLVM libraries needed #include &amp;#60;llvm/ADT/STLExtras.h&amp;#62; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; llvm::sort(vec); // or: llvm::sort(vec, std::greater&lt;u&gt;&lt;/u&gt;()); &lt;/pre&gt; &lt;p&gt;It applies to all the C++ algorithms: ­&lt;a href="http://www.cplusplus.com/reference/algorithm/sort/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/sort/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE34qqxtdZxZCkRjtCIoykhcgLIhg"&gt;std::sort&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/for_each/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/for_each/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHMEDxCzGvNIGnlxZ--BEXeDIxCKw"&gt;std::for_each&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/all_of/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/all_of/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFwZrw3iXvWmCu15vLmf7Go5O5s4g"&gt;std::all_of&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/any_of/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/any_of/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFqk66h8hbXzieTbaoDcK-uF862ug"&gt;std::any_of&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/none_of/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/none_of/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHAWgXrOEDF35MOpCSFtOaZK_EcOA"&gt;std::none_of&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/find/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHIiJKe0MuM8PdHfh64ZFb6M6tmQw"&gt;std::find&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/find_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGBWpLvsN41KvbdXr7iuJMRIs5eTg"&gt;std::find_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/find_if_not/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find_if_not/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHlIAiuyR-bDpaMKlsCVYP1aaAysQ"&gt;std::find_if_not&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/remove_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/remove_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFW_EvNP43yygHH4XEvd_1Ex4lsdQ"&gt;std::remove_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/copy_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/copy_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHFqqU28JjWZ87HAqyEcQRaNrb8Iw"&gt;std::copy_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/copy/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/copy/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFhSIxPYNTOa4k6b6BL5Q5Yb95ZwA"&gt;std::copy&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/count/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/count/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE21v3xHZ2bfJolTEjLZJeDQCtwoA"&gt;std::count&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/count_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/count_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGVV4MBWrjaIeEDZpn4KruLGOa0vg"&gt;std::count_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/transform/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/transform/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE926KuJ_XL2LYBXuOFxcy2FwNwDg"&gt;std::transform&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/partition/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/partition/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGz3VpxkIa3mL5aVuNxFgAoWylhVg"&gt;std::partition&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/lower_bound/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/lower_bound/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHEvwxkwo305YahXmyIVxUdqZYK_w"&gt;std::lower_bound&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/upper_bound/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/upper_bound/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNG__RZcYrmNBIwx9qIMX8agt65L_g"&gt;std::upper_bound&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It is &lt;a href="https://en.cppreference.com/w/cpp/experimental/ranges" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.cppreference.com/w/cpp/experimental/ranges&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFKpx1k5TvxJPTr24jt_Ym-3e2kjQ"&gt;expected as &lt;code&gt;std::ranges::&lt;/code&gt; in C++20&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Additionally, it provides:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L1221" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L1221&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGR1Ip99rGfRx9nhhNs3xn3K5pVTQ"&gt;is_contained&lt;/a&gt; = &lt;a href="http://www.cplusplus.com/reference/algorithm/find/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find/&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNEHoVLEYXKATRPYVBIpw9iO8bvx7A"&gt;std::find&lt;/a&gt; with a &lt;code&gt;bool&lt;/code&gt; result&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L1306" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L1306&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNHaIWq7In18keXsR6gCypKVUdohdw"&gt;is_splat &lt;/a&gt;= return a &lt;code&gt;bool&lt;/code&gt; whether all elements in a container are the same&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L1324" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L1324&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNGA5weBR4Frb3Sy25nU0gbvWhgM4w"&gt;erase_if &lt;/a&gt;= &lt;a href="http://www.cplusplus.com/reference/algorithm/remove_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/remove_if/&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNF-HAt98oOYfToCDvn7UbeSk7F-nQ"&gt;std::remove_if&lt;/a&gt; with more convient calling (&lt;a href="https://en.cppreference.com/w/cpp/experimental/lib_extensions_2#Uniform_container_erasure" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.cppreference.com/w/cpp/experimental/lib_extensions_2%23Uniform_container_erasure&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNGuxOhCSfInUNvsiGXzRG1-0jZCjA"&gt;expected in C++20&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;See also &lt;a href="https://godbolt.org/z/_WIEsA" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://godbolt.org/z/_WIEsA&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNExAK3kk002i0Tpv_swDxl6K1s6Gg"&gt;online compiler sample code.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#038;title=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" data-a2a-url="https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/" data-a2a-title="Extend C++ capabilities with LLVM STLExtras.h"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/"&gt;Extend C++ capabilities with LLVM STLExtras.h&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Ez-quzscw6s" height="1" width="1" alt=""/&gt;</content><summary>The LLVM compiler project provides a header file called STLExtras.h that extends the capabilities of C++ without any dependency on the rest of LLVM. In this article, we take a quick look at its basic functionality. LLVM STLExtras.h For the /usr/include/llvm/ADT/STLExtras.h file, you need to install: Fedora: dnf install llvm-devel RHEL-8: yum install llvm-devel RHEL-7/8 with LLVM toolset 7.0: yum i...</summary><dc:creator>Jan Kratochvil</dc:creator><dc:date>2019-10-18T07:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/</feedburner:origLink></entry><entry><title>New features in .NET Core 3.0 on Linux</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zAmbhMOnfM4/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="linux" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-new_features_in_net_core_3_0_on_linux</id><updated>2019-10-17T07:05:31Z</updated><published>2019-10-17T07:05:31Z</published><content type="html">&lt;p&gt;.NET Core 3.0 brings many exciting &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0"&gt;new features&lt;/a&gt;, including a &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8"&gt;new major release of C#&lt;/a&gt;, &lt;a href="https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/"&gt;improved performance&lt;/a&gt; and support for &lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/"&gt;building Windows desktop applications&lt;/a&gt; (on Windows). In this article, we’ll look at interesting new features for Linux and Linux container users.&lt;span id="more-629907"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Faster and smaller SDK&lt;/h3&gt; &lt;p&gt;The SDK is smaller and faster. Previous versions of .NET Core used NuGet packages when building an application. These NuGet packages contained both reference assemblies (describing the API) and implementation assemblies. .NET Core 3.0 uses references packs that come with the SDK. Because these packs don’t include an implementation, they are smaller than the NuGet packages. This makes the SDK smaller (in case NuGet packages were included with the SDK) or faster (in case NuGet packages had to be downloaded from nuget.org).&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/dotnet/source-build/"&gt;Source build .NET Core&lt;/a&gt; (like on Red Hat Enterprise Linux, Red Hat OpenShift, and &lt;a href="https://fedoraloves.net/"&gt;Fedora .NET SIG&lt;/a&gt;) now includes the ASP.NET Core framework. This reduces time to build ASP.NET Core applications (no more nuget.org downloads), speeds up these applications (AOT compilation), and provides security fixes via package update (instead of having to rebuild the application).&lt;/p&gt; &lt;h3&gt;Framework-dependent executables, single file publish, trimming&lt;/h3&gt; &lt;p&gt;With previous versions, a native executable was only included when publishing a self-contained application. Now, a native executable is also included with framework-dependent applications:&lt;/p&gt; &lt;pre&gt;$ dotnet new console -o console $ cd console $ dotnet publish $ bin/Debug/netcoreapp3.0/publish/console Hello World! &lt;/pre&gt; &lt;p&gt;By default, this native executable is for the platform you are running on. It’s possible to build a native executable for a different platform (like Windows) by specifying a runtime id (&lt;code&gt;-r&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;$ dotnet publish -r win-x64 --no-self-contained $ ls /tmp/console3/bin/Debug/netcoreapp3.0/win-x64/publish/ console3.deps.json console3.dll console3.exe console3.pdb console3.runtimeconfig.json &lt;/pre&gt; &lt;p&gt;Note that we’re passing the &lt;code&gt;--no-self-contained&lt;/code&gt; flag in order to build a framework-dependent application. Without it, the application would be self-contained (which means it includes the runtime).&lt;/p&gt; &lt;p&gt;If you want a native executable that works across a range of Linux distributions, you can specify &lt;code&gt;linux-x64&lt;/code&gt; as the rid. This executable depends on the GNU C library, which is used on many distributions (including Fedora and RHEL). If your executable is for a musl-based distribution, like Alpine, you can specify the &lt;code&gt;linux-musl-x64&lt;/code&gt; rid.&lt;/p&gt; &lt;p&gt;Both self-contained and framework-dependent application support packing the application into a single native executable. To do this, you can set the &lt;code&gt;PublishSingleFile&lt;/code&gt; property.&lt;/p&gt; &lt;pre&gt;$ dotnet publish -r win-x64 /p:PublishSingleFile=true $ ls -lh bin/Debug/netcoreapp3.0/win-x64/publish/*.exe -rwxrw-r--. 1 tmds tmds 66M Sep 13 09:08 bin/Debug/netcoreapp3.0/win-x64/publish/console.exe &lt;/pre&gt; &lt;p&gt;The previous command packed the entire application into a self-contained Windows executable. You can see from the size (66M) that the runtime is included.&lt;/p&gt; &lt;p&gt;The SDK can now also leverage &lt;a href="https://github.com/mono/linker"&gt;mono’s linker&lt;/a&gt; to detect unused assemblies. When we add the &lt;code&gt;PublishTrimmed&lt;/code&gt; property, our self-contained app shrinks to 26M.&lt;/p&gt; &lt;pre&gt;$ dotnet publish -r win-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true $ ls -lh bin/Debug/netcoreapp3.0/win-x64/publish/*.exe -rwxrw-r--. 1 tmds tmds 26M Sep 13 09:09 bin/Debug/netcoreapp3.0/win-x64/publish/console.exe &lt;/pre&gt; &lt;h3&gt;ARM64&lt;/h3&gt; &lt;p&gt;.NET Core adds support for Linux ARM64. The primary use case is Internet of Things (IoT) scenarios.&lt;/p&gt; &lt;h3&gt;SerialPort support&lt;/h3&gt; &lt;p&gt;The &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.io.ports.serialport?view=netcore-3.0"&gt;SerialPort&lt;/a&gt; class now also works on Linux. You can use this for example when running .NET Core on Raspberry Pi or other embedded Linux platforms.&lt;/p&gt; &lt;h3&gt;TLS 1.3&lt;/h3&gt; &lt;p&gt;When .NET Core runs on a system with &lt;a href="https://www.openssl.org/blog/blog/2018/09/11/release111/"&gt;OpenSSL 1.1.1&lt;/a&gt; (like recent versions of Fedora, and RHEL8) &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.security.sslstream?view=netcore-3.0"&gt;SslStream&lt;/a&gt; and &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient?view=netcore-3.0"&gt;HttpClient&lt;/a&gt; use TLS 1.3 when the peer supports it. TLS 1.3 improves connection time and security.&lt;/p&gt; &lt;h3&gt;Building systemd services&lt;/h3&gt; &lt;p&gt;.NET Core comes with templates for building workers, which are long-running services. The worker template (&lt;code&gt;dotnet new worker&lt;/code&gt;) has extension packages for building &lt;a href="https://devblogs.microsoft.com/aspnet/net-core-workers-as-windows-services/"&gt;Windows services&lt;/a&gt; and &lt;a href="https://devblogs.microsoft.com/dotnet/net-core-and-systemd/"&gt;systemd services&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;ReadyToRun&lt;/h3&gt; &lt;p&gt;The SDK now allows the application to be compiled ahead of time. This adds native code in the assemblies. It also means the code no longer has to be just-in-time compiled when it is first executed, which reduces startup time.&lt;/p&gt; &lt;p&gt;To publish a ready-to-run application, you need to specify a runtime identifier (which determines the native code you’ll generate) and the &lt;code&gt;/p:PublishReadyToRun=true&lt;/code&gt; argument.&lt;/p&gt; &lt;pre&gt;$ dotnet build -r linux-x64 /p:PublishReadyToRun=true &lt;/pre&gt; &lt;p&gt;By default, this publishes a self-contained application. To publish a framework dependent application, you can add &lt;code&gt;--no-self-contained&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;OpenShift’s .NET Core builder (&lt;a href="https://github.com/redhat-developer/s2i-dotnetcore"&gt;s2i-dotnetcore&lt;/a&gt;) can build ReadyToRun images by setting the new &lt;code&gt;DOTNET_PUBLISH_READYTORUN&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;GC in containers with low memory&lt;/h3&gt; &lt;p&gt;.NET Core 3.0 works better in containers with low memory allocation. Previous versions allocated a large heap per CPU and performed garbage collections (GCs) based on memory used versus memory available. This could lead to the application going out-of-memory (OOM). &lt;a href="https://devblogs.microsoft.com/dotnet/using-net-and-docker-together-dockercon-2019-update/"&gt;.NET Core 3.0 takes into account the memory limits when heaps are created&lt;/a&gt;. This means the heaps are smaller, and the number of heaps is limited depending on the memory allocated to the container.&lt;/p&gt; &lt;p&gt;Changing ASP.NET Core applications to use workstation garbage collector (GC) has been a way to work around this issue (workstation GC uses a single, smaller heap). This workaround is no longer necessary with .NET Core 3.0.&lt;/p&gt; &lt;p&gt;If you wonder what type of GC your app is using: by default ASP.NET Core applications (which use the &lt;code&gt;Microsoft.NET.Sdk.Web&lt;/code&gt; in the &lt;code&gt;csproj&lt;/code&gt; file) use server GC. Console applications (&lt;code&gt;Microsoft.NET.Sdk&lt;/code&gt;) default to workstation GC. When the application is running on a single processor (like a container with CPU allocated 1 or less), the runtime will automatically switch to workstation GC.&lt;/p&gt; &lt;h3&gt;GC on machines with more than 64 CPUs&lt;/h3&gt; &lt;p&gt;Windows APIs are based on &lt;a href="https://docs.microsoft.com/en-us/windows/win32/procthread/processor-groups"&gt;processor groups&lt;/a&gt; of up to 64 processors, while Linux APIs work with an arbitrary number of processors. In previous versions of .NET Core, the GC would artificially group processors on Linux to form processor groups. &lt;a href="https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/runtime/gccpugroup-element"&gt;By default&lt;/a&gt;, server GC would limit its number of threads to the number of processors in a single group (max 64). With .NET Core 3.0, the processor group emulation is removed from the GC, and server GC will match the number of processors allocated to the process (not limited to 64).&lt;/p&gt; &lt;h3&gt;Huge page support&lt;/h3&gt; &lt;p&gt;On systems that are configured with &lt;a href="https://www.kernel.org/doc/Documentation/vm/hugetlbpage.txt"&gt;huge page support&lt;/a&gt;, the .NET GC can be configured to allocate huge pages by setting the environmental variable &lt;code&gt;COMPlus_GCLargePages&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;. Because memory is reserved when the application starts the GC needs to know how much memory it can use. The runtime assumes some limits when running in a container. If you’re running outside a container, you need to provide these this using &lt;a href="https://devblogs.microsoft.com/dotnet/running-with-server-gc-in-a-small-container-scenario-part-1-hard-limit-for-the-gc-heap/"&gt;COMPlus_GCHeapHardLimit/COMPlus_GCHeapHardLimitPercent&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Diagnostic tools&lt;/h3&gt; &lt;p&gt;With .NET Core 3.0, Microsoft is &lt;a href="https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/"&gt;providing&lt;/a&gt; cross-platform command-line tools for diagnostics: &lt;a href="https://github.com/dotnet/diagnostics/blob/master/documentation/dotnet-dump-instructions.md"&gt;dotnet-dump&lt;/a&gt; (for collecting and analyzing dumps), &lt;a href="https://github.com/dotnet/diagnostics/blob/master/documentation/dotnet-trace-instructions.md"&gt;dotnet-trace&lt;/a&gt; (for collecting traces), and &lt;a href="https://github.com/dotnet/diagnostics/blob/master/documentation/dotnet-counters-instructions.md"&gt;dotnet-counters&lt;/a&gt; (for live viewing of performance counters).&lt;/p&gt; &lt;p&gt;For example, the following commands show how to install &lt;code&gt;dotnet-dump&lt;/code&gt;, use it to collect a dump from the running .NET Core application &lt;code&gt;console&lt;/code&gt;, load the dump, and show a managed stack trace.&lt;/p&gt; &lt;pre&gt;$ dotnet tool install -g dotnet-dump $ dotnet dump collect -p $(pidof console) Writing minidump with heap to /tmp/core_20190911_104217 Complete $ dotnet dump analyze /tmp/core_20190911_104217 Loading core dump: /tmp/core_20190911_104217 ... Ready to process analysis commands. Type 'help' to list available commands or 'help [command]' to get detailed help on a command. Type 'quit' or 'exit' to exit the session. &amp;#62; clrstack OS Thread Id: 0x3f4f (0) Child SP IP Call Site 00007FFE05DB3068 00007fe0f046c83c [HelperMethodFrame: 00007ffe05db3068] System.Threading.Thread.SleepInternal(Int32) 00007FFE05DB31B0 00007FE0760B580B System.Threading.Thread.Sleep(Int32) 00007FFE05DB31C0 00007FE0765C007D console.Program.Main(System.String[]) [/tmp/console/Program.cs @ 9] 00007FFE05DB34A8 00007fe0ef98df83 [GCFrame: 00007ffe05db34a8] 00007FFE05DB39A0 00007fe0ef98df83 [GCFrame: 00007ffe05db39a0] &amp;#62; &lt;/pre&gt; &lt;p&gt;As you can see, &lt;code&gt;console&lt;/code&gt; is calling &lt;code&gt;Thread.Sleep&lt;/code&gt; from &lt;code&gt;Program.Main&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;Conclusion&lt;/h3&gt; &lt;p&gt;Here we covered several interesting features of .NET Core 3.0 on Linux and Linux containers. For a broader picture, check out the &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0"&gt;what’s new in .NET Core 3.0&lt;/a&gt; documentation.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#038;title=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" data-a2a-url="https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/" data-a2a-title="New features in .NET Core 3.0 on Linux"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/"&gt;New features in .NET Core 3.0 on Linux&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zAmbhMOnfM4" height="1" width="1" alt=""/&gt;</content><summary>.NET Core 3.0 brings many exciting new features, including a new major release of C#, improved performance and support for building Windows desktop applications (on Windows). In this article, we’ll look at interesting new features for Linux and Linux container users. Faster and smaller SDK The SDK is smaller and faster. Previous versions of .NET Core used NuGet packages when building an applicatio...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2019-10-17T07:05:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/</feedburner:origLink></entry><entry><title>CI/CD for .NET Core container applications on Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/PCNVKx067Xo/" /><category term=".net" scheme="searchisko:content:tags" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="container" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="DotNet" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>chgan</name></author><id>searchisko:content:id:jbossorg_blog-ci_cd_for_net_core_container_applications_on_red_hat_openshift</id><updated>2019-10-17T07:00:48Z</updated><published>2019-10-17T07:00:48Z</published><content type="html">&lt;p&gt;Many people have done continuous integration and continuous delivery (CI/CD) for .NET Core, but they still may wonder how to implement this process in &lt;a href="https://developers.redhat.com/products/openshift"&gt;Red Hat OpenShift Container Platform (OCP)&lt;/a&gt;. The information is out there, but it has not been structurally documented. In this article, we&amp;#8217;ll walk through the process.&lt;span id="more-631597"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;The CI/CD process for .NET applications&lt;/h2&gt; &lt;p&gt;The CI/CD process is fairly straightforward for .NET applications, with the following high-level process:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Start &lt;a href="https://jenkins.io" target="_blank" rel="noopener noreferrer"&gt;Jenkins&lt;/a&gt; to check out the Jenkinsfile.&lt;/li&gt; &lt;li&gt;Get the .NET Core source code from Gogs.&lt;/li&gt; &lt;li&gt;Continue according to the configured pipelines, which in this case means: &lt;ol type="a"&gt; &lt;li&gt;Run &lt;code&gt;dotnet restore&lt;/code&gt; to restore the NuGet packages from the Nexus repository.&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;dotnet publish&lt;/code&gt; to build and publish the &lt;code&gt;.dll&lt;/code&gt; files.&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;oc start-build&lt;/code&gt; to build the container image using the published &lt;code&gt;.dll&lt;/code&gt; files, which deploys or redeploys the container when the image build in the &lt;code&gt;Development&lt;/code&gt; project is completed.&lt;/li&gt; &lt;li&gt;Tag the image in the &lt;code&gt;Development&lt;/code&gt; project (in this example, the tag is &lt;code&gt;sampledotnet:UATReady-1.0.0&lt;/code&gt;), which triggers an image pulled from the &lt;code&gt;Development&lt;/code&gt; project to the user acceptance testing (&lt;code&gt;UAT&lt;/code&gt;) project.&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The required Openshift artifacts for the &lt;code&gt;Development&lt;/code&gt; and &lt;code&gt;UAT&lt;/code&gt; projects are preconfigured in the next section by using the sample template, which you can download from GitHub.&lt;/p&gt; &lt;h2&gt;Configuring OpenShift&lt;/h2&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You may wish to change some of the paths and parameters according to your environment.&lt;/p&gt; &lt;p&gt;To configure Red Hat OpenShift for our example CI/CD process, complete the following steps.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create your OpenShift projects:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;oc new-project demo-dev --display-name="Development" oc new-project demo-uat --display-name="UAT" oc new-project demo-tools --display-name="CI/CD Tools"&lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Apply the necessary permissions so Jenkins can modify and access the &lt;code&gt;Development&lt;/code&gt; and &lt;code&gt;UAT&lt;/code&gt; projects. We also need to grant permission for the &lt;code&gt;UAT&lt;/code&gt; project to pull images from the &lt;code&gt;Development&lt;/code&gt; project:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;oc policy add-role-to-user edit system:serviceaccount:demo-tools:jenkins -n demo-dev oc policy add-role-to-user edit system:serviceaccount:demo-tools:jenkins -n demo-uat oc policy add-role-to-user system:image-puller system:serviceaccount:demo-uat:default -n demo-dev&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If these lines result in &amp;#8220;Warning: ServiceAccount &amp;#8216;jenkins&amp;#8217; not found,&amp;#8221; this message can be ignored.&lt;/p&gt; &lt;ol start="3"&gt; &lt;li&gt;Deploy the necessary CI/CD tools:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;oc new-app -f https://raw.githubusercontent.com/chengkuangan/templates/master/gogs-persistent-template.yaml -p SKIP_TLS_VERIFY=true -p DB_VOLUME_CAPACITY=1Gi -p GOGS_VERSION=latest -p GOGS_LIMIT_CPU=300m -p GOGS_LIMIT_MEM=256Mi -p POSTGRESQL_LIMIT_CPU=200m -p POSTGRESQL_LIMIT_MEM=256Mi -n demo-tools oc new-app -f https://raw.githubusercontent.com/chengkuangan/templates/master/nexus3-persistent-templates.yaml -p NEXUS_VOLUME_CAPACITY=20Gi -p NEXUS_VERSION=latest -p NEXUS_LIMIT_CPU=1 -p NEXUS_LIMIT_MEM=3Gi -n demo-tools oc new-app jenkins-persistent -n demo-tools oc create -f https://raw.githubusercontent.com/chengkuangan/dotnetsample/master/templates/dotnet-jenkins-slave.yaml -n demo-tools&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Typically Microsoft Team Foundation Server (TFS) is used for source control management (SCM) in the Microsoft world; however, Gogs is used in this example mainly because there is no TFS available for me to try out. If TFS is the use case, you will need to install the TFS plugin for Jenkins to enable integration between Jenkins and TFS.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;Now, you can see your deployed tools in OpenShift:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634607 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-1024x474.png" style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-1024x474.png" alt="CI/CD tools in OpenShift." width="640" height="296" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-1024x474.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-300x139.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-768x356.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;You may receive an error where the .Net Jenkins slave could not be started due to a missing ImageStream, like so:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634707 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-1024x28.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-1024x28.png" alt="ImageStream dotnet-22-jenkins-slave-rhel7 is Not Found" width="640" height="18" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-1024x28.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-300x8.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-768x21.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;In this case, the image above shows an error in the Jenkins pod indicating that the ImageStream &lt;code&gt;dotnet-22-jenkins-slave-rhel7&lt;/code&gt; is not found. To fix this problem, you would change the following in the &lt;code&gt;dotnet-jenkin-slave.yaml&lt;/code&gt; file to use the correct URL path for the ImageStream setting:&lt;/p&gt; &lt;pre&gt;&amp;#60;image&amp;#62;dotnet-22-jenkins-slave-rhel7:latest&amp;#60;/image&amp;#62;&lt;/pre&gt; &lt;p&gt;Or, you can modify the ConfigMap created earlier (named &lt;code&gt;dotnet-jenkins-slave-22&lt;/code&gt; in this example).&lt;/p&gt; &lt;ol start="4"&gt; &lt;li&gt;Deploy the .NET Core artifacts using the .NET Core templates. Notice the parameter &lt;code&gt;--allow-missing-imagestream-tags=true&lt;/code&gt;, which indicates that we do not have any images available until we build them in when we run the pipelines:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;oc new-app -n demo-dev --allow-missing-imagestream-tags=true -f https://raw.githubusercontent.com/chengkuangan/dotnetsample/master/templates/dotnet-template.yaml -p IMAGE_PROJECT_NAME=demo-dev -p IMAGE_TAG=latest -p APPLICATION_NAME=sampledotnet oc new-app -n demo-uat --allow-missing-imagestream-tags=true -f https://raw.githubusercontent.com/chengkuangan/dotnetsample/master/templates/dotnet-nobuild-template.yaml -p IMAGE_PROJECT_NAME=demo-uat -p IMAGE_TAG=UATReady-1.0.0 -p APPLICATION_NAME=sampledotnet&lt;/pre&gt; &lt;ol start="5"&gt; &lt;li&gt;Log into Gogs and clone the .NET Core sample code from &lt;a href="https://github.com/chengkuangan/dotnetsample.git" target="_blank" rel="noopener noreferrer"&gt;https://github.com/chengkuangan/dotnetsample.git&lt;/a&gt;, shown below:&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634677 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-1024x634.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-1024x634.png" alt="The cloned .Net Core source code in Gogs" width="640" height="396" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-1024x634.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-300x186.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-768x476.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;ol start="6"&gt; &lt;li&gt;Create a Jenkins Pipeline item as shown here:&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634687 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-1024x463.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-1024x463.png" alt="Create a Jenkins Pipeline." width="640" height="289" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-1024x463.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-300x136.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-768x347.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;ol start="7"&gt; &lt;li&gt;Point the Git URL to the Gogs repository URL:&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634697 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-1024x951.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-1024x951.png" alt="Choose Pipeline Script from SCM lets you enter the Gogs service URL in the Repositories field." width="640" height="594" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-1024x951.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-300x279.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-768x713.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt; &lt;ol start="8"&gt; &lt;li&gt;Go the Jenkins item just created and click &lt;em&gt;Build Now&lt;/em&gt;. The .NET apps will be built and deployed in no time.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Changing the .NET project files&lt;/h2&gt; &lt;p&gt;The following summarizes the changes required in the .NET project files:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Introduce &lt;code&gt;RuntimeIdentifier&lt;/code&gt; into the existing &lt;code&gt;.csproj&lt;/code&gt; file to indicate that this project should be built for the Red Hat Enterprise Linux 7 environment:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt; &amp;#60;PropertyGroup&amp;#62;    &amp;#60;TargetFramework&amp;#62;netcoreapp2.2&amp;#60;/TargetFramework&amp;#62;    &amp;#60;AspNetCoreHostingModel&amp;#62;InProcess&amp;#60;/AspNetCoreHostingModel&amp;#62;    &amp;#60;DockerDefaultTargetOS&amp;#62;Linux&amp;#60;/DockerDefaultTargetOS&amp;#62;    &amp;#60;UserSecretsId&amp;#62;0a9f43ee-3c69-42b2-9766-c1b35bafeebd&amp;#60;/UserSecretsId&amp;#62;    &amp;#60;RuntimeIdentifier&amp;#62;rhel.7-x64&amp;#60;/RuntimeIdentifier&amp;#62;   &amp;#60;/PropertyGroup&amp;#62;&lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Add NuGet package configuration into the &lt;code&gt;.csproj&lt;/code&gt; and &lt;code&gt;.deps.json&lt;/code&gt; files to test whether the Nexus works as expected for NuGet packages. A snippet of this configuration change is shown below:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt; &amp;#60;ItemGroup&amp;#62;    &amp;#60;PackageReference Include="Microsoft.AspNetCore.App" Version="2.2.0"/&amp;#62;    &amp;#60;PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" /&amp;#62;    &amp;#60;PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.4.10" /&amp;#62;    &amp;#60;PackageReference Include="Dapper" Version="1.60.6"/&amp;#62; &amp;#60;/ItemGroup&amp;#62;&lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;For the .NET apps build process to refer to our predefined repository in Nexus, we need to create a &lt;code&gt;nuget.config&lt;/code&gt; file in the project&amp;#8217;s root folder. Use the following configuration as the bare minimum settings. Notice the &lt;code&gt;Nexus_Packages&lt;/code&gt; under &lt;code&gt;&amp;#60;packageSources&amp;#62;&lt;/code&gt;, where we set the proxy repository in the Nexus server:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt; &amp;#60;?xml version="1.0" encoding="utf-8"?&amp;#62; &amp;#60;configuration&amp;#62;    &amp;#60;packageRestore&amp;#62;       &amp;#60;!-- Allow NuGet to download missing packages --&amp;#62;        &amp;#60;add key="enabled" value="True" /&amp;#62;        &amp;#60;!-- Automatically check for missing packages during build in Visual Studio --&amp;#62;        &amp;#60;add key="automatic" value="True" /&amp;#62;    &amp;#60;/packageRestore&amp;#62;    &amp;#60;solution&amp;#62;       &amp;#60;add key="disableSourceControlIntegration" value="true" /&amp;#62;    &amp;#60;/solution&amp;#62;    &amp;#60;packageSources&amp;#62;        &amp;#60;add key="Nexus_Packages" value="http://nexus3-demo-tools.apps.ocp.demo.com/repository/nuget.org-proxy/" /&amp;#62;   &amp;#60;/packageSources&amp;#62; &amp;#60;/configuration&amp;#62;&lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Create the following Jenkinsfile in the project&amp;#8217;s root folder:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;#!groovy def DEV_PROJECTNAME = "demo-dev" def UAT_PROJECTNAME = "demo-uat" def BUILDCONFIGNAME="sampledotnet" def IMAGE_NAME="sampledotnet:latest" def UATIMAGENAME = "sampledotnet:UATReady-1.0.0" node('dotnet-22') {  stage('Clone') {    checkout scm  }  stage('Restore') {    sh "dotnet restore Test.csproj --configfile nuget.config --force --verbosity d"  }  stage('Publish') {     sh "dotnet publish Test.csproj --no-restore  -c Release /p:MicrosoftNETPlatformLibrary=Microsoft.NETCore.App"  }  stage('Build Image') {    sh "oc -n $DEV_PROJECTNAME start-build $BUILDCONFIGNAME --from-dir=./bin/Release/netcoreapp2.2/rhel.7-x64/publish --follow"    sh "oc -n $DEV_PROJECTNAME tag $DEV_PROJECTNAME/$IMAGE_NAME $UAT_PROJECTNAME/$UATIMAGENAME"  } }&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You may create the pipelines as part of YAML config in Openshift. However, I personally prefer to keep the Jenkinsfile as part of the project files in the source control system.&lt;/p&gt; &lt;p&gt;As illustrated in the above pipelines, instead of using the &lt;code&gt;dotnet publish&lt;/code&gt; command to perform both the restore and publish processes, a &lt;code&gt;--no-restore&lt;/code&gt; parameter is specified. This setup is to keep the command from calling the &lt;code&gt;dotnet restore&lt;/code&gt; command automatically, which would cause it to bypass the &lt;code&gt;nuget.config&lt;/code&gt; and directly connect to &lt;a href="http://nuget.org" target="_blank" rel="noopener noreferrer"&gt;nuget.org&lt;/a&gt; to download the &lt;code&gt;nuget&lt;/code&gt; packages. We introduce another stage before the Publish stage to explicitly call the &lt;code&gt;dotnet restore&lt;/code&gt; command by pointing to &lt;code&gt;nuget.config&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;I hope this article helps you implement CI/CD for .NET Core using Red Hat OpenShift Container Platform.&lt;/p&gt; &lt;h3&gt;References&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://docs.openshift.com/container-platform/3.11/creating_images/guidelines.html" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift Container Guidelines&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.2/html/getting_started_guide/index" target="_blank" rel="noopener noreferrer"&gt;.NET Core 2.2 Container Getting Started Guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/chengkuangan/dotnetsample" target="_blank" rel="noopener noreferrer"&gt;Sample dotnet project used in this tutorial&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish?tabs=netcore21" target="_blank" rel="noopener noreferrer"&gt;dotnet publish command guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore?tabs=netcore2x" target="_blank" rel="noopener noreferrer"&gt;dotnet restore command guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file" target="_blank" rel="noopener noreferrer"&gt;nuget.config reference&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/nuget/" target="_blank" rel="noopener noreferrer"&gt;NuGet documentation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#038;title=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/10/17/ci-cd-for-net-core-container-applications-on-red-hat-openshift/" data-a2a-title="CI/CD for .NET Core container applications on Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/17/ci-cd-for-net-core-container-applications-on-red-hat-openshift/"&gt;CI/CD for .NET Core container applications on Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/PCNVKx067Xo" height="1" width="1" alt=""/&gt;</content><summary>Many people have done continuous integration and continuous delivery (CI/CD) for .NET Core, but they still may wonder how to implement this process in Red Hat OpenShift Container Platform (OCP). The information is out there, but it has not been structurally documented. In this article, we’ll walk through the process. The CI/CD process for .NET applications The CI/CD process is fairly straightforwa...</summary><dc:creator>chgan</dc:creator><dc:date>2019-10-17T07:00:48Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/17/ci-cd-for-net-core-container-applications-on-red-hat-openshift/</feedburner:origLink></entry><entry><title>Getting Started with Cloud Native Development on OpenShift Container Platform (video)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WAl7tPA84Go/getting-started-with-cloud-native-development-on-openshift-video.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyStudio" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-getting_started_with_cloud_native_development_on_openshift_container_platform_video</id><updated>2019-10-17T05:00:00Z</updated><published>2019-10-17T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://vimeo.com/365029937" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="909" data-original-width="1600" height="181" src="https://1.bp.blogspot.com/-HUcjlBR850U/XZyZAxIFobI/AAAAAAAAwrk/UKdGL0ScDO0GnGMfC7OTPWKCfYHyzC0HACNcBGAsYHQ/s320/Screenshot%2B2019-10-08%2Bat%2B16.09.43.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;After hosting a webinar to kick start developers looking to get hands on with an easy to use Cloud Native developer tool chain, I wanted to share a step-by-step video with you. &lt;br /&gt;&lt;br /&gt;The video walks through the use of Red Hat Developers hosted tooling for Red Hat OpenShift Application Runtimes (RHOAR) used to automate the setup of a full cloud native development tool chain.&lt;br /&gt;&lt;br /&gt;First you'll use the Launcher to coordinate your setup, then choose a Spring Boot example application, create a git-based project with web hooks to push changes to an OpenShift Container Platform for automated build, test, and deployment using containers.&lt;br /&gt;&lt;br /&gt;Check it all out here, done in just under 10 minutes.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allow="autoplay; fullscreen" allowfullscreen="" frameborder="0" height="360" src="https://player.vimeo.com/video/365029937" width="640"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Enjoy and reach out if you have questions or comments.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=gEEmKMVnWfk:E-2Ag3a1QEU:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=gEEmKMVnWfk:E-2Ag3a1QEU:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=gEEmKMVnWfk:E-2Ag3a1QEU:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=gEEmKMVnWfk:E-2Ag3a1QEU:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/gEEmKMVnWfk" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WAl7tPA84Go" height="1" width="1" alt=""/&gt;</content><summary>After hosting a webinar to kick start developers looking to get hands on with an easy to use Cloud Native developer tool chain, I wanted to share a step-by-step video with you. The video walks through the use of Red Hat Developers hosted tooling for Red Hat OpenShift Application Runtimes (RHOAR) used to automate the setup of a full cloud native development tool chain. First you'll use the Launcher...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-10-17T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/gEEmKMVnWfk/getting-started-with-cloud-native-development-on-openshift-video.html</feedburner:origLink></entry><entry><title>New developer tools in Red Hat OpenShift 4.2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/yei-ZkgNBcY/" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="odo" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift 4.2" scheme="searchisko:content:tags" /><category term="Red Hat CodeReady Containers" scheme="searchisko:content:tags" /><author><name>David David</name></author><id>searchisko:content:id:jbossorg_blog-new_developer_tools_in_red_hat_openshift_4_2</id><updated>2019-10-16T13:00:57Z</updated><published>2019-10-16T13:00:57Z</published><content type="html">&lt;p&gt;Today’s&lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-expands-kubernetes-developer-experience-newest-version-red-hat-openshift-4"&gt; announcement&lt;/a&gt; of &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; 4.2 represents a major release for developers working with OpenShift and Kubernetes.  There is a new application development-focused user interface, new tools, and plugins for container builds, CI/CD pipelines, and serverless architecture.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignleft size-full wp-image-641377 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-1024x665.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift.gif" alt="application topology view in openshift" width="1130" height="734" /&gt;&lt;br /&gt; &lt;i&gt;Application topology view in developer perspective.&lt;/i&gt;&lt;span id="more-637847"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;New features include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;A new developer perspective &lt;/b&gt;so you can focus on the application. This view is focused on information and configuration developers need to know. There is an enhanced UI for application topology and application builds makes it easier for developers to build, deploy and visualize containerized applications and cluster resources.&lt;br /&gt; &lt;a href="https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/"&gt;See an in-depth review&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;b&gt;odo&lt;/b&gt;, a developer-focused command-line interface that simplifies application development on OpenShift. Using a “git push” style interaction, this CLI helps developers develop applications with on OpenShift without needing to understand the details of Kubernetes operations.&lt;br /&gt; &lt;a href="https://developers.redhat.com/products/odo"&gt;Get started with Odo&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Red Hat OpenShift Connector&lt;/b&gt; for Microsoft Visual Studio Code, JetBrains IDE (including IntelliJ) and Eclipse Desktop IDE, making it easier to plug into existing developer pipelines&lt;b&gt;. &lt;/b&gt;You can develop, build, debug, and deploy applications on OpenShift without leaving your favorite IDE.&lt;br /&gt; &lt;a href="https://developers.redhat.com/products/openshift-ide-extensions"&gt;Get the Red Hat OpenShift Connector for your IDE.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Red Hat OpenShift Deployment Extension for Microsoft Azure DevOps.&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Users of this DevOps toolchain can deploy their applications to Azure Red Hat OpenShift or any other OpenShift cluster directly from Microsoft Azure DevOps.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img class=" alignleft size-full wp-image-641257 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/vsplugin-openshift.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/vsplugin-openshift.gif" alt="VS Code Plugin for OpenShift" width="706" height="554" /&gt;&lt;/p&gt; &lt;p&gt;&lt;i&gt;Red Hat OpenShift connector plugin view in Visual Studio Code.&lt;/i&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/codeready-containers"&gt;Red Hat CodeReady Containers&lt;/a&gt; is an easy way to try or develop with Red Hat OpenShift on your local machine. A preconfigured OpenShift cluster is tailored for a laptop or desktop development making it easier to get going quickly with a personal cluster. It’s the easiest way to get a cluster for following our OpenShift tutorials.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2019/10/15/local-openshift/"&gt;See overview videos for installing and using CodeReady Containers on your OS&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Service Mesh&lt;/h2&gt; &lt;p&gt;OpenShift Service Mesh is based on Istio along with the Kiali and Jaeger projects and delivered via Operator. OpenShift Service Mesh provides traffic monitoring, access control, discovery, security, resiliency, tracing, and reporting to a group of services by running as container sidecars. You get those features without any custom code; no changes are required to the code of any of your services.&lt;/p&gt; &lt;h2&gt;Preview: OpenShift Serverless and OpenShift Pipelines&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Serverless: &lt;/b&gt;OpenShift Serverless lets you deploy applications that can scale to zero. Based on the Knative project, OpenShift Serverless gives you the Knative toolset but is easily installed via an Operator. OpenShift Serverless is available as an Operator on every OpenShift 4 cluster.  OpenShift Serverless ties into the developer-perspective available in OpenShift, with options for common workflows, such as Import from Git or Deploy an Image, allowing users to create serverless applications directly from the console.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Continuous integration and continuous delivery based on Tekton: &lt;/b&gt;In OpenShift, you have an alternative to Jenkins for CI/CD, called OpenShift Pipelines. Pipelines is based on the Tekton project and uses Operators as components in your automation. OpenShift Pipelines adopts the GitOps mindset with support for configuring the entire pipeline-as-code.  Each step is executed in its own container, so resources are only used when the step is running. This eliminates the need for a CI/CD server and gives control of the pipeline to the developer team. OpenShift Pipelines is available as an Operator in the OpenShift Operator Hub.&lt;/p&gt; &lt;p&gt;Learn about how to use these new tools and &lt;a href="https://developers.redhat.com/openshift/"&gt;application development with OpenShift at developers.redhat.com/openshift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#038;title=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" data-a2a-url="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/" data-a2a-title="New developer tools in Red Hat OpenShift 4.2"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/"&gt;New developer tools in Red Hat OpenShift 4.2&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/yei-ZkgNBcY" height="1" width="1" alt=""/&gt;</content><summary>Today’s announcement of Red Hat OpenShift 4.2 represents a major release for developers working with OpenShift and Kubernetes.  There is a new application development-focused user interface, new tools, and plugins for container builds, CI/CD pipelines, and serverless architecture. Application topology view in developer perspective. New features include: A new developer perspective so you can focus...</summary><dc:creator>David David</dc:creator><dc:date>2019-10-16T13:00:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/</feedburner:origLink></entry><entry><title>Tour of the Developer Perspective in the Red Hat OpenShift 4.2 web console</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/e5UlqbL1-dk/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift 4.2" scheme="searchisko:content:tags" /><author><name>Jan Kleinert</name></author><id>searchisko:content:id:jbossorg_blog-tour_of_the_developer_perspective_in_the_red_hat_openshift_4_2_web_console</id><updated>2019-10-16T12:58:57Z</updated><published>2019-10-16T12:58:57Z</published><content type="html">&lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/opdrYhIjqrg?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Of all of the new features of the &lt;a href="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/"&gt;Red Hat OpenShift 4.2 release&lt;/a&gt;, what I’ve been looking forward to the most are the developer-focused updates to the web console. If you’ve used&lt;a href="https://docs.openshift.com/container-platform/4.1/welcome/oce_about.html"&gt; OpenShift 4.1&lt;/a&gt;, then you’re probably already familiar with the updated Administrator Perspective, which is where you can manage workloads, storage, networking, cluster settings, and more.&lt;/p&gt; &lt;p&gt;The addition of the new Developer Perspective aims to give developers an optimized experience with the features and workflows they’re most likely to need to be productive. Developers can focus on higher level abstractions like their application and components, and then drill down deeper to get to the &lt;a href="https://developers.redhat.com/openshift/"&gt;OpenShift&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; resources that make up their application.&lt;/p&gt; &lt;p&gt;Let’s take a tour of the Developer Perspective and explore some of the key features.&lt;span id="more-637567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Topology view&lt;/h2&gt; &lt;p&gt;The Topology view presents an application-centric view of a project. With a project selected, the Topology view displays the different components that make up your application. You can see the name of the component as well as the pod status, build status (if applicable) and links to source code and routes when those are available. Components that are part of an application will all be in the same grouping, represented by the lighter-colored shape around the components in the screenshot below. The Kubernetes-recommended labels for applications and instances of applications are the basis for determining which components are in a grouping. You can optionally use the arrows to connect components within an application to help show relationships between components.&lt;/p&gt; &lt;h2&gt;&lt;img class=" aligncenter wp-image-637617 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-developer-console.png" alt="Application topology in OpenShift Developer Perspective" width="512" height="268" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-developer-console-300x157.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/h2&gt; &lt;h2&gt;Viewing information about a component&lt;/h2&gt; &lt;p&gt;When you click a component in Topology view, a side panel will appear with information about that component. In the screenshot below, you can see what appears on the Resources tab in the panel when the frontend deployment config is clicked.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637627 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/resources-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/resources-openshift-developer-console.png" alt="Resources view in OpenShift Developer Perspective" width="512" height="290" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/resources-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/resources-openshift-developer-console-300x170.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;There are links to pods, builds, services, and routes as well as shortcut links to view pod or build logs.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637637 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/build-logs-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/build-logs-openshift-developer-console.png" alt="Build log in openshift developer perspective" width="512" height="240" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/build-logs-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/build-logs-openshift-developer-console-300x141.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Adding components to a Kubernetes application&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;The Developer Perspective has several built-in ways to streamline the process of deploying applications, services, and databases. When you select &lt;em&gt;+Add &lt;/em&gt;in the left navigation menu, you’ll see the options that are available.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637647 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/add-components-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/add-components-openshift-developer-console.png" alt="Add components in openshift developer perspective" width="512" height="299" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/add-components-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/add-components-openshift-developer-console-300x175.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;There are options to build and deploy from code in a Git repository, to deploy a container image, to deploy from the developer catalog, or from a Dockerfile or YAML/JSON definitions. You can also easily deploy databases for your application to use. Clicking on most of these options will give you a wizard-style experience that prompts you for the necessary information.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637657 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/deploy-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/deploy-openshift-developer-console.png" alt="deploy-openshift-developer-console" width="512" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/deploy-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/deploy-openshift-developer-console-300x184.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;h2&gt;Viewing and creating builds&lt;/h2&gt; &lt;p&gt;The &lt;em&gt;Builds&lt;/em&gt; link in the left navigation gives quick access to existing build configurations as well as an option to create new ones.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637767 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/builds-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/builds-openshift-developer-console.png" alt="builds screen openshift-developer-console" width="512" height="236" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/builds-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/builds-openshift-developer-console-300x138.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;From that page, you can drill down into each build config for more information on the builds, environment variables, events, and more.&lt;/p&gt; &lt;h2&gt;Exploring Red Hat OpenShift Pipelines&lt;/h2&gt; &lt;p&gt;The Red Hat OpenShift 4.2 release will feature a developer preview for OpenShift’s new CI/CD solution called &lt;a href="https://www.openshift.com/learn/topics/pipelines"&gt;OpenShift Pipelines&lt;/a&gt;, which is based on &lt;a href="https://developers.redhat.com/blog/2019/07/19/getting-started-with-tekton-on-red-hat-openshift/"&gt;Tekton&lt;/a&gt;. The Developer Perspective will also feature a developer preview for OpenShift Pipelines for managing CI/CD with OpenShift.&lt;/p&gt; &lt;p&gt;If you have the OpenShift Pipelines Operator installed on your cluster, then you’ll see the Pipelines link in the left navigation. The Pipelines section gives you visibility into any pipelines you have set up along with the ability to manage aspects of your project’s CI/CD. You can see the different resources that are present as part of your CI/CD process, view logs of executing pipelines (i.e., pipeline runs), and drill into pipeline runs to view the current or previous status of a CI/CD pipeline.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637777 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-openshift-developer-console.png" alt="OpenShift Pipelines" width="512" height="168" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-openshift-developer-console-300x98.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-preview-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-preview-openshift-developer-console.png" alt="OpenShift Pipelines Preview" width="512" height="271" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-preview-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-preview-openshift-developer-console-300x159.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;You can learn more about OpenShift Pipelines, which is currently in Dev Preview, &lt;a href="https://blog.openshift.com/cloud-native-ci-cd-with-openshift-pipelines/"&gt;here.&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Try the developer-centric changes for yourself&lt;/h2&gt; &lt;p&gt;To really get a sense of how the Developer Perspective in the web console can help you be more productive on Red Hat OpenShift, try it out for yourself. You can &lt;a href="http://developers.redhat.com/products/codeready-containers"&gt;install a 4.2 OpenShift cluster by following the download link here&lt;/a&gt;. There are several infrastructure options available, including “Laptop,” which allows you to &lt;a href="http://developers.redhat.com/products/codeready-containers"&gt;install an OpenShift cluster locally using Code Ready Containers&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Learn more about &lt;a href="https://developers.redhat.com/openshift/"&gt;application development with OpenShift at developers.redhat.com/openshif&lt;/a&gt;t.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#038;title=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" data-a2a-url="https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/" data-a2a-title="Tour of the Developer Perspective in the Red Hat OpenShift 4.2 web console"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/"&gt;Tour of the Developer Perspective in the Red Hat OpenShift 4.2 web console&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/e5UlqbL1-dk" height="1" width="1" alt=""/&gt;</content><summary>Of all of the new features of the Red Hat OpenShift 4.2 release, what I’ve been looking forward to the most are the developer-focused updates to the web console. If you’ve used OpenShift 4.1, then you’re probably already familiar with the updated Administrator Perspective, which is where you can manage workloads, storage, networking, cluster settings, and more. The addition of the new Developer Pe...</summary><dc:creator>Jan Kleinert</dc:creator><dc:date>2019-10-16T12:58:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/</feedburner:origLink></entry></feed>
