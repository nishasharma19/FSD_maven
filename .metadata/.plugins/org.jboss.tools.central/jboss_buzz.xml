<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Red Hat Forum Poland - Keynote and 3 Ptifall Sessions (slides)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vgstGxZdeBI/red-hat-forum-poland-2019-keynote-and-3-pitfalls-slides.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_forum_poland_keynote_and_3_ptifall_sessions_slides</id><updated>2019-11-05T12:46:06Z</updated><published>2019-11-05T12:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://www.redhat.com/en/global-forums-2019" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="red hat forum" border="0" data-original-height="518" data-original-width="1600" height="103" src="https://1.bp.blogspot.com/-RP359dswVEk/XYHmsHC2RDI/AAAAAAAAvNs/dNUtL3aUuK06u1zh2YQdt1TmasWHGe9UACNcBGAsYHQ/s320/Screenshot%2B2019-09-18%2Bat%2B10.11.11.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;This week in Warsaw, Poland we entertained around a thousand attendees at the &lt;a href="https://www.schabell.org/2019/09/red-hat-forum-poland-keynote-and-journey-through-3-pitfalls.html" target="_blank"&gt;National Stadium for the Red Hat Forum Poland 2019&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;For the keynote we had around 700 attendees in the main stage area and they were even lined up along the back and sides of the room. The turnout was exceptional.&lt;br /&gt;&lt;br /&gt;Along with keynoting, we interacted with attendees on sessions covering the pitfalls of microservice and hybrid multicloud transitions for organizations.&lt;br /&gt;&lt;br /&gt;Below you'll find the slides for each session.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: center;"&gt;Red Hat Open Hybrid Cloud&lt;/h3&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="420" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/sVcwzhHQxBLEwM" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="510"&gt; &lt;/iframe&gt; &lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: center;"&gt;3 Pitfalls Everyone Ignores with Microservices&lt;/h3&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="420" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/IZjLTWCWHkMPjF" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="510"&gt; &lt;/iframe&gt; &lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: center;"&gt;3 Pitfalls Everyone Should Avoid with Hybrid Multicloud&lt;/h3&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="420" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/DDiYN5dgIzOqzz" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="510"&gt; &lt;/iframe&gt; &lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Here are some images from the event in Warsaw:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-QeVZJX7BTgU/XcFuKjcH6bI/AAAAAAAABlA/eSSauX3Isfo5-TH0WAbzEuC7wq7jh45nwCLcBGAsYHQ/s1600/IMG_2731.jpeg" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="617" data-original-width="1600" height="244" src="https://1.bp.blogspot.com/-QeVZJX7BTgU/XcFuKjcH6bI/AAAAAAAABlA/eSSauX3Isfo5-TH0WAbzEuC7wq7jh45nwCLcBGAsYHQ/s640/IMG_2731.jpeg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-9WLzMKF8FMQ/XcFubbhdI-I/AAAAAAAABlU/kMNMdZOC_Mg0zDyPSWMi3RfZRNiLfUhNQCLcBGAsYHQ/s1600/IMG_2728.jpeg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1200" data-original-width="1600" height="480" src="https://1.bp.blogspot.com/-9WLzMKF8FMQ/XcFubbhdI-I/AAAAAAAABlU/kMNMdZOC_Mg0zDyPSWMi3RfZRNiLfUhNQCLcBGAsYHQ/s640/IMG_2728.jpeg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-AY8OCWUCLDc/XcFuZiJWHyI/AAAAAAAABlE/BKNJVR7j_HwbcaGrLVJ81lJafGJ_aZOlACEwYBhgL/s1600/IMG_2724.jpeg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1200" data-original-width="1600" height="480" src="https://1.bp.blogspot.com/-AY8OCWUCLDc/XcFuZiJWHyI/AAAAAAAABlE/BKNJVR7j_HwbcaGrLVJ81lJafGJ_aZOlACEwYBhgL/s640/IMG_2724.jpeg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-X4YF4rc_WnY/XcFuavIIJlI/AAAAAAAABlI/topo1OjPC8sxYSjfi9fQDOdBuaQ9AX4lACEwYBhgL/s1600/IMG_2722.jpeg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1200" data-original-width="1600" height="480" src="https://1.bp.blogspot.com/-X4YF4rc_WnY/XcFuavIIJlI/AAAAAAAABlI/topo1OjPC8sxYSjfi9fQDOdBuaQ9AX4lACEwYBhgL/s640/IMG_2722.jpeg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-QEhwDIyXPXc/XcFu9k0BGCI/AAAAAAAABls/uKDlk9sPy1kF7xXHgMil-0xT3nWko-n7gCLcBGAsYHQ/s1600/8AF1B0D7-3CBE-4A17-A530-D6E470FE5450.jpeg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1440" data-original-width="1440" height="640" src="https://1.bp.blogspot.com/-QEhwDIyXPXc/XcFu9k0BGCI/AAAAAAAABls/uKDlk9sPy1kF7xXHgMil-0xT3nWko-n7gCLcBGAsYHQ/s640/8AF1B0D7-3CBE-4A17-A530-D6E470FE5450.jpeg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/--wgBjUdsXWA/XcFu9JOUqeI/AAAAAAAABlo/mclGpppQZDUN2MNyyEKMrekUxrNwBzC7wCLcBGAsYHQ/s1600/83BBFDCD-DB97-4161-83D5-4A39C3F65B26.jpeg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1440" data-original-width="1440" height="640" src="https://1.bp.blogspot.com/--wgBjUdsXWA/XcFu9JOUqeI/AAAAAAAABlo/mclGpppQZDUN2MNyyEKMrekUxrNwBzC7wCLcBGAsYHQ/s640/83BBFDCD-DB97-4161-83D5-4A39C3F65B26.jpeg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-BvXbNc1iAL8/XcFu95NH7JI/AAAAAAAABlw/RaC_XEPQ2FMUVmZffArhTIFICK2-qt4vACLcBGAsYHQ/s1600/E3F22138-D7C5-4F0A-8BD0-E5639A36FCFC.jpeg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1600" data-original-width="1600" height="640" src="https://1.bp.blogspot.com/-BvXbNc1iAL8/XcFu95NH7JI/AAAAAAAABlw/RaC_XEPQ2FMUVmZffArhTIFICK2-qt4vACLcBGAsYHQ/s640/E3F22138-D7C5-4F0A-8BD0-E5639A36FCFC.jpeg" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Thanks for all that joined us and attended these sessions!&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Bj3Btfi9ldE:xa6hzkxCmDs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Bj3Btfi9ldE:xa6hzkxCmDs:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Bj3Btfi9ldE:xa6hzkxCmDs:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Bj3Btfi9ldE:xa6hzkxCmDs:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Bj3Btfi9ldE:xa6hzkxCmDs:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Bj3Btfi9ldE:xa6hzkxCmDs:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Bj3Btfi9ldE:xa6hzkxCmDs:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Bj3Btfi9ldE:xa6hzkxCmDs:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Bj3Btfi9ldE:xa6hzkxCmDs:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Bj3Btfi9ldE:xa6hzkxCmDs:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Bj3Btfi9ldE:xa6hzkxCmDs:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/Bj3Btfi9ldE" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vgstGxZdeBI" height="1" width="1" alt=""/&gt;</content><summary>This week in Warsaw, Poland we entertained around a thousand attendees at the National Stadium for the Red Hat Forum Poland 2019. For the keynote we had around 700 attendees in the main stage area and they were even lined up along the back and sides of the room. The turnout was exceptional. Along with keynoting, we interacted with attendees on sessions covering the pitfalls of microservice and hyb...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-11-05T12:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/Bj3Btfi9ldE/red-hat-forum-poland-2019-keynote-and-3-pitfalls-slides.html</feedburner:origLink></entry><entry><title>OpenShift Developer experience feedback: Take the survey, join community sessions</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/_MhPyWxaSr4/" /><category term="Cloud" /><category term="OpenShift" /><category term="odo" /><author><name>Steve Speicher</name></author><id>https://developers.redhat.com/blog/?p=645617</id><updated>2019-11-05T08:00:25Z</updated><published>2019-11-05T08:00:25Z</published><content type="html">&lt;p&gt;We’ve recently added several feedback loops aimed at increasing customer and community involvement in order to better understand how developers create, build, manage, test, and deploy their applications on and for &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;2019 OpenShift Developer Survey&lt;/h2&gt; &lt;p&gt;This short survey is intended for Developers who interact with OpenShift in some form or someone who can represent them, such as manager or team lead.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://bit.ly/2klAGZt"&gt;Take the survey now&lt;/a&gt; (Survey ends November 23.)&lt;/strong&gt;&lt;span id="more-645617"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The results of this survey will help us better understand how developers are working with OpenShift—what works and what doesn&amp;#8217;t—as well as what primary technologies developers are using. Getting plenty of survey results helps ensure that we can properly focus on key areas.&lt;/p&gt; &lt;p&gt;Thanks in advance for taking this ~7-minute survey or getting your developers to take it. We expect to conclude the survey on November 23, 2019.&lt;/p&gt; &lt;h3&gt;odo office hours&lt;/h3&gt; &lt;p&gt;The odo team hosts a live office hours session every 2 weeks to enable a more real-time way for users to provide feedback, get help, or even learn a new trick or two. The office hour schedule is posted to &lt;a href="https://groups.google.com/forum/#!forum/odo-users"&gt;odo-users mailing list&lt;/a&gt;. Of course, you can always reach out to the team any time through other channels lists on the project home page at &lt;a href="https://github.com/openshift/odo"&gt;https://github.com/openshift/odo&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Upcoming schedule: &lt;a href="https://calendar.google.com/calendar/b/1?cid=cmVkaGF0LmNvbV9vcmRjYTRpaTlwcTV2YmFiMzFoMnY5bGdnMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29t"&gt;see Google calendar link&lt;/a&gt;&lt;/p&gt; &lt;p&gt;What is odo, you ask? It is a new developer-focused command-line interface in OpenShift 4.2. You can learn more in &lt;a href="https://developers.redhat.com/blog/2019/10/16/openshift-do-odo-developer-cli-openshift/"&gt;this article&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;OpenShift Console Developer Perspective office hours&lt;/h3&gt; &lt;p&gt;The web console team that focuses on the developer perspective hosts live office hours every 2 weeks to enable a more real-time way for users to provide feedback, get help, or even learn a new trick or two. The office hour schedule is posted to the &lt;a href="https://groups.google.com/forum/#!forum/openshift-dev-users"&gt;openshift-dev-users mailing list&lt;/a&gt;. Of course, you can always reach out to the team any time through other channels lists on the project home page at &lt;a href="https://github.com/openshift/console"&gt;https://github.com/openshift/console&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Upcoming schedule: &lt;a href="https://calendar.google.com/calendar/b/1?cid=cmVkaGF0LmNvbV9vcmRjYTRpaTlwcTV2YmFiMzFoMnY5bGdnMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29t"&gt;see Google calendar link&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you haven’t seen the new developer perspective in OpenShift 4.2 web console, be sure to check out &lt;a href="https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/"&gt;this overview&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Summary&lt;/h3&gt; &lt;p&gt;We are very interested in learning how developers work with Red Hat OpenShift. You can monitor the various open source projects referenced to track progress on experience improvements and possible schedule changes. Be on the lookout in early 2020 for an article summarizing the survey results and discussing what we plan on doing with them.&lt;/p&gt; &lt;p&gt;Thanks in advance for your feedback and for helping us making these tools better for you.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://bit.ly/2klAGZt"&gt;Take the survey now&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F05%2Fopenshift-developer-experience-feedback-take-the-survey-join-community-sessions%2F&amp;#38;linkname=OpenShift%20Developer%20experience%20feedback%3A%20Take%20the%20survey%2C%20join%20community%20sessions" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F05%2Fopenshift-developer-experience-feedback-take-the-survey-join-community-sessions%2F&amp;#38;linkname=OpenShift%20Developer%20experience%20feedback%3A%20Take%20the%20survey%2C%20join%20community%20sessions" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F05%2Fopenshift-developer-experience-feedback-take-the-survey-join-community-sessions%2F&amp;#38;linkname=OpenShift%20Developer%20experience%20feedback%3A%20Take%20the%20survey%2C%20join%20community%20sessions" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F05%2Fopenshift-developer-experience-feedback-take-the-survey-join-community-sessions%2F&amp;#38;linkname=OpenShift%20Developer%20experience%20feedback%3A%20Take%20the%20survey%2C%20join%20community%20sessions" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F05%2Fopenshift-developer-experience-feedback-take-the-survey-join-community-sessions%2F&amp;#38;linkname=OpenShift%20Developer%20experience%20feedback%3A%20Take%20the%20survey%2C%20join%20community%20sessions" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F05%2Fopenshift-developer-experience-feedback-take-the-survey-join-community-sessions%2F&amp;#38;linkname=OpenShift%20Developer%20experience%20feedback%3A%20Take%20the%20survey%2C%20join%20community%20sessions" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F05%2Fopenshift-developer-experience-feedback-take-the-survey-join-community-sessions%2F&amp;#38;linkname=OpenShift%20Developer%20experience%20feedback%3A%20Take%20the%20survey%2C%20join%20community%20sessions" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F05%2Fopenshift-developer-experience-feedback-take-the-survey-join-community-sessions%2F&amp;#038;title=OpenShift%20Developer%20experience%20feedback%3A%20Take%20the%20survey%2C%20join%20community%20sessions" data-a2a-url="https://developers.redhat.com/blog/2019/11/05/openshift-developer-experience-feedback-take-the-survey-join-community-sessions/" data-a2a-title="OpenShift Developer experience feedback: Take the survey, join community sessions"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/05/openshift-developer-experience-feedback-take-the-survey-join-community-sessions/"&gt;OpenShift Developer experience feedback: Take the survey, join community sessions&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/_MhPyWxaSr4" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We’ve recently added several feedback loops aimed at increasing customer and community involvement in order to better understand how developers create, build, manage, test, and deploy their applications on and for Red Hat OpenShift. 2019 OpenShift Developer Survey This short survey is intended for Developers who interact with OpenShift in some form or someone who [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/05/openshift-developer-experience-feedback-take-the-survey-join-community-sessions/"&gt;OpenShift Developer experience feedback: Take the survey, join community sessions&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">645617</post-id><dc:creator>Steve Speicher</dc:creator><dc:date>2019-11-05T08:00:25Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/05/openshift-developer-experience-feedback-take-the-survey-join-community-sessions/</feedburner:origLink></entry><entry><title>Get hands-on experience with Kubernetes and Quarkus at DevNation Live in Austin</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/yo_dCi1pMjA/" /><category term="DevNation" /><category term="Events" /><category term="Java" /><category term="Kubernetes" /><category term="OpenShift" /><category term="microservices" /><category term="Quarkus" /><author><name>Editorial Team</name></author><id>https://developers.redhat.com/blog/?p=646237</id><updated>2019-11-04T08:00:26Z</updated><published>2019-11-04T08:00:26Z</published><content type="html">&lt;p&gt;&lt;em&gt;&lt;a href="https://redhat-events.com/devnation_austin2019/?sc_cid=7013a000002D5uHAAS"&gt;Join us December 12, 2019&lt;/a&gt; for this free, one-day, two-track event at the &lt;a href="https://redhat-events.com/devnation_austin2019"&gt;Hilton Austin&lt;/a&gt; with Red Hat experts.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;The cloud is dramatically changing established development practices, and developers need expert training and hands-on experience to stay up to date.&lt;/p&gt; &lt;p&gt;Join Red Hat&amp;#8217;s developer advocates (including Burr Sutter, Edson Yanaga, and Kamesth Sampath) in Austin, Texas for a day of technical sessions, conversation, and hands-on workshops focused on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; development and Java &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt;. Whether you are a Java developer or work in Node.js, C#, Ruby, or Python, you will gain a strong understanding of how to use modern architecture, new patterns, and DevOps to make the most of your work in the cloud.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://redhat-events.com/devnation_austin2019/?sc_cid=7013a000002D5uHAAS"&gt;Register now&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-646237"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Sessions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Keynote: &lt;/b&gt;&lt;strong&gt;Next-generation microservices&lt;/strong&gt; — The next generation of microservices will leverage sidecars, a service mesh (Istio), serverless principles, and a new insanely fast and light Java runtime—Quarkus.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Hands-on workshop: &lt;/b&gt;&lt;strong&gt;Kubernetes, service mesh &amp;#38; serverless&lt;/strong&gt; — Learn how to build web applications with Quarkus, use Hibernate and Hibernate with Panache, and build event-driven microservices with Apache Kafka.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Hands-on workshop:&lt;/b&gt;&lt;strong&gt; The Java microservices tutorial with Quarkus&lt;/strong&gt; — Get started with Kubernetes and Red Hat OpenShift, Istio service mesh, and Knative serverless.&lt;/li&gt; &lt;li&gt;&lt;b&gt;9 steps to awesome with Kubernetes &lt;/b&gt;— Deploy and manage the dozens of microservices that your organization is crafting with Kubernetes/OpenShift.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Microservices testing &amp;#38; automation&lt;/b&gt; — Start testing in production and speed up your release cycle to unimaginable limits.​​&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Space is limited. &lt;strong&gt;&lt;a href="https://redhat-events.com/devnation_austin2019/?sc_cid=7013a000002D5uHAAS"&gt;Register now&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F04%2Fget-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin%2F&amp;#38;linkname=Get%20hands-on%20experience%20with%20Kubernetes%20and%20Quarkus%20at%20DevNation%20Live%20in%20Austin" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F04%2Fget-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin%2F&amp;#38;linkname=Get%20hands-on%20experience%20with%20Kubernetes%20and%20Quarkus%20at%20DevNation%20Live%20in%20Austin" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F04%2Fget-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin%2F&amp;#38;linkname=Get%20hands-on%20experience%20with%20Kubernetes%20and%20Quarkus%20at%20DevNation%20Live%20in%20Austin" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F04%2Fget-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin%2F&amp;#38;linkname=Get%20hands-on%20experience%20with%20Kubernetes%20and%20Quarkus%20at%20DevNation%20Live%20in%20Austin" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F04%2Fget-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin%2F&amp;#38;linkname=Get%20hands-on%20experience%20with%20Kubernetes%20and%20Quarkus%20at%20DevNation%20Live%20in%20Austin" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F04%2Fget-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin%2F&amp;#38;linkname=Get%20hands-on%20experience%20with%20Kubernetes%20and%20Quarkus%20at%20DevNation%20Live%20in%20Austin" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F04%2Fget-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin%2F&amp;#38;linkname=Get%20hands-on%20experience%20with%20Kubernetes%20and%20Quarkus%20at%20DevNation%20Live%20in%20Austin" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F04%2Fget-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin%2F&amp;#038;title=Get%20hands-on%20experience%20with%20Kubernetes%20and%20Quarkus%20at%20DevNation%20Live%20in%20Austin" data-a2a-url="https://developers.redhat.com/blog/2019/11/04/get-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin/" data-a2a-title="Get hands-on experience with Kubernetes and Quarkus at DevNation Live in Austin"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/04/get-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin/"&gt;Get hands-on experience with Kubernetes and Quarkus at DevNation Live in Austin&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/yo_dCi1pMjA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Join us December 12, 2019 for this free, one-day, two-track event at the Hilton Austin with Red Hat experts. The cloud is dramatically changing established development practices, and developers need expert training and hands-on experience to stay up to date. Join Red Hat&amp;#8217;s developer advocates (including Burr Sutter, Edson Yanaga, and Kamesth Sampath) in Austin, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/04/get-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin/"&gt;Get hands-on experience with Kubernetes and Quarkus at DevNation Live in Austin&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">646237</post-id><dc:creator>Editorial Team</dc:creator><dc:date>2019-11-04T08:00:26Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/04/get-hands-on-experience-with-kubernetes-and-quarkus-at-devnation-live-in-austin/</feedburner:origLink></entry><entry><title>Infinispan 10.0.1.Final</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/UqkA3P76kdM/" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="final" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Ryan Emerson</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_10_0_1_final</id><updated>2019-11-04T09:30:47Z</updated><published>2019-11-01T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We are pleased to announce the availability of Infinispan 10.0.1.Final, which contains several bug fixes.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The release notes can be found &lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12343101"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As usual you can ask questions on the &lt;a href="https://developer.jboss.org/en/infinispan/content"&gt;forum&lt;/a&gt;, &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest"&gt;StackOverflow&lt;/a&gt; and interactively on our &lt;a href="http://infinispan.zulipchat.com/"&gt;Zulip Chat&lt;/a&gt;. Please report any bugs you find on our &lt;a href="https://issues.jboss.org/projects/ISPN/summary"&gt;Issue Tracker&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/UqkA3P76kdM" height="1" width="1" alt=""/&gt;</content><summary>We are pleased to announce the availability of Infinispan 10.0.1.Final, which contains several bug fixes. The release notes can be found here. As usual you can ask questions on the forum, StackOverflow and interactively on our Zulip Chat. Please report any bugs you find on our Issue Tracker</summary><dc:creator>Ryan Emerson</dc:creator><dc:date>2019-11-01T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2019/11/01/infinispan-10/</feedburner:origLink></entry><entry><title>How to customize the Red Hat OpenShift 3.11 SDN</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/CAFMbxDrwCg/" /><category term="OpenShift" /><category term="Red Hat OpenShift Application Runtimes" /><category term="Red Hat OpenShift Container Platform" /><category term="networking" /><category term="software-defined network" /><author><name>Mohammad Ahmad</name></author><id>https://developers.redhat.com/blog/?p=615127</id><updated>2019-11-01T07:00:23Z</updated><published>2019-11-01T07:00:23Z</published><content type="html">&lt;p&gt;In this article, I&amp;#8217;ll highlight a practical case for customizing the &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; software-defined network (SDN). To achieve this, I will identify the OpenShift-Ansible inventory parameters that configure different aspects of the &lt;a href="https://docs.openshift.com/container-platform/3.11/architecture/networking/sdn.html#architecture-additional-concepts-sdn"&gt;OpenShift SDN&lt;/a&gt;, specifically the cluster, portal, and docker networks.&lt;/p&gt; &lt;h2&gt;Why customize the SDN?&lt;/h2&gt; &lt;p&gt;An important question I am often asked is: Why do you need to customize the SDN? Isn’t it completely internal? Users generally assume there is no need to customize the SDN because OpenShift’s SDN has no impact on networks outside the OpenShift cluster; therefore, IP conflicts should not be a concern. However, this is not always the case.&lt;span id="more-615127"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;In large organizations, designated private networks (e.g., 10.0.0.0/8) are often used “publicly” within the internal confines of the organization&amp;#8217;s own network. With that in mind, the primary concern is that services external to the OpenShift cluster may be using IPs within the normally private ranges that conflict with those used by the cluster itself.&lt;/p&gt; &lt;p&gt;These conflicts will cause issues when applications in the OpenShift cluster attempt to communicate to these conflicting external services, as the OpenShift SDN will attempt to route these requests within its own network, causing these services to be unreachable from within the cluster.&lt;/p&gt; &lt;h2&gt;Background&lt;/h2&gt; &lt;h3&gt;Default values&lt;/h3&gt; &lt;p&gt;The default networks configured by OpenShift at installation time are:&lt;/p&gt; &lt;table border="1px"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;b&gt;Component&lt;/b&gt;&lt;/td&gt; &lt;td&gt;&lt;b&gt;Ansible inventory parameters&lt;/b&gt;&lt;/td&gt; &lt;td&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;The cluster network&lt;/td&gt; &lt;td&gt;osm_cluster_network_cidr and osm_host_subnet_length which by default are 10.128.0.0/14 and 9 respectively.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/td&gt; &lt;td&gt;Each node gets a “/23” subnet from this range, allowing a total of 512 subnets dedicated for nodes, and a total of 510 IPs on each node for containers.&lt;br /&gt; Running “oc get pods &amp;#8211;all-namespaces -o wide” will show which IPs have been allocated from this range, and should all be within this range.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;The services network&lt;/td&gt; &lt;td&gt;openshift_portal_net&lt;/td&gt; &lt;td&gt;By default this is 172.30.0.0/16. This means you have a total of 65534 addresses to assign to services.&lt;/p&gt; &lt;p&gt;Running “oc get services &amp;#8211;all-namespaces” should also show that all service IPs are within this range.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;The docker network&lt;/td&gt; &lt;td&gt;openshift_docker_options=&amp;#8221;&amp;#8211;bip 172.17.0.1/16 &amp;#8211;fixed-cidr 172.17.0.0/17&amp;#8243;&lt;/td&gt; &lt;td&gt;These values are command line arguments to the docker daemon configured by the openshift_docker_options variable in openshift-ansible.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3&gt;Customizing these values&lt;/h3&gt; &lt;p&gt;Fine-tuning each of these values dictates how large your cluster can grow by way of defining how many nodes, pods, and services it can handle. With that in mind, for a development cluster, you may want to allow more services, as opposed to pods, to address specific needs required by developers. However, on a production system, you may prefer the ability to scale in the number of nodes to address a business and operational requirement.&lt;/p&gt; &lt;p&gt;This article is based on the situation where you only have the subnet 192.168.0.0/16 for the entire cluster to use. With that in mind, I partition the subnet as follows:&lt;/p&gt; &lt;table border="1px"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;strong&gt;Subnet&lt;/strong&gt;&lt;/td&gt; &lt;td&gt;&lt;strong&gt;Use&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;192.168.0.0/17&lt;/td&gt; &lt;td&gt;cluster network (192.168.0.0 – 192.168.127.254), which allows for a total of 127 “/24” subnets, equaling 127 nodes with 254 IPs available to containers on each node.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;192.168.128.0/18&lt;/td&gt; &lt;td&gt;portal/service network (192.168.128.0-192.168.191.254) with a total of 16382 IPs for services.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;192.168.192.0/24&lt;/td&gt; &lt;td&gt;docker network, giving me a total of 127 IPs if I use openshift_docker_options=&amp;#8221;&amp;#8211;bip 192.168.192.1/24 &amp;#8211;fixed-cidr 192.168.192.1/25&amp;#8243;. This is only important for building images that have external dependencies, and doesn’t need to be large.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3&gt;Reasons why you might need to customize the OpenShift SDN&lt;/h3&gt; &lt;p&gt;To reiterate, here are a few reasons why you might want to customize the default OpenShift network:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The default OpenShift and docker networks created at install time conflict with the organization’s services running in the routable network range.&lt;/li&gt; &lt;li&gt;Network limitations mean it is not possible to dedicate the recommended single “/14” network for the cluster and two “/16” networks for OpenShift services and docker.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Resulting configurations&lt;/h2&gt; &lt;p&gt;As a result, the following configurations reflect the smaller networks we have defined.&lt;/p&gt; &lt;table border="1px"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;strong&gt;Inventory parameter&lt;/strong&gt;&lt;/td&gt; &lt;td&gt;&lt;strong&gt;value&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;osm_cluster_network_cidr&lt;/td&gt; &lt;td&gt;192.168.0.0/17&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;osm_host_subnet_length&lt;/td&gt; &lt;td&gt;8&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;openshift_portal_net&lt;/td&gt; &lt;td&gt;192.168.128.0/18&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;openshift_docker_options&lt;/td&gt; &lt;td&gt;&amp;#8220;&amp;#8211;bip 192.168.192.1/18 &amp;#8211;fixed-cidr 192.168.192.1/19&amp;#8221;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, I have highlighted the OpenShift 3.11 inventory variables that determine how OpenShift’s SDN is created when OpenShift is installed. I have also identified some of the reasons why you would consider future-proofing your cluster for potential growth and provided an example case for customizing your SDN to mitigate the risk of IP conflict for services in your routed network and your OpenShift’s SDN.&lt;/p&gt; &lt;h3&gt;Credits&lt;/h3&gt; &lt;p&gt;Special thanks to &lt;a href="https://developers.redhat.com/blog/author/tstockwell/"&gt;Thomas Stockwell&lt;/a&gt; for his peer review.&lt;/p&gt; &lt;h3&gt;References&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://docs.openshift.com/container-platform/3.11/architecture/networking/sdn.html"&gt;Red Hat OpenShift&amp;#8217;s SDN architectural overview&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.openshift.com/container-platform/3.11/install_config/configuring_sdn.html"&gt;Configuring Red Hat OpenShift&amp;#8217;s SDN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.docker.com/network/bridge/#connect-a-container-to-the-default-bridge-network"&gt;Configure docker&amp;#8217;s default bridge network&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/solutions/2942391"&gt;Red Hat&amp;#8217;s recommendation for modifying the docker network&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.jodies.de/ipcalc"&gt;IP calculator/IP subnetting (tool I used)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;OpenShift configuration parameters: &lt;a href="https://github.com/openshift/openshift-ansible/blob/release-3.11/inventory/hosts.example#L763"&gt;osm_cluster_network_cidr&lt;/a&gt;, &lt;a href="https://github.com/openshift/openshift-ansible/blob/release-3.11/inventory/hosts.example#L764"&gt;openshift_portal_net&lt;/a&gt;, &lt;a href="https://github.com/openshift/openshift-ansible/blob/release-3.11/inventory/hosts.example#L788"&gt;osm_host_subnet_length&lt;/a&gt;, &lt;a href="https://github.com/openshift/openshift-ansible/blob/release-3.11/inventory/hosts.example#L130"&gt;openshift_docker_options&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F01%2Fhow-to-customize-the-red-hat-openshift-3-11-sdn%2F&amp;#38;linkname=How%20to%20customize%20the%20Red%20Hat%20OpenShift%203.11%20SDN" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F01%2Fhow-to-customize-the-red-hat-openshift-3-11-sdn%2F&amp;#38;linkname=How%20to%20customize%20the%20Red%20Hat%20OpenShift%203.11%20SDN" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F01%2Fhow-to-customize-the-red-hat-openshift-3-11-sdn%2F&amp;#38;linkname=How%20to%20customize%20the%20Red%20Hat%20OpenShift%203.11%20SDN" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F01%2Fhow-to-customize-the-red-hat-openshift-3-11-sdn%2F&amp;#38;linkname=How%20to%20customize%20the%20Red%20Hat%20OpenShift%203.11%20SDN" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F01%2Fhow-to-customize-the-red-hat-openshift-3-11-sdn%2F&amp;#38;linkname=How%20to%20customize%20the%20Red%20Hat%20OpenShift%203.11%20SDN" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F01%2Fhow-to-customize-the-red-hat-openshift-3-11-sdn%2F&amp;#38;linkname=How%20to%20customize%20the%20Red%20Hat%20OpenShift%203.11%20SDN" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F01%2Fhow-to-customize-the-red-hat-openshift-3-11-sdn%2F&amp;#38;linkname=How%20to%20customize%20the%20Red%20Hat%20OpenShift%203.11%20SDN" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F01%2Fhow-to-customize-the-red-hat-openshift-3-11-sdn%2F&amp;#038;title=How%20to%20customize%20the%20Red%20Hat%20OpenShift%203.11%20SDN" data-a2a-url="https://developers.redhat.com/blog/2019/11/01/how-to-customize-the-red-hat-openshift-3-11-sdn/" data-a2a-title="How to customize the Red Hat OpenShift 3.11 SDN"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/01/how-to-customize-the-red-hat-openshift-3-11-sdn/"&gt;How to customize the Red Hat OpenShift 3.11 SDN&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/CAFMbxDrwCg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In this article, I&amp;#8217;ll highlight a practical case for customizing the Red Hat OpenShift software-defined network (SDN). To achieve this, I will identify the OpenShift-Ansible inventory parameters that configure different aspects of the OpenShift SDN, specifically the cluster, portal, and docker networks. Why customize the SDN? An important question I am often asked is: Why [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/01/how-to-customize-the-red-hat-openshift-3-11-sdn/"&gt;How to customize the Red Hat OpenShift 3.11 SDN&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/11/01/how-to-customize-the-red-hat-openshift-3-11-sdn/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">615127</post-id><dc:creator>Mohammad Ahmad</dc:creator><dc:date>2019-11-01T07:00:23Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/01/how-to-customize-the-red-hat-openshift-3-11-sdn/</feedburner:origLink></entry><entry><title>Domain-specific Prometheus metrics with Red Hat Process Automation Manager and Decision Manager</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5vWV-It4Kv8/" /><category term="Red Hat Decision Manager" /><category term="prometheus" /><author><name>Duncan Doyle</name></author><id>https://developers.redhat.com/blog/?p=642097</id><updated>2019-10-31T07:00:17Z</updated><published>2019-10-31T07:00:17Z</published><content type="html">&lt;p&gt;Since version 7.4, &lt;a href="https://developers.redhat.com/products/rhpam/overview"&gt;Red Hat Process Automation Manager&lt;/a&gt; (RHPAM) and &lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/decision-manager" target="_blank" rel="noopener noreferrer"&gt;Red Hat Decision Manager&lt;/a&gt; (RHDM) provide support for monitoring various metrics through &lt;a href="https://prometheus.io/" target="_blank" rel="noopener noreferrer"&gt;Prometheus&lt;/a&gt;. The platform&amp;#8217;s Execution Server (also known as KIE-Server) provides a Prometheus extension which, if enabled, exposes metrics like the number of containers deployed, the response time of rule and decision evaluations, etc.&lt;/p&gt; &lt;p&gt;In this example, we will use the RHDM 7 Insurance Pricing Demo as our base project. This demo contains a simple Decision Model and Notation (DMN) model that calculates the insurance price based on the age of the customer and whether the customer had previous incidents. The GitHub repository for this demo can be found &lt;a href="https://github.com/jbossdemocentral/rhdm7-insurance-pricing-dmn-demo" target="_blank" rel="noopener noreferrer"&gt;here&lt;/a&gt; and contains detailed instructions on how to set up and run the demo.&lt;span id="more-642097"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;The KIE-Server Prometheus extension&lt;/h2&gt; &lt;p&gt;By default, the KIE-Server Prometheus extension is disabled. This extension can be enabled by setting the Java System Property &lt;code&gt;org.kie.prometheus.server.ext.disabled&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. This task can, for example, be done when starting the Red Hat JBoss Enterprise Application Platform (JBoss EAP) server:&lt;/p&gt; &lt;pre&gt;$ ./standalone.sh -Dorg.kie.prometheus.server.ext.disabled=false &lt;/pre&gt; &lt;p&gt;Or, the extension can be configured in the &lt;code&gt;&amp;#60;system-properties&amp;#62;&lt;/code&gt; section of the JBoss EAP server configuration file (e.g. &lt;code&gt;standalone.xml&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&amp;#60;property name="org.kie.prometheus.server.ext.disabled" value="false"/&amp;#62; &lt;/pre&gt; &lt;p&gt;When the extension is enabled, it provides a number of out-of-the-box metrics for Drools (both rules and DMN decisions), OptaPlanner, and jBPM deployments. The metrics are available at the URL: &lt;code&gt;http://&amp;#60;host&amp;#62;:&amp;#60;port&amp;#62;/kie-server/services/rest/metrics&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;This image shows the metrics in a vanilla Red Hat Decision Manager 7.5 Execution Server, with a single DMN project (KJAR) deployed, after a single DMN evaluation:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-642107 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/default-metrics-prom-kie-server-dmn-1024x539.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/default-metrics-prom-kie-server-dmn-1024x539.png" alt="Example metrics output" width="640" height="337" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/default-metrics-prom-kie-server-dmn-1024x539.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/default-metrics-prom-kie-server-dmn-300x158.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/default-metrics-prom-kie-server-dmn-768x404.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;We can see that KIE-Server provides out-of-the-box metrics for, for example, the response time of the DMN evaluations. Depending on the type of deployment (e.g., DMN, Drools, jBPM), the Prometheus extension enables different metrics.&lt;/p&gt; &lt;h2&gt;Custom metrics: The KIE-Server PrometheusMetricsProvider&lt;/h2&gt; &lt;p&gt;The Prometheus extension of KIE-Server has a pluggable architecture, so users of the platform to write their own extensions. This allows us to write extensions that collect domain-specific metrics of our decision models, rules, and processes. For example, we can write an extension that provides metrics about the actual decisions that a DMN decision node takes, such as the price of insurance. Say that the price of insurance is between $1,000 and $3,000. We can define a Prometheus KIE-Server Extension that creates a Prometheus histogram that allows us to keep track of the distribution of insurance prices.&lt;/p&gt; &lt;p&gt;To implement custom Prometheus metrics, the extension provides the &lt;code&gt;PrometheusMetricsProvider&lt;/code&gt; interface. This interface defines methods that allow you to return various Drools, DMN, OptaPlanner, and jBPM &lt;code&gt;EventListeners&lt;/code&gt;. When the custom &lt;code&gt;PrometheusMetricsProvider&lt;/code&gt; is registered, the extension registers the &lt;code&gt;EventListeners&lt;/code&gt; dynamically with the various runtimes.&lt;/p&gt; &lt;p&gt;Your custom &lt;code&gt;PrometheusMetricsProvider&lt;/code&gt; is registered via the &lt;a href="https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html" target="_blank" rel="noopener noreferrer"&gt;Java ServiceLoader&lt;/a&gt; mechanism. For example, a file with the name &lt;code&gt;org.kie.server.services.prometheus.PrometheusMetricsProvider&lt;/code&gt; must be placed in your project&amp;#8217;s &lt;code&gt;/META-INF/services&lt;/code&gt; folder. The content of this file is the fully qualified class name of your &lt;code&gt;PrometheusMetricsProvider&lt;/code&gt; implementation. When you place your &lt;code&gt;PrometheusMetricsProvider&lt;/code&gt;&amp;#8216;s JAR file in the &lt;code&gt;WEB-INF/lib&lt;/code&gt; folder of the KIE-Server, the provider is automatically discovered and registered.&lt;/p&gt; &lt;h2&gt;Your first KIE-Server PrometheusMetricsProvider&lt;/h2&gt; &lt;p&gt;Let&amp;#8217;s write our first provider, which offers simple metrics for our Red Hat Decision Manager &lt;a href="https://www.github.com/jbossdemocentral/rhdm7-insurance-pricing-dmn-demo.git" target="_blank" rel="noopener noreferrer"&gt;Insurance Pricing DMN demo&lt;/a&gt; that monitors the distribution of insurance prices determined by the DMN model. First, we create a simple Java Maven project. We use the Maven archetype approach to scaffold a new project:&lt;/p&gt; &lt;pre&gt;$ mvn archetype:generate -DgroupId=com.redhat.demos.dm -DartifactId=insurance-pricing-dmn-prometheus-provider -Dversion=1.0.0 -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false &lt;/pre&gt; &lt;p&gt;To the &lt;code&gt;pom.xml&lt;/code&gt; file, we add a single dependency (the version to be used depends on the version of your Red Hat Decision Manager or Red Hat Process Automation Manager installation):&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.kie.server&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;kie-server-services-prometheus&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;7.27.0.Final&amp;#60;/version&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;p&gt;We also need to add a &lt;code&gt;build&lt;/code&gt; section to our &lt;code&gt;pom.xml&lt;/code&gt; file to set the Java source and target version:&lt;/p&gt; &lt;pre&gt;&amp;#60;build&amp;#62; &amp;#60;plugins&amp;#62; &amp;#60;plugin&amp;#62; &amp;#60;artifactId&amp;#62;maven-compiler-plugin&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;3.1&amp;#60;/version&amp;#62; &amp;#60;configuration&amp;#62; &amp;#60;source&amp;#62;1.8&amp;#60;/source&amp;#62; &amp;#60;target&amp;#62;1.8&amp;#60;/target&amp;#62; &amp;#60;/configuration&amp;#62; &amp;#60;/plugin&amp;#62; &amp;#60;/plugins&amp;#62; &amp;#60;/build&amp;#62; &lt;/pre&gt; &lt;p&gt;In your project&amp;#8217;s &lt;code&gt;src/main/java&lt;/code&gt; directory, create a Java package with the name &lt;code&gt;com.redhat.demos.dm.prometheus&lt;/code&gt;. In this package, create a class with the name &lt;code&gt;InsurancePricingPrometheusMetricsProvider.java&lt;/code&gt;. This class must implement the &lt;code&gt;PrometheusMetricsProvider&lt;/code&gt; interface.&lt;/p&gt; &lt;p&gt;Provide a default implementation for the methods:&lt;/p&gt; &lt;pre&gt;public class InsurancePricingPrometheusMetricsProvider implements PrometheusMetricsProvider { public AgendaEventListener createAgendaEventListener(String arg0, KieContainerInstance arg1) { return null; } public AsynchronousJobListener createAsynchronousJobListener() { return null; } public DMNRuntimeEventListener createDMNRuntimeEventListener(KieContainerInstance arg0) { return null; } public DeploymentEventListener createDeploymentEventListener() { return null; } public PhaseLifecycleListener createPhaseLifecycleListener(String arg0) { return null; } } &lt;/pre&gt; &lt;p&gt;We now define our &lt;code&gt;DMNListener&lt;/code&gt;, which will react to events in our DMN engine and collect the Prometheus metrics. In the same package, create a Java class with the name &lt;code&gt;InsurancePricingDMNListener.java&lt;/code&gt;. We&amp;#8217;ll make this class implement the &lt;code&gt;DMNRuntimeEventListener&lt;/code&gt; interface:&lt;/p&gt; &lt;pre&gt;public class InsurancePricingDMNListener implements DMNRuntimeEventListener { } &lt;/pre&gt; &lt;p&gt;In our &lt;code&gt;InsurancePricingPrometheusMetricsProvider&lt;/code&gt;, we can now implement the &lt;code&gt;createDMNRuntimeEventListener&lt;/code&gt; method and have it return the &lt;code&gt;DMNRuntimeEventListener&lt;/code&gt; implementation we&amp;#8217;ve just created:&lt;/p&gt; &lt;pre&gt;public DMNRuntimeEventListener createDMNRuntimeEventListener(KieContainerInstance kci) { return new InsurancePricingDMNListener(); } &lt;/pre&gt; &lt;p&gt;In our &lt;code&gt;InsurancePricingDMNListener&lt;/code&gt;, we define a &lt;code&gt;Histogram&lt;/code&gt; in which we will collect our insurance pricings:&lt;/p&gt; &lt;pre&gt;private static final Histogram insurancePricing = Histogram.build() .name("insurance_pricing") .help("Insurance Pricing") .labelNames("decision_namespace", "decision_name") .buckets(1000, 2000, 3000) .register(); &lt;/pre&gt; &lt;p&gt;Note that in this example, we define our &lt;code&gt;Histogram&lt;/code&gt; as a &lt;code&gt;static&lt;/code&gt; class member. The reason for this is that the Prometheus Java client only allows you to register a single collector under a given name. Another option would have been to register the collector with a dynamic name. For example, one that depends on the Maven &lt;code&gt;groupId&lt;/code&gt;, &lt;code&gt;artifactId&lt;/code&gt;, and &lt;code&gt;version&lt;/code&gt; of the &lt;code&gt;KieContainerInstance&lt;/code&gt; for which we create the collector.&lt;/p&gt; &lt;p&gt;With our &lt;code&gt;Histogram&lt;/code&gt; defined, we can now implement the &lt;code&gt;afterEvaluateDecision&lt;/code&gt; of the &lt;code&gt;DMNRuntimeEventListener&lt;/code&gt;, in which we can retrieve the outcome of the decision and add it to our Prometheus collector:&lt;/p&gt; &lt;pre&gt;public void afterEvaluateDecision(AfterEvaluateDecisionEvent event) { DecisionNode decisionNode = event.getDecision(); String decisionNodeName = decisionNode.getName(); DMNDecisionResult result = event.getResult().getDecisionResultByName(decisionNodeName); switch (decisionNodeName) { case "Insurance Total Price": double resultAsDouble = 0.0; Object resultAsObject = result.getResult(); //We only store if we find and Integer. if (resultAsObject instanceof Integer) { resultAsDouble = ((Integer) resultAsObject).doubleValue(); insurancePricing.labels(decisionNode.getModelName(), decisionNode.getModelNamespace()).observe(resultAsDouble); } break; default: //Not the decision we want to monitor. Discarding. break; } } &lt;/pre&gt; &lt;p&gt;What we do in this code is determine the name of the decision that has been taken, and if the name is equal to &amp;#8220;Insurance Price Total,&amp;#8221; add the result of the decision (the insurance price) to the Prometheus histogram.&lt;/p&gt; &lt;p&gt;The finished project can be found &lt;a href="https://github.com/jbossdemocentral/rhdm7-insurance-pricing-dmn-demo-prometheus-metrics" target="_blank" rel="noopener noreferrer"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Package and deploy the PrometheusMetricsProvider&lt;/h2&gt; &lt;p&gt;To deploy our &lt;code&gt;PrometheusMetricsProvider&lt;/code&gt;, we first need to package it in a JAR file. We use Maven to do this:&lt;/p&gt; &lt;pre&gt;$ mvn clean install &lt;/pre&gt; &lt;p&gt;This command will create the &lt;code&gt;insurance-pricing-dmn-prometheus-provider-1.0.0.jar&lt;/code&gt; file in the project&amp;#8217;s &lt;code&gt;target&lt;/code&gt; directory. We can now copy this JAR file into the &lt;code&gt;WEB-INF/lib&lt;/code&gt; directory of the RHPAM/RHDM Execution Server/KIE-Server.&lt;/p&gt; &lt;p&gt;With our &lt;code&gt;PrometheusMetricsProvider&lt;/code&gt; deployed, we can now start the platform with the Prometheus extension enabled:&lt;/p&gt; &lt;pre&gt;$ ./target/jboss-eap-7.2/bin/standalone.sh -Dorg.kie.prometheus.server.ext.disabled=false &lt;/pre&gt; &lt;h2&gt;Run the demo&lt;/h2&gt; &lt;p&gt;With your &lt;code&gt;PrometheusMetricsProvider&lt;/code&gt; installed and Red Hat Decision Manager running, we can now test our metrics. Consult the demo guide in the &lt;a href="https://github.com/jbossdemocentral/rhdm7-insurance-pricing-dmn-demo" target="_blank" rel="noopener noreferrer"&gt;Insurance Pricing DMN Demo README&lt;/a&gt; to deploy the DMN model to the execution server and execute a request.&lt;/p&gt; &lt;p&gt;When you now consult the Prometheus metrics page in KIE-Server, you can see the following metrics, which record the distribution of the insurance prices determined by the DMN model:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-642147 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-17-at-15.23.42-1024x93.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-17-at-15.23.42-1024x93.png" alt="The resulting metrics." width="640" height="58" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-17-at-15.23.42-1024x93.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-17-at-15.23.42-300x27.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-17-at-15.23.42-768x70.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve now seen how Red Hat Decision Manager and Red Hat Process Automation Manager provide support for Prometheus through the new KIE-Server extension. The extension uses a pluggable architecture, which allows us to plug in custom &lt;code&gt;PrometheusMetricsProviders&lt;/code&gt;. These metric providers can augment the out-of-the-box Prometheus metrics with custom, domain-specific, metrics.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fdomain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager%2F&amp;#38;linkname=Domain-specific%20Prometheus%20metrics%20with%20Red%20Hat%20Process%20Automation%20Manager%20and%20Decision%20Manager" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fdomain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager%2F&amp;#38;linkname=Domain-specific%20Prometheus%20metrics%20with%20Red%20Hat%20Process%20Automation%20Manager%20and%20Decision%20Manager" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fdomain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager%2F&amp;#38;linkname=Domain-specific%20Prometheus%20metrics%20with%20Red%20Hat%20Process%20Automation%20Manager%20and%20Decision%20Manager" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fdomain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager%2F&amp;#38;linkname=Domain-specific%20Prometheus%20metrics%20with%20Red%20Hat%20Process%20Automation%20Manager%20and%20Decision%20Manager" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fdomain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager%2F&amp;#38;linkname=Domain-specific%20Prometheus%20metrics%20with%20Red%20Hat%20Process%20Automation%20Manager%20and%20Decision%20Manager" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fdomain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager%2F&amp;#38;linkname=Domain-specific%20Prometheus%20metrics%20with%20Red%20Hat%20Process%20Automation%20Manager%20and%20Decision%20Manager" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fdomain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager%2F&amp;#38;linkname=Domain-specific%20Prometheus%20metrics%20with%20Red%20Hat%20Process%20Automation%20Manager%20and%20Decision%20Manager" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fdomain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager%2F&amp;#038;title=Domain-specific%20Prometheus%20metrics%20with%20Red%20Hat%20Process%20Automation%20Manager%20and%20Decision%20Manager" data-a2a-url="https://developers.redhat.com/blog/2019/10/31/domain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager/" data-a2a-title="Domain-specific Prometheus metrics with Red Hat Process Automation Manager and Decision Manager"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/31/domain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager/"&gt;Domain-specific Prometheus metrics with Red Hat Process Automation Manager and Decision Manager&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5vWV-It4Kv8" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Since version 7.4, Red Hat Process Automation Manager (RHPAM) and Red Hat Decision Manager (RHDM) provide support for monitoring various metrics through Prometheus. The platform&amp;#8217;s Execution Server (also known as KIE-Server) provides a Prometheus extension which, if enabled, exposes metrics like the number of containers deployed, the response time of rule and decision evaluations, etc. In this example, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/31/domain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager/"&gt;Domain-specific Prometheus metrics with Red Hat Process Automation Manager and Decision Manager&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">642097</post-id><dc:creator>Duncan Doyle</dc:creator><dc:date>2019-10-31T07:00:17Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/31/domain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager/</feedburner:origLink></entry><entry><title>OpenShift Connector: Visual Studio Code extension for Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/8I8KQEx4_-I/" /><category term="Announcement" /><category term="Developer Tools" /><category term="OpenShift" /><category term="VS Code" /><category term="Kubernetes" /><category term="Red Hat OpenShift" /><author><name>Mohit Suman</name></author><id>https://developers.redhat.com/blog/?p=638537</id><updated>2019-10-31T07:00:16Z</updated><published>2019-10-31T07:00:16Z</published><content type="html">&lt;p&gt;The new release of &lt;a href="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/"&gt;Red Hat OpenShift 4.2&lt;/a&gt; has many developer-focused improvements. In that context, we have released a new version of &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector" target="_blank" rel="noopener noreferrer"&gt;OpenShift Connector 0.1.1&lt;/a&gt;, a Visual Studio (VS) Code extension with more improved features for a seamless developer experience. Developers can now focus on higher-level abstractions like their application and components and can drill down deeper to get to the &lt;a href="https://developers.redhat.com/openshift/"&gt;OpenShift&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; resources that make up their application directly from VS Code.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a deep tour of the new features with respect to OpenShift Connector.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/m0wBKuKDYO0?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-638537"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;The new OpenShift Connector 0.1.1 features offer three major benefits:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Speeds up OpenShift development by supporting fully integrated OpenShift development and deployment within VS Code, which lets you connect to any OpenShift cluster and create, debug, and deploy from the IDE itself.&lt;/li&gt; &lt;li&gt;Simplifies inner-loop development for cloud infrastructure, since under the hood this extension uses tools like &lt;a href="https://docs.openshift.com/container-platform/4.2/cli_reference/openshift_developer_cli/understanding-odo.html" target="_blank" rel="noopener noreferrer"&gt;OpenShift Do (odo)&lt;/a&gt;—a fast and simple CLI tool for creating applications on &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;—and &lt;a href="https://docs.openshift.com/container-platform/4.2/cli_reference/openshift_cli/getting-started-cli.html" target="_blank" rel="noopener noreferrer"&gt;OpenShift CLI (oc)&lt;/a&gt; to help you interact with the local or production OpenShift instance and complete the inner-loop experience.&lt;/li&gt; &lt;li&gt;Enhances developer workflow by providing a streamlined developer experience for working with OpenShift instances (3.x or 4.x) and supporting public cloud instances such as Red Hat OpenShift on Azure and AWS.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Why OpenShift Connector?&lt;/h2&gt; &lt;p&gt;OpenShift Connector on VS Code provides an end-to-end developer experience for interacting with a Red Hat OpenShift cluster. By leveraging the IDE features, developers can create, deploy, and debug (upcoming) applications and then deploy directly to the running OpenShift cluster.&lt;/p&gt; &lt;p&gt;In upcoming releases, the connector will also support debugging for NodeJS and Java applications. In addition, here&amp;#8217;s a look at the features.&lt;/p&gt; &lt;h3&gt;Cluster management&lt;/h3&gt; &lt;p&gt;When it comes to cluster management, OpenShift Connector on VS Code:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Supports local OpenShift Cluster management for 3.x and 4.x clusters.&lt;/li&gt; &lt;li&gt;Works with remote OCP clusters such as Red Hat OpenShift on Azure and OpenShift on AWS.&lt;/li&gt; &lt;li&gt;Supports logging in to clusters using tokens and username/passwords.&lt;/li&gt; &lt;li&gt;Provides the functionality to switch contexts between different kubeconfig entries directly from the extension view.&lt;/li&gt; &lt;li&gt;Lets you view and manage OpenShift resources like build and deployment configs from the Kubernetes Explorer view.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Development&lt;/h3&gt; &lt;p&gt;When it comes to development, OpenShift Connector on VS Code:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Allows the user to connect to a local or hosted OpenShift cluster directly from VS Code.&lt;/li&gt; &lt;li&gt;Provides a streamlined inner-loop experience and quickly updates the changes on the cluster.&lt;/li&gt; &lt;li&gt;Creates components, services, and routes on the connected cluster.&lt;/li&gt; &lt;li&gt;Adds storage directly to a component from the extension itself.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Deployment&lt;/h3&gt; &lt;p&gt;When it comes to deployment, OpenShift Connector on VS Code:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Provides single-click deployment to OpenShift clusters right from VS Code.&lt;/li&gt; &lt;li&gt;Allows the user to navigate to the multiple routes you created to access the deployed application.&lt;/li&gt; &lt;li&gt;Deploys multiple interlinked components and services directly on the cluster.&lt;/li&gt; &lt;li&gt;Pushes and watches components changes directly.&lt;/li&gt; &lt;li&gt;Streams logs directly on the integrated terminal view of VS Code.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Monitoring&lt;/h3&gt; &lt;p&gt;When it comes to monitoring, OpenShift Connector on VS Code:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Allows you to work with Kubernetes resources directly from VS Code.&lt;/li&gt; &lt;li&gt;Starts and resumes build and deployment configurations.&lt;/li&gt; &lt;li&gt;Views and follows logs for deployments, pods, and containers.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Installing the extension&lt;/h2&gt; &lt;p&gt;You can install the OpenShift Connector extension using one of two methods. First, you can &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector" target="_blank" rel="noopener noreferrer"&gt;install the plugin&lt;/a&gt; directly from the Visual Studio Code Marketplace. Otherwise, you can open your machine&amp;#8217;s Visual Studio Code interface. Search for the OpenShift Connector extension and install it by using the &lt;strong&gt;Extensions&lt;/strong&gt; view extension icon in VS Code.&lt;/p&gt; &lt;h2&gt;Getting Started&lt;/h2&gt; &lt;p&gt;This getting started guide offers workflows for using the extension and enhancing the developer experience when working on OpenShift.&lt;/p&gt; &lt;h3&gt;Create a component in an OpenShift cluster&lt;/h3&gt; &lt;p&gt;Users can log into any OpenShift cluster, local or hosted. To run the instance of OpenShift cluster locally, developers can either use &lt;a href="https://github.com/code-ready/crc" target="_blank" rel="noopener noreferrer"&gt;CodeReady Containers&lt;/a&gt; for OpenShift 4.x clusters, or &lt;a href="https://docs.okd.io/latest/minishift/getting-started/index.html" target="_blank" rel="noopener noreferrer"&gt;Minishift&lt;/a&gt; /&lt;a href="https://developers.redhat.com/products/cdk/overview"&gt;Red Hat Container Development Kit&lt;/a&gt; for OpenShift 3.x clusters.&lt;/p&gt; &lt;p&gt;Next, log into your server and save your login for subsequent use. More specifically, Log into the given server with the given credentials, or log in using the bearer token for authentication to the API server.&lt;/p&gt; &lt;p&gt;To deploy a component:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create a new component from the project, and use a &lt;code&gt;git&lt;/code&gt; repository, binary file, or local workspace (directory) as the component&amp;#8217;s source.&lt;/li&gt; &lt;li&gt;Assign a context folder to every component when the extension prompts you to select the context folder and add it to the workspace.&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; All component configurations are saved to &lt;code&gt;/.odo/config.yaml&lt;/code&gt;. You can commit this file to your repository to easily recreate components with the same configuration later, or to share it with someone else.&lt;/p&gt; &lt;ol start="3"&gt; &lt;li&gt;To deploy the component to a cluster or to apply config changes, click the &lt;strong&gt;Push&lt;/strong&gt; action available in the component. A component resides in one of three states within the Tree View:&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li style="list-style-type: none;"&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;pushed&lt;/strong&gt;: When the components are deployed into the cluster.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;not pushed&lt;/strong&gt;: When are the components are in local config but &lt;em&gt;not&lt;/em&gt; deployed into the cluster.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;no context&lt;/strong&gt;: When there is no context folder associated with the component in the workspace.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In this example, we will see how to create a NodeJS-based component, deploy it on a Red Hat OpenShift 4.2 cluster, and access the cluster routes:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Right-click &lt;strong&gt;Cluster&lt;/strong&gt; -&amp;#62; &lt;b&gt;New Project&lt;/b&gt; as shown in Figure 1: &lt;p&gt;&lt;div id="attachment_638717" style="width: 459px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-638717" class="wp-image-638717" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-10-at-7.14.14-PM.png" alt="Create a new project." width="449" height="315" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-10-at-7.14.14-PM.png 986w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-10-at-7.14.14-PM-300x211.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-10-at-7.14.14-PM-768x539.png 768w" sizes="(max-width: 449px) 100vw, 449px" /&gt;&lt;p id="caption-attachment-638717" class="wp-caption-text"&gt;&lt;em&gt;Figure 1: Create a new project.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Select the application as shown in Figure 2 (if no application is present in the project, extension workflow prompts the user to create a new application): &lt;p&gt;&lt;div id="attachment_638737" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-638737" class="wp-image-638737 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.04.47-PM-1024x109.png" alt="Select the application." width="640" height="68" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.04.47-PM-1024x109.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.04.47-PM-300x32.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.04.47-PM-768x81.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.04.47-PM.png 1472w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-638737" class="wp-caption-text"&gt;&lt;em&gt;Figure 2: Select the application.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Select the component&amp;#8217;s source type. There are three source types available. For this example, we will use &lt;code&gt;git&lt;/code&gt;-based workflow to create the component, so we select &lt;strong&gt;Git Repository&lt;/strong&gt; as shown in Figure 3: &lt;p&gt;&lt;div id="attachment_638747" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-638747" class="wp-image-638747 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.02-PM-1024x205.png" alt="Select the source type." width="640" height="128" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.02-PM-1024x205.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.02-PM-300x60.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.02-PM-768x154.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.02-PM.png 1470w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-638747" class="wp-caption-text"&gt;&lt;em&gt;Figure 3: Select the source type.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Select the context folder where the component&amp;#8217;s configuration resides, as shown in Figure 4 (the dropdown will show all folders available in the workspace, if the user needs to select any other folder, click &lt;strong&gt;Add new context folder&lt;/strong&gt; and a dialog will let you select the folder): &lt;p&gt;&lt;div id="attachment_638757" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-638757" class="wp-image-638757 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.10-PM-1024x159.png" alt="Select context folder." width="640" height="99" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.10-PM-1024x159.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.10-PM-300x47.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.10-PM-768x119.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.10-PM.png 1470w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-638757" class="wp-caption-text"&gt;&lt;em&gt;Figure 4: Select the &lt;/em&gt;context&lt;em&gt; folder.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Provide the &lt;code&gt;git&lt;/code&gt; repository&amp;#8217;s URL, as shown in Figure 5 (this example uses the &lt;code&gt;git&lt;/code&gt; repository &lt;a href="https://github.com/mohitsuman/nodejs-ex" target="_blank" rel="noopener noreferrer"&gt;https://github.com/mohitsuman/nodejs-ex&lt;/a&gt;): &lt;p&gt;&lt;div id="attachment_638797" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-638797" class="wp-image-638797 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.34-PM-2-1024x125.png" alt="" width="640" height="78" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.34-PM-2-1024x125.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.34-PM-2-300x37.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.34-PM-2-768x94.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.34-PM-2.png 1476w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-638797" class="wp-caption-text"&gt;&lt;em&gt;Figure 5: Add the &lt;code&gt;git&lt;/code&gt; repository.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Select any specific branch or tag to fetch the component&amp;#8217;s configuration, as shown in Figure 6 (this feature provides flexibility to try and test any working feature directly on your OpenShift instance): &lt;p&gt;&lt;div id="attachment_638817" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-638817" class="wp-image-638817 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.45-PM-1024x278.png" alt="Select your git branch or tag." width="640" height="174" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.45-PM-1024x278.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.45-PM-300x81.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.45-PM-768x209.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.45-PM.png 1502w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-638817" class="wp-caption-text"&gt;&lt;em&gt;Figure 6: Select your &lt;code&gt;git&lt;/code&gt; branch or tag.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Provide the component&amp;#8217;s name, as shown in Figure 7:&lt;strong&gt;&lt;strong&gt;&lt;br /&gt; &lt;/strong&gt;&lt;/strong&gt;&lt;img class="wp-image-638997 size-large aligncenter" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.57-PM-1024x119.png" alt="Name the component." width="640" height="74" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.57-PM-1024x119.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.57-PM-300x35.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.57-PM-768x89.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.05.57-PM.png 1466w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;em&gt;Figure 7: Name the component.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;Provide the component&amp;#8217;s type, as shown in Figure 8 (in this example, we select &lt;strong&gt;nodejs&lt;/strong&gt;): &lt;p&gt;&lt;div id="attachment_639027" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639027" class="wp-image-639027 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.40.34-PM-1024x463.png" alt="Select the component's type." width="640" height="289" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.40.34-PM-1024x463.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.40.34-PM-300x136.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.40.34-PM-768x347.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.40.34-PM.png 1468w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-639027" class="wp-caption-text"&gt;&lt;em&gt;Figure 8: Select the component&amp;#8217;s type.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Provide the component&amp;#8217;s version, as shown in Figure 9 (for this example, we select the latest version of NodeJS): &lt;p&gt;&lt;div id="attachment_639047" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639047" class="wp-image-639047 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.17-PM-1024x241.png" alt="Select the component type's version." width="640" height="151" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.17-PM-1024x241.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.17-PM-300x71.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.17-PM-768x181.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.17-PM.png 1472w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-639047" class="wp-caption-text"&gt;&lt;em&gt;Figure 9: Select the component type&amp;#8217;s version.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 40px;"&gt;Once the action is successful, the component is created and added to the local configuration. The state of the component is &amp;#8220;not pushed&amp;#8221; and is updated in the tree view for the cluster. At this stage, nothing is pushed at the cluster, as you see in Figure 10:&lt;/p&gt; &lt;div id="attachment_639057" style="width: 620px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639057" class="wp-image-639057 " src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.46-PM-1024x303.png" alt="This component has not yet been pushed." width="610" height="180" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.46-PM-1024x303.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.46-PM-300x89.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.46-PM-768x227.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-12.06.46-PM.png 1204w" sizes="(max-width: 610px) 100vw, 610px" /&gt;&lt;p id="caption-attachment-639057" class="wp-caption-text"&gt;&lt;em&gt;Figure 10: This component has not yet been pushed.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;ol start="10"&gt; &lt;li&gt;Push these changes to the cluster by right-clicking the project and clicking &lt;strong&gt;Push&lt;/strong&gt; in the context menu as you see in Figure 11: &lt;p&gt;&lt;div id="attachment_639067" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639067" class="wp-image-639067 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-6.17.37-PM-1024x437.png" alt="Push the changes to the cluster." width="640" height="273" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-6.17.37-PM-1024x437.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-6.17.37-PM-300x128.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-6.17.37-PM-768x328.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-01-at-6.17.37-PM.png 1176w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-639067" class="wp-caption-text"&gt;&lt;em&gt;Figure 11: Push the changes to the cluster.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 40px;"&gt;Watch the push command&amp;#8217;s progress streamed directly in the integrated terminal view, as shown in Figure 12:&lt;/p&gt; &lt;div id="attachment_639077" style="width: 699px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639077" class="wp-image-639077" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-3.36.06-PM.png" alt="The push command's progress streamed in the integrated terminal view." width="689" height="343" /&gt;&lt;p id="caption-attachment-639077" class="wp-caption-text"&gt;&lt;em&gt;Figure 12: The push command&amp;#8217;s progress streamed in the integrated terminal view.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;The state of the component is changed to &amp;#8220;pushed&amp;#8221; once the component is successfully pushed to the cluster, as shown in Figure 13:&lt;/p&gt; &lt;div id="attachment_639087" style="width: 509px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639087" class="wp-image-639087" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-3.44.06-PM.png" alt="The component has now been pushed." width="499" height="151" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-3.44.06-PM.png 1000w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-3.44.06-PM-300x91.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-3.44.06-PM-768x232.png 768w" sizes="(max-width: 499px) 100vw, 499px" /&gt;&lt;p id="caption-attachment-639087" class="wp-caption-text"&gt;&lt;em&gt;Figure 13: The component has now been pushed.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Create and access a route to the cluster&lt;/h3&gt; &lt;p&gt;Let&amp;#8217;s create a route for the component and expose the ports associated with it by selecting &lt;strong&gt;Component&lt;/strong&gt; -&amp;#62; &lt;strong&gt;New URL&lt;/strong&gt;. If the component supports multiple ports, the extension prompts the user to select the port attached to the route created. The URLs that are generated using this command can be used to access the deployed components from outside the cluster.&lt;/p&gt; &lt;p&gt;Once the new URL is created, it has to be pushed to the cluster, so that the new route is assigned to the cluster. You can then access the route by right-clicking the project and selecting &lt;strong&gt;Open in Browser&lt;/strong&gt;, as shown in Figure 14:&lt;/p&gt; &lt;div id="attachment_639137" style="width: 491px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639137" class="wp-image-639137" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-4.17.09-PM.png" alt="Access your new route to the cluster." width="481" height="472" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-4.17.09-PM.png 1004w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-4.17.09-PM-300x295.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-4.17.09-PM-768x754.png 768w" sizes="(max-width: 481px) 100vw, 481px" /&gt;&lt;p id="caption-attachment-639137" class="wp-caption-text"&gt;&lt;em&gt;Figure 14: Access your new route to the cluster.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;If there are multiple routes associated with the component, a prompt is displayed for you to select the required one and proceed.&lt;/p&gt; &lt;h3&gt;Add storage to a component&lt;/h3&gt; &lt;p&gt;Do the following to let the user create storage and mount it to a component:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Select the component where you want to attach the storage by choosing &lt;strong&gt;Component&lt;/strong&gt; -&amp;#62; &lt;strong&gt;New Storage&lt;/strong&gt;, as shown in Figure 15: &lt;p&gt;&lt;div id="attachment_644377" style="width: 497px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644377" class="wp-image-644377 aligncenter" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.17.33-PM-1.png" alt="" width="487" height="501" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.17.33-PM-1.png 974w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.17.33-PM-1-292x300.png 292w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.17.33-PM-1-768x790.png 768w" sizes="(max-width: 487px) 100vw, 487px" /&gt;&lt;p id="caption-attachment-644377" class="wp-caption-text"&gt;&lt;em&gt;Figure 15: Add new storage to a component.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Provide the name for this storage, as shown in Figure 16: &lt;p&gt;&lt;div id="attachment_639497" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639497" class="wp-image-639497 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.17.51-PM-1024x129.png" alt="Provide the name for this storage." width="640" height="81" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.17.51-PM-1024x129.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.17.51-PM-300x38.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.17.51-PM-768x96.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.17.51-PM.png 1258w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-639497" class="wp-caption-text"&gt;&lt;em&gt;Figure 16: Provide the name for this storage.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Specify the storage mount path, as shown in Figure 17: &lt;p&gt;&lt;div id="attachment_639507" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639507" class="wp-image-639507 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.07-PM-1024x122.png" alt="Provide the storage mount path." width="640" height="76" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.07-PM-1024x122.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.07-PM-300x36.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.07-PM-768x91.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.07-PM.png 1230w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-639507" class="wp-caption-text"&gt;&lt;em&gt;Figure 17: Provide the storage mount path.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Select storage size from the available options, as shown in Figure 18. &lt;p&gt;&lt;div id="attachment_639517" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639517" class="wp-image-639517 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.15-PM-1024x205.png" alt="Select storage size." width="640" height="128" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.15-PM-1024x205.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.15-PM-300x60.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.15-PM-768x154.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.18.15-PM.png 1248w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-639517" class="wp-caption-text"&gt;&lt;em&gt;Figure 18: Select storage size.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Push this change to the cluster by running the push command, results shown in Figure 19. The Tree View is updated with the storage node after successful storage creation. &lt;p&gt;&lt;div id="attachment_639547" style="width: 641px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639547" class="wp-image-639547" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.42.33-PM.png" alt="Pushing the storage addition to the cluster." width="631" height="268" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.42.33-PM.png 984w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.42.33-PM-300x127.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.42.33-PM-768x326.png 768w" sizes="(max-width: 631px) 100vw, 631px" /&gt;&lt;p id="caption-attachment-639547" class="wp-caption-text"&gt;&lt;em&gt;Figure 19: Push the storage addition to the cluster.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;/ol&gt; &lt;h3 id="viewing_logs"&gt;View logs&lt;/h3&gt; &lt;p&gt;This extension adds two context menu options regarding logs. The first is &lt;strong&gt;Follow Logs&lt;/strong&gt;, which lets you follow the logs stream for the running pods within the integrated terminal output from your deployment. The second is &lt;strong&gt;Show Logs&lt;/strong&gt;, which lets users view logs from a specific resource, as shown in Figure 20:&lt;/p&gt; &lt;div id="attachment_639447" style="width: 555px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639447" class="wp-image-639447" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.02.39-PM.png" alt="The Show Logs context menu option." width="545" height="543" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.02.39-PM.png 992w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.02.39-PM-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.02.39-PM-300x300.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.02.39-PM-768x765.png 768w" sizes="(max-width: 545px) 100vw, 545px" /&gt;&lt;p id="caption-attachment-639447" class="wp-caption-text"&gt;&lt;em&gt;Figure 20: The Show Logs context menu option.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Undeploy a component&lt;/h3&gt; &lt;p&gt;To undeploy a component from the cluster and keep it in the local configuration, run the &lt;strong&gt;Undeploy&lt;/strong&gt; command from the component&amp;#8217;s context menu, as shown in Figure 21:&lt;/p&gt; &lt;div id="attachment_642657" style="width: 441px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-642657" class="wp-image-642657" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-4.31.06-PM-1.png" alt="Undeploy a component." width="431" height="433" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-4.31.06-PM-1.png 994w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-4.31.06-PM-1-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-4.31.06-PM-1-300x300.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-09-at-4.31.06-PM-1-768x771.png 768w" sizes="(max-width: 431px) 100vw, 431px" /&gt;&lt;p id="caption-attachment-642657" class="wp-caption-text"&gt;&lt;em&gt;Figure 21: Undeploy a component.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Delete a component&lt;/h3&gt; &lt;p&gt;To delete the component from the cluster and local workspace, select &lt;strong&gt;Component&lt;/strong&gt; -&amp;#62; &lt;strong&gt;Delete&lt;/strong&gt;. The component will be deleted from the local folder configuration, and the &lt;code&gt;.odo&lt;/code&gt; file will be removed from the context folder, as shown in Figure 22:&lt;/p&gt; &lt;div id="attachment_639457" style="width: 584px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639457" class="wp-image-639457" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.10.29-PM.png" alt="Delete a component." width="574" height="581" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.10.29-PM.png 976w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.10.29-PM-296x300.png 296w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.10.29-PM-768x777.png 768w" sizes="(max-width: 574px) 100vw, 574px" /&gt;&lt;p id="caption-attachment-639457" class="wp-caption-text"&gt;&lt;em&gt;Figure 22: Delete a component.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Describe a resource&lt;/h3&gt; &lt;p&gt;Users can describe a specific resource, as shown in Figure 23, including information such as its name, type, source, environment variables, and debug ports exposed:&lt;/p&gt; &lt;div id="attachment_639477" style="width: 532px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639477" class="wp-image-639477" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.15.56-PM.png" alt="Describe your resource." width="522" height="533" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.15.56-PM.png 972w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.15.56-PM-294x300.png 294w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.15.56-PM-768x784.png 768w" sizes="(max-width: 522px) 100vw, 522px" /&gt;&lt;p id="caption-attachment-639477" class="wp-caption-text"&gt;&lt;em&gt;Figure 23: Describe your resource.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Link components and services&lt;/h3&gt; &lt;p&gt;Real-world applications contain multiple components and services that need to work together. Using this extension, users can perform the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;To link multiple components together using &lt;strong&gt;Component &lt;/strong&gt;-&amp;#62; &lt;strong&gt;Link Component&lt;/strong&gt;. For example, consider a front-end component on Node JS and a back-end component on Java linked together.&lt;/li&gt; &lt;li&gt;To link a component to a service, select &lt;strong&gt;Component&lt;/strong&gt; -&amp;#62; &lt;strong&gt;Link Service&lt;/strong&gt;, as shown in Figure 24. For example, consider a front-end component on Node JS being linked to a MongoDB service.&lt;/li&gt; &lt;/ul&gt; &lt;div id="attachment_639557" style="width: 557px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-639557" class="wp-image-639557" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.47.19-PM.png" alt="Link a service to a component." width="547" height="550" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.47.19-PM.png 990w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.47.19-PM-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.47.19-PM-298x300.png 298w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-11-at-5.47.19-PM-768x773.png 768w" sizes="(max-width: 547px) 100vw, 547px" /&gt;&lt;p id="caption-attachment-639557" class="wp-caption-text"&gt;&lt;em&gt;Figure 24: Link &lt;/em&gt;a service&lt;em&gt; to a component.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;View Kubernetes resources&lt;/h3&gt; &lt;p&gt;For easier management of Kubernetes resources, users can use the Kubernetes explorer (added as a dependency), which is accessible from the VS Code Activity Bar. This explorer lets you access information about your Kubernetes clusters and resources. You can set an active OpenShift Project, stream and view its logs, start and stop builds, and much more. Here is a selection of the actions available for interacting with your OpenShift resources:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Switch OpenShift projects&lt;/strong&gt;: Set the specified project as the active project, and work with its specific resources.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Open OpenShift projects in the console&lt;/strong&gt;: Users can open specific projects in the running OpenShift console dashboard, as shown in Figure 25: &lt;p&gt;&lt;div id="attachment_642497" style="width: 328px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-642497" class="wp-image-642497" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.21.02-PM.png" alt="Open your OpenShift project in the console." width="318" height="405" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.21.02-PM.png 998w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.21.02-PM-235x300.png 235w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.21.02-PM-768x979.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.21.02-PM-803x1024.png 803w" sizes="(max-width: 318px) 100vw, 318px" /&gt;&lt;p id="caption-attachment-642497" class="wp-caption-text"&gt;&lt;em&gt;Figure 25: Open your OpenShift project in the console.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Perform actions in the deployment config&lt;/strong&gt;: Users can perform various actions specific to a deployment config, such as &lt;strong&gt;Show Logs&lt;/strong&gt;, &lt;strong&gt;Deploy&lt;/strong&gt; the config, and &lt;strong&gt;Open in console&lt;/strong&gt; directly from the explorer, as shown in Figure 26: &lt;p&gt;&lt;div id="attachment_642507" style="width: 360px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-642507" class="wp-image-642507" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.30.27-PM.png" alt="Use actions in the deployment config." width="350" height="241" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.30.27-PM.png 884w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.30.27-PM-300x207.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.30.27-PM-768x530.png 768w" sizes="(max-width: 350px) 100vw, 350px" /&gt;&lt;p id="caption-attachment-642507" class="wp-caption-text"&gt;&lt;em&gt;Figure 26: Use actions in the deployment config.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Perform actions in the build config&lt;/strong&gt;: Users can start a specific build from the build config directly from the explorer (as shown in Figure 27) and view it in the console dashboard: &lt;p&gt;&lt;div id="attachment_642517" style="width: 456px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-642517" class="wp-image-642517" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.50.39-PM.png" alt="Start a build in the explorer." width="446" height="271" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.50.39-PM.png 868w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.50.39-PM-300x182.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-20-at-7.50.39-PM-768x467.png 768w" sizes="(max-width: 446px) 100vw, 446px" /&gt;&lt;p id="caption-attachment-642517" class="wp-caption-text"&gt;&lt;em&gt;Figure 27: Start a build in the explorer.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Getting support&lt;/h2&gt; &lt;p&gt;If you encounter any bugs, confusing commands, or unclear documentation, or if you would like to propose a feature request, you can submit your feedback by:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Selecting &lt;b&gt;OpenShift: Report Extension Issue&lt;/b&gt; from the command palette option or the extension title view.&lt;/li&gt; &lt;li&gt;Filing your issue directly on &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/issues" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Discussing your issue with the team and community on &lt;a href="https://gitter.im/redhat-developer/openshift-connector" target="_blank" rel="noopener noreferrer"&gt;Gitter&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Try the latest version of &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector" target="_blank" rel="noopener noreferrer"&gt;OpenShift Connector&lt;/a&gt; from the VS Code Marketplace. There are several infrastructure options available, including Laptop, which allows you to &lt;a href="http://developers.redhat.com/products/codeready-containers"&gt;install an OpenShift cluster locally using Red Hat CodeReady Containers&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fopenshift-connector-visual-studio-code-extension-for-red-hat-openshift%2F&amp;#38;linkname=OpenShift%20Connector%3A%20Visual%20Studio%20Code%20extension%20for%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fopenshift-connector-visual-studio-code-extension-for-red-hat-openshift%2F&amp;#38;linkname=OpenShift%20Connector%3A%20Visual%20Studio%20Code%20extension%20for%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fopenshift-connector-visual-studio-code-extension-for-red-hat-openshift%2F&amp;#38;linkname=OpenShift%20Connector%3A%20Visual%20Studio%20Code%20extension%20for%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fopenshift-connector-visual-studio-code-extension-for-red-hat-openshift%2F&amp;#38;linkname=OpenShift%20Connector%3A%20Visual%20Studio%20Code%20extension%20for%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fopenshift-connector-visual-studio-code-extension-for-red-hat-openshift%2F&amp;#38;linkname=OpenShift%20Connector%3A%20Visual%20Studio%20Code%20extension%20for%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fopenshift-connector-visual-studio-code-extension-for-red-hat-openshift%2F&amp;#38;linkname=OpenShift%20Connector%3A%20Visual%20Studio%20Code%20extension%20for%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fopenshift-connector-visual-studio-code-extension-for-red-hat-openshift%2F&amp;#38;linkname=OpenShift%20Connector%3A%20Visual%20Studio%20Code%20extension%20for%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F31%2Fopenshift-connector-visual-studio-code-extension-for-red-hat-openshift%2F&amp;#038;title=OpenShift%20Connector%3A%20Visual%20Studio%20Code%20extension%20for%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/10/31/openshift-connector-visual-studio-code-extension-for-red-hat-openshift/" data-a2a-title="OpenShift Connector: Visual Studio Code extension for Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/31/openshift-connector-visual-studio-code-extension-for-red-hat-openshift/"&gt;OpenShift Connector: Visual Studio Code extension for Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/8I8KQEx4_-I" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The new release of Red Hat OpenShift 4.2 has many developer-focused improvements. In that context, we have released a new version of OpenShift Connector 0.1.1, a Visual Studio (VS) Code extension with more improved features for a seamless developer experience. Developers can now focus on higher-level abstractions like their application and components and can drill down [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/31/openshift-connector-visual-studio-code-extension-for-red-hat-openshift/"&gt;OpenShift Connector: Visual Studio Code extension for Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">638537</post-id><dc:creator>Mohit Suman</dc:creator><dc:date>2019-10-31T07:00:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/31/openshift-connector-visual-studio-code-extension-for-red-hat-openshift/</feedburner:origLink></entry><entry><title>Codemotion Rome 2020 submissions</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/xUdYGHluST4/codemotion-rome-2020-submissions.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-codemotion_rome_2020_submissions</id><updated>2019-11-03T10:55:29Z</updated><published>2019-10-31T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-v3oIemLoQZI/Xb6xlC1BagI/AAAAAAAAwsM/CuRVIscmIbsBn6Ug6WHetRRYytbrAt7ggCNcBGAsYHQ/s1600/Screenshot%2B2019-11-03%2Bat%2B11.52.30.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="codemotion rome 2020" border="0" data-original-height="478" data-original-width="756" height="202" src="https://1.bp.blogspot.com/-v3oIemLoQZI/Xb6xlC1BagI/AAAAAAAAwsM/CuRVIscmIbsBn6Ug6WHetRRYytbrAt7ggCNcBGAsYHQ/s320/Screenshot%2B2019-11-03%2Bat%2B11.52.30.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;It's that time of year again, where one of the best Codemotion conferences that is held in &lt;a href="https://events.codemotion.com/conferences/rome/2020/" target="_blank"&gt;Rome on March 27-28, 2020&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;I've been invited to speak there several times over the years but it's been awhile so it's time to try again with the topics and material that's been developed over the last year. There's workshop material focused on creating DevOps heroes, microservice tips, and a bit of career help with how open source&amp;nbsp; is the key.&lt;br /&gt;&lt;br /&gt;These are the following submissions I've put forth for &lt;a href="https://events.codemotion.com/conferences/rome/2020/" target="_blank"&gt;Codemotion Rome 2020&lt;/a&gt;:&lt;br /&gt;&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;DevOps Heroes: Adding automation integration to your toolbox&lt;/h3&gt;&lt;i&gt;DevOps is more than the process of automating your CI/CD pipelines to generate code and deployment artifacts. It's also about organizational change and integration of many subtle processes that help you to deliver and manage applications seamlessly. Let's unlock the power of process integration in a live coding session. We'll install the tooling, build the project components, and deploy a DevOps testing automation integration project right in front of your eyes. Best of all, everything is freely available in an online self-paced workshop format to pursue at home. Join me for some DevOps fun!&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;5 Questions Everyone Ignores with Microservices&lt;/h3&gt;&lt;i&gt;The daily hype is all around you. Microservices are a necessary step along the path to integration for a digitally successful future for your organization. Funny enough, when discussing the development impact while transitioning to microservices, there are five questions that keep popping up. This session covers the questions that everyone should ask about microservices. Join us for an hour of power, where real life developer experiences are used to highlight the lessons we're all learning as we transition our integration infrastructure into modern day microservices. &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Open Key to Your Career&lt;/h3&gt;&lt;i&gt;It's not coincidence. It's not luck. It's not going to happen by itself, so what's the secret sauce? Understanding what makes a career in open source grow, what choices are crucial, and what actions accelerate or damage your open source future are sometimes hard to grasp. Learning to position, expand and grow your personal brand in the open source world is what this session provides. Be ready for your next step in open source. Join me for an hour of power where you'll be given a clear and easy to use plan for jump starting your open source career immediately.&amp;nbsp;&amp;nbsp;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Hope that one of these makes the cut and see you there in Rome!&lt;i&gt; &lt;/i&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=E2KlDHQergM:CRFJIdozXqk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=E2KlDHQergM:CRFJIdozXqk:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=E2KlDHQergM:CRFJIdozXqk:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=E2KlDHQergM:CRFJIdozXqk:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=E2KlDHQergM:CRFJIdozXqk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=E2KlDHQergM:CRFJIdozXqk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=E2KlDHQergM:CRFJIdozXqk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=E2KlDHQergM:CRFJIdozXqk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=E2KlDHQergM:CRFJIdozXqk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=E2KlDHQergM:CRFJIdozXqk:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=E2KlDHQergM:CRFJIdozXqk:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/E2KlDHQergM" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/xUdYGHluST4" height="1" width="1" alt=""/&gt;</content><summary>It's that time of year again, where one of the best Codemotion conferences that is held in Rome on March 27-28, 2020. I've been invited to speak there several times over the years but it's been awhile so it's time to try again with the topics and material that's been developed over the last year. There's workshop material focused on creating DevOps heroes, microservice tips, and a bit of career he...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-10-31T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/E2KlDHQergM/codemotion-rome-2020-submissions.html</feedburner:origLink></entry><entry><title>JBoss Editorial (October 30th): Cloud, Quarkus, Keycloak and more</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/qHivhWb9Zww/jboss-editorial-october-30th-cloud-quarkus-keycloak-and-more" /><category term="byteman" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="news" scheme="searchisko:content:tags" /><category term="open sourcve" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><category term="weekly_update" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Kevin Conner</name></author><id>searchisko:content:id:jbossorg_blog-jboss_editorial_october_30th_cloud_quarkus_keycloak_and_more</id><updated>2019-10-31T04:34:50Z</updated><published>2019-10-31T04:34:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:b47973a7-2ef3-41a3-bd39-3f71d7181bf2] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Welcome to another edition of the JBoss Editorial where we delve into the JBoss Communities in search of more exciting developments and news from the JBoss projects.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Developing Cloud Native Java applications with Quarkus&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;If you develop Java applications for the cloud then &lt;a class="jive-link-external-small" href="https://quarkus.io/" rel="nofollow"&gt;Quarkus&lt;/a&gt; is the framework you should be using.&amp;#160; Tailoring your application for GraalVM and HotSpot it results in a very fast boot time and low memory footprint, allowing your application to scale up quickly with higher density.&amp;#160; To see Quarkus in action check out &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/24/bring-joy-to-development-with-quarkus-the-cloud-native-java-framework/" rel="nofollow"&gt;Edson's DevNation Live presentation where he demonstrates its advantages through a live coding session&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Introducing Keycloak.X&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The &lt;a class="jive-link-external-small" href="https://www.keycloak.org/" rel="nofollow"&gt;Keycloak&lt;/a&gt; team are developing a new version of Keycloak with some lofty goals.&amp;#160; The Keycloak.X distribution will focus on &lt;a class="jive-link-external-small" href="https://www.keycloak.org/2019/10/keycloak-x.html" rel="nofollow"&gt;usability, reduced startup and memory footprint thanks to its use of Quarkus, support for zero-downtime upgrades and more&lt;/a&gt;.&amp;#160; The Keycloak team would love your help whether that is through code contributions, taking part in discussions or just trying it out.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Introducing jBPM's Human Task Recommendation API&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;With the introduction of &lt;a class="jive-link-external-small" href="https://www.jbpm.org/" rel="nofollow"&gt;jBPM's&lt;/a&gt; Human Task recommendation API it is now possible to include machine learning capabilities within your jBPM projects.&amp;#160; The API provides developers with the ability to integrate predictive models and have these recommendation services assign predicted values for the task or automatically complete the task should a predefined confidence level be reached.&amp;#160; If you are interested in exploring this feature then &lt;a class="jive-link-external-small" href="http://mswiderski.blogspot.com/2019/10/introducing-jbpms-human-task.html" rel="nofollow"&gt;check out Rui's post where he describes the API and demonstrates how it can be used through a working example project&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Planned Security Features for WildFly 19&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;With the &lt;a class="jive-link-blog-small" data-containerId="5158" data-containerType="37" data-objectId="6327" data-objectType="38" href="https://developer.jboss.org/people/fjuma/blog/2019/10/10/planned-security-features-for-wildfly-19"&gt;feature development phase of WildFly 19 underway the WildFly team would like to highlight some of the security features being worked on as part of this release&lt;/a&gt;.&amp;#160; Some of the features under development include support for MicroProfile JWT 1.1, Web Service and REST integration with Elytron, SSH integration for Git and more.&amp;#160; If you are interested in any of these features, or the others mentioned in the blog post, then please get in contact with the team and provide some feedback.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;JBoss Out and About&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Back in August Eric Schabell was attending DevConf.US where he gave two presentations.&amp;#160; The first presentation covered microservices and was entitled "&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/10/3-pitfalls-everyone-ignores-with-microservices-video.html" rel="nofollow"&gt;The 3 Pitfalls Everyone Ignores with Microservices&lt;/a&gt;" with his second presentations covering his route into open source and entitled "&lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/10/how-to-jump-start-your-career-in-open-source-video.html" rel="nofollow"&gt;How to jump start you career in open source&lt;/a&gt;".&amp;#160; Check out both links for Eric's slides and recordings of his presentations.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Having recently hosted a webinar covering a Cloud Native developer tool chain Eric nows follows up with a step-by-step video demonstrating &lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/10/getting-started-with-cloud-native-development-on-openshift-video.html" rel="nofollow"&gt;how to use the the tooling for Red Hat OpenShift Application Runtimes (RHOAR) to create and launch a Spring Boot example program on OpenShift&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;New Releases&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="https://byteman.jboss.org/" rel="nofollow"&gt;Byteman&lt;/a&gt; team have announced the release of &lt;a class="jive-link-external-small" href="http://bytemanblog.blogspot.com/2019/10/byteman-408-has-been-released.html" rel="nofollow"&gt;Byteman 4.0.8&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="https://www.keycloak.org/" rel="nofollow"&gt;Keycloak&lt;/a&gt; team have announced the release of &lt;a class="jive-link-external-small" href="https://www.keycloak.org/2019/10/keycloak-701-released.html" rel="nofollow"&gt;Keycloak 7.0.1&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;That's all for another edition of the JBoss Editorial, please join us again for more exciting development from the JBoss Communities.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:b47973a7-2ef3-41a3-bd39-3f71d7181bf2] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/qHivhWb9Zww" height="1" width="1" alt=""/&gt;</content><summary>Welcome to another edition of the JBoss Editorial where we delve into the JBoss Communities in search of more exciting developments and news from the JBoss projects.   Developing Cloud Native Java applications with Quarkus   If you develop Java applications for the cloud then Quarkus is the framework you should be using.  Tailoring your application for GraalVM and HotSpot it results in a very fast...</summary><dc:creator>Kevin Conner</dc:creator><dc:date>2019-10-31T04:34:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/10/31/jboss-editorial-october-30th-cloud-quarkus-keycloak-and-more</feedburner:origLink></entry><entry><title>How to secure microservices with Red Hat Single Sign-On, Fuse, and 3scale</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/wGNu5e3rax0/" /><category term="Microservices" /><category term="Red Hat 3scale API Management" /><category term="Red Hat Developer Toolset" /><category term="Red Hat OpenShift Container Storafe" /><category term="Red Hat SSO" /><category term="Security" /><category term="Fuse" /><category term="microservices" /><category term="single sign-on" /><author><name>raphael abreu</name></author><id>https://developers.redhat.com/blog/?p=637097</id><updated>2019-10-30T07:00:39Z</updated><published>2019-10-30T07:00:39Z</published><content type="html">&lt;p&gt;In this article, we&amp;#8217;ll cover microservice security concepts by using protocols such as OpenID Connect with the support of &lt;a href="https://developers.redhat.com/blog/2019/02/06/using-a-public-certificate-with-red-hat-single-sign-on-keycloak/"&gt;Red Hat Single Sign-On&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/3scale/overview"&gt;3scale&lt;/a&gt;. Working with a &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservice&lt;/a&gt;-based architecture, user identity, and access control in a distributed, in-depth form must be carefully designed. Here, the integration of these tools will be detailed, step-by-step, in a realistic view.&lt;/p&gt; &lt;p&gt;This article exemplifies the use of tools that can securely run your businesses, avoiding using homemade solutions, and protecting your services by using an API gateway, preventing your applications from being exposed to the public network. The use of an API gateway also provides additional access control, monetization, and analytics.&lt;span id="more-637097"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;img class="aligncenter" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/01.png" alt="security" width="824" height="708" /&gt;&lt;/p&gt; &lt;table style="border-width: 1px; border-color: #ed0909; margin-left: auto; margin-right: auto; width: 419px;"&gt; &lt;thead&gt; &lt;tr style="height: 25px;"&gt; &lt;th style="background-color: #ffadad; height: 25px; width: 174px;"&gt;&lt;span style="color: #940a0a; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;Technology&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #ffadad; height: 25px; width: 235px;"&gt;&lt;span style="color: #940a0a; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px; width: 174px;"&gt;&lt;span style="font-size: small;"&gt;Spring Boot&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px; width: 235px;"&gt;&lt;span style="font-size: 13px;"&gt;2.1.8.RELEASE&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 55px;"&gt; &lt;td style="height: 55px; width: 174px;"&gt;&lt;span style="font-size: 13px;"&gt;&lt;a style="color: #0366d6; background-color: #f6f8fa; text-decoration: underline;" href="https://camel.apache.org/" target="_blank" rel="nofollow noopener noreferrer"&gt;Apache Camel&lt;/a&gt;&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 55px; width: 235px;"&gt;&lt;span style="font-size: 13px;"&gt;&lt;a style="color: #0366d6; background-color: #f6f8fa; text-decoration: underline;" href="https://www.redhat.com/en/technologies/jboss-middleware/fuse" target="_blank" rel="nofollow noopener noreferrer"&gt;7.4.0.fuse-740036-redhat-00002&lt;/a&gt;&lt;/span&gt;&lt;br style="color: #24292e; background-color: #f6f8fa; font-size: 16px;" /&gt;&lt;span style="color: #24292e; background-color: #f6f8fa; font-size: 13px;"&gt;(w/ spring boot 1.5.22.RELEASE)&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px; width: 174px;"&gt;&lt;span style="font-size: 13px;"&gt;&lt;a style="color: #0366d6; background-color: #ffffff; text-decoration: none;" href="https://www.3scale.net/" target="_blank" rel="nofollow noopener noreferrer"&gt;3scale&lt;/a&gt;&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px; width: 235px;"&gt;&lt;span style="font-size: 13px;"&gt;&lt;a style="color: #0366d6; background-color: #ffffff; text-decoration: none;" href="https://access.redhat.com/containers/#/product/RedHat3scaleApiManagement" target="_blank" rel="nofollow noopener noreferrer"&gt;2.6&lt;/a&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 55px;"&gt; &lt;td style="height: 55px; width: 174px;"&gt;&lt;a href="https://access.redhat.com/products/red-hat-single-sign-on" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-size: 13px;"&gt;Red Hat Single Sign-On (RHSSO)&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; &lt;td style="height: 55px; width: 235px;"&gt;&lt;span style="font-size: 13px;"&gt;&lt;a style="color: #0366d6; background-color: #f6f8fa; text-decoration: none;" href="https://access.redhat.com/containers/#/product/RedHatSingleSign-on" target="_blank" rel="nofollow noopener noreferrer"&gt;7.3.3&lt;/a&gt;&lt;/span&gt;&lt;br style="color: #24292e; background-color: #f6f8fa; font-size: 16px;" /&gt;&lt;span style="font-size: 13px;"&gt;&lt;span style="color: #24292e; background-color: #f6f8fa;"&gt;(based on &lt;/span&gt;&lt;a style="color: #0366d6; background-color: #f6f8fa; text-decoration: none;" href="https://access.redhat.com/articles/2342881" target="_blank" rel="nofollow noopener noreferrer"&gt;keycloak 4.8&lt;/a&gt;&lt;span style="color: #24292e; background-color: #f6f8fa;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a demonstration of how to protect APIs with Red Hat Single Sign-On (Keycloak) and 3scale.&lt;/p&gt; &lt;p&gt;&lt;img class="aligncenter" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/04.png" width="304" height="433" /&gt;&lt;/p&gt; &lt;p&gt;This is a lengthy article with step-by-step instructions, screenshots of products, and architecture concepts. All source code is hosted on GitHub.&lt;/p&gt; &lt;p style="padding-left: 80px;"&gt;&lt;strong&gt;Note: &lt;/strong&gt;This is a proof of concept. In production environments, additional configurations will be needed regarding scalability, security (refinement) and using a proper CA-trusted certificate.&lt;/p&gt; &lt;h2&gt;The use case scenario&lt;/h2&gt; &lt;p&gt;The main purpose of this tutorial is to achieve concepts regarding the security of microservices using a whole use case scenario. A web app is offered to promote a more natural understanding of all API calls and authorizations used.&lt;/p&gt; &lt;p&gt;The All APIs catalog is exposed below.&lt;/p&gt; &lt;h4&gt;&lt;code&gt;auth-integration-api&lt;/code&gt; endpoints&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;:8081&lt;/strong&gt;&lt;/p&gt; &lt;table style="border-width: 0.5; border-color: #e0e0e0; float: left;"&gt; &lt;thead&gt; &lt;tr style="height: 28px;"&gt; &lt;th style="background-color: #306fc7; height: 28px;"&gt;&lt;span style="color: #ffffff; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;Method&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7; height: 28px;"&gt;&lt;span style="color: #ffffff; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;URI&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7; height: 28px;"&gt;&lt;span style="color: #ffffff; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/health&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="background-color: #ffffff; font-size: 13px;"&gt;API actuator embedded health.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/metrics&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="background-color: #f6f8fa; font-size: 13px;"&gt;API actuator embedded metrics.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;:8080&lt;/strong&gt;&lt;/p&gt; &lt;table style="border-width: 0.5; border-color: #e0e0e0;"&gt; &lt;thead&gt; &lt;tr style="height: 27px;"&gt; &lt;th style="background-color: #306fc7; height: 27px;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Method&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7; height: 27px;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;URI&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7; height: 27px;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7; height: 27px;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Secured?&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;POST&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Create a new product.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;DELETE&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product/*&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Delete product by ID.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;PUT&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product/*&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Update product by ID.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product$&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Retrieve all products&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product/*&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Same as above.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/status&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Check Integration API health.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product/status&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Check Product API health.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/supplier/status&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Check Supplier API health.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/stock/status&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Check Stock API health.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/stock/maintenance&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Call Stock API maintenance.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/supplier/maintenance&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;Call Supplier API maintenance.&lt;/span&gt;&lt;/td&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div&gt; &lt;div&gt; &lt;h4&gt;&lt;code&gt;stock-api&lt;/code&gt; endpoints&lt;/h4&gt; &lt;/div&gt; &lt;/div&gt; &lt;div&gt; &lt;div style="color: #24292e; background-color: #ffffff; font-size: 16px;"&gt; &lt;table style="border-width: 0.5; border-color: #e0e0e0;"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Method&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;URI&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/sync&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;Stock Maintenance&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/actuator/health&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;Supplier Maintenance&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div&gt; &lt;h4 style="color: #24292e; background-color: #ffffff; font-size: 16px;"&gt;&lt;code&gt;supplier-api&lt;/code&gt; endpoints&lt;/h4&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div&gt; &lt;div style="color: #24292e; background-color: #ffffff; font-size: 16px;"&gt; &lt;table style="border-width: 0.5; border-color: #e0e0e0;"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Method&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;URI&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Secured?&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/sync&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;Supplier Maintenance&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/actuator/health&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;Supplier Maintenance&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div&gt; &lt;h4&gt;&lt;code&gt;product-api&lt;/code&gt; endpoints&lt;/h4&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div&gt; &lt;div style="color: #24292e; background-color: #ffffff; font-size: 16px;"&gt; &lt;table style="border-width: 0.5; border-color: #e0e0e0;"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Method&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;URI&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Secured?&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;/api/v1/product&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;Retrieve all products.&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;/api/v1/product/{id}&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;Retrieve product by ID.&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;POST&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;/api/v1/product&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;Create a new product.&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;PUT&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;/api/v1/product/{id}&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;Update product by ID.&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;DELETE&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;/api/v1/product/{id}&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;Delete product by ID.&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 12px;"&gt;true&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2&gt;Security lab&lt;/h2&gt; &lt;p&gt;Each endpoint has its own specificity, so to drive our test scenarios, I&amp;#8217;ve ended up with three simple questions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Will this API be protected by an Integration Layer (FUSE)?&lt;/li&gt; &lt;li&gt;Will this API be exposed as a unique service on 3scale AMP? (This factor enables API self-service subscriptions for external clients.)&lt;/li&gt; &lt;li&gt;Will this API be managed by RHSSO (Keycloak) and have its client-id, groups, and roles?&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, I came up with the following requirements matrix:&lt;/p&gt; &lt;p style="background-color: #ffffff; margin-bottom: 16px;"&gt;&lt;img class="aligncenter" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/05.png" width="799" height="577" /&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;As we can see, each API has differences, and we will strive to demonstrate each one in this microservices security lab.&lt;/p&gt; &lt;h3&gt;Step 1: Project creation&lt;/h3&gt; &lt;p&gt;Create this project as follows:&lt;/p&gt; &lt;table class="j-table jiveBorder" style="border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5; background-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr style="height: 25px;"&gt; &lt;td style="height: 25px;"&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: terminal, monaco, monospace; font-size: 12px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; PROJECT_NAMESPACE=microservices&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: terminal, monaco, monospace; font-size: 12px; color: #999999;"&gt;# login into openshift platform&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: terminal, monaco, monospace; font-size: 12px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc login&lt;/strong&gt;&lt;/span&gt; https://master.&amp;#60;&amp;#62;.com:443 &amp;#8211;token=&amp;#60;&amp;#62;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: terminal, monaco, monospace; font-size: 12px; color: #999999;"&gt;# create a new project&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: terminal, monaco, monospace; font-size: 12px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc new-project&lt;/strong&gt;&lt;/span&gt; microservices-security &amp;#8211;description=&amp;#8221;microservices security&amp;#8221; &amp;#8211;display-name=&amp;#8221;microservices-security&amp;#8221;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3&gt;Step 2: Nexus prototype deploy&lt;/h3&gt; &lt;p&gt;Provide a Sonatype Nexus instance in the &lt;code&gt;microservices&lt;/code&gt; namespace. Detailed instructions can be found in this &lt;a href="https://github.com/aelkz/microservices-security/blob/master/README-NEXUS.md" target="_blank" rel="noopener noreferrer"&gt;readme&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Step 3: 3scale AMP deploy&lt;/h3&gt; &lt;p&gt;You must also provision a 3scale AMP into your Red Hat Openshift Container Platform. Refer to the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_3scale_api_management/2.6" target="_blank" rel="nofollow noopener noreferrer"&gt;documentation&lt;/a&gt; on how to install the 3scale application.&lt;/p&gt; &lt;h3&gt;Step 4: Red Hat Single Sign-On deploy&lt;/h3&gt; &lt;p&gt;Additionally, install Red Hat Single Sign-On for this example. Refer to the &lt;a href="https://access.redhat.com/products/red-hat-single-sign-on" target="_blank" rel="nofollow noopener noreferrer"&gt;documentation&lt;/a&gt; on how to install the RHSSO application.&lt;/p&gt; &lt;h3&gt;Step 5: Nexus environment setup&lt;/h3&gt; &lt;p&gt;Set up your Nexus environment as follows:&lt;/p&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; PROJECT_NAMESPACE=microservices-security&lt;br /&gt; &lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;git clone&lt;/strong&gt;&lt;/span&gt; &lt;a class="jive-link-external-small" href="https://github.com/aelkz/microservices-security.git" target="_blank" rel="nofollow noopener noreferrer"&gt;https://github.com/aelkz/microservices-security.git&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;cd microservices-security/&lt;br /&gt; &lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt;# download maven settings.xml file&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/span&gt; -o maven-settings-template.xml -s &lt;a class="jive-link-external-small" href="https://raw.githubusercontent.com/aelkz/microservices-security/master/_configuration/nexus/maven-settings-template.xml" target="_blank" rel="nofollow noopener noreferrer"&gt;https://raw.githubusercontent.com/aelkz/microservices-security/master/_configuration/nexus/maven-settings-template.xml&lt;/a&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt;# change mirror url using your nexus openshift route&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; NEXUS_NAMESPACE=cicd-devtools&lt;br /&gt; &lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; MAVEN_URL=http://$(oc get route nexus3 -n ${NEXUS_NAMESPACE} &amp;#8211;template='{{ .spec.host }}&amp;#8217;)/repository/maven-group/&lt;br /&gt; &lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; MAVEN_URL_RELEASES=http://$(oc get route nexus3 -n ${NEXUS_NAMESPACE} &amp;#8211;template='{{ .spec.host }}&amp;#8217;)/repository/maven-releases/&lt;br /&gt; &lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; MAVEN_URL_SNAPSHOTS=http://$(oc get route nexus3 -n ${NEXUS_NAMESPACE} &amp;#8211;template='{{ .spec.host }}&amp;#8217;)/repository/maven-snapshots/&lt;br /&gt; &lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;awk -v path=&amp;#8221;$MAVEN_URL&amp;#8221; &amp;#8216;/&amp;#60;url&amp;#62;/{sub(/&amp;#62;.*&amp;#60;/,&amp;#8221;&amp;#62;&amp;#8221;path&amp;#8221;&amp;#60;&amp;#8220;)}1&amp;#8217; maven-settings-template.xml &amp;#62; maven-settings.xml&lt;br /&gt; &lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;rm -fr maven-settings-template.xml&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3&gt;Step 6: Create Red Hat Container Catalog secret&lt;/h3&gt; &lt;p&gt;In order to import Red Hat container images, you must create a secret and set up your credentials on OpenShift:&lt;/p&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt; NOTE. In order to import Red Hat container images, you must setup your credentials on openshift. See: &lt;a class="jive-link-external-small" href="https://access.redhat.com/articles/3399531" target="_blank" rel="nofollow noopener noreferrer"&gt;https://access.redhat.com/articles/3399531&lt;/a&gt;&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt;# The config.json can be found at: /var/lib/origin/.docker/ on openshift master node.&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt;# create a secret with your container credentials&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; $PROJECT_NAMESPACE=microservices-security&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc delete secret&lt;/strong&gt;&lt;/span&gt; redhat.io -n $PROJECT_NAMESPACE&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create secret&lt;/strong&gt;&lt;/span&gt; generic &amp;#8220;redhat.io&amp;#8221; &amp;#8211;from-file=.dockerconfigjson=config.json &amp;#8212;&lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;type=kubernetes.io/dockerconfigjson -n $PROJECT_NAMESPACE&lt;br /&gt; &lt;/span&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create secret&lt;/strong&gt;&lt;/span&gt; generic redhat.io &amp;#8211;from-file=.dockerconfigjson=config.json &amp;#8211;type=kubernetes.io/dockerconfigjson -n $PROJECT_NAMESPACE&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc secrets link&lt;/strong&gt;&lt;/span&gt; default redhat.io &amp;#8211;for=pull -n $PROJECT_NAMESPACE&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc secrets link&lt;/strong&gt;&lt;/span&gt; builder redhat.io -n $PROJECT_NAMESPACE&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3&gt;Step 7: RHSSO realms configuration&lt;/h3&gt; &lt;p&gt;In this step, we will configure &lt;code&gt;realms&lt;/code&gt; on RHSSO to register all five applications.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Logging into RHSSO.&lt;/li&gt; &lt;li&gt;Create three realms with default settings: &lt;ul&gt; &lt;li&gt;&lt;code&gt;3scale-api&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;3scale-admin&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;3scale-devportal&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 40px;"&gt;&lt;code&gt;&lt;/code&gt;After creating the realms, you&amp;#8217;ll have something like this:&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/07.png" width="250" height="248" /&gt;&lt;/p&gt; &lt;ol start="4"&gt; &lt;li&gt;On the &lt;strong&gt;3scale-api&lt;/strong&gt; realm, create a client &lt;code&gt;3scale&lt;/code&gt; with the following definition:&lt;/li&gt; &lt;/ol&gt; &lt;p style="color: #24292e; background-color: #ffffff; font-size: 16px; margin-bottom: 16px; text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/08.png" width="328" height="501" /&gt;&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;Leave these fields blank:&lt;/p&gt; &lt;ul&gt; &lt;li style="list-style-type: none;"&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;root URL&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;base URL&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;admin URL&lt;/strong&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ol start="5"&gt; &lt;li&gt;On the &lt;strong&gt;Service Account Roles&lt;/strong&gt; tab, assign the role &lt;code&gt;manage-clients&lt;/code&gt; from &lt;code&gt;realm-management&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Copy and save the &lt;code&gt;client-secret&lt;/code&gt; that was generated for this client. This secret will be used later to configure OAuth service authentication on 3scale, and will look something like this: &lt;code&gt;823b6ek5-1936-42e6-1135-d48rt3a1f632&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Under the realm &lt;code&gt;3scale-api&lt;/code&gt;, create a new user with the following definition:&lt;/li&gt; &lt;/ol&gt; &lt;p style="text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/09.png" width="576" height="462" /&gt;&lt;/p&gt; &lt;ol start="8"&gt; &lt;li&gt;Set a new password for this user on the &lt;code&gt;Credentials&lt;/code&gt; tab with &lt;code&gt;temporary=false&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Set the &lt;code&gt;Email Verified&lt;/code&gt; attribute to&lt;code&gt;true&lt;/code&gt; on the &lt;code&gt;Details&lt;/code&gt; tab.&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;Step 8: 3scale microservices configuration&lt;/h3&gt; &lt;p&gt;In this step, we register the APIs and configure them to enable 3scale automatic synchronization with RHSSO. Let&amp;#8217;s set up the &lt;code&gt;auth-integration-api&lt;/code&gt; and the &lt;code&gt;supplier-api&lt;/code&gt;:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create a new API on the 3scale admin portal. You can hit the &lt;strong&gt;NEW API&lt;/strong&gt; button on the main dashboard:&lt;/li&gt; &lt;/ol&gt; &lt;p style="color: #24292e; background-color: #ffffff; font-size: 16px; text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/12.png" width="95" height="30" /&gt;&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;This new API will represent the &lt;code&gt;auth-integration-api&lt;/code&gt;, which we previously deployed:&lt;/p&gt; &lt;p style="margin-bottom: 16px; text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/11.png" width="344" height="371" /&gt;&lt;/p&gt; &lt;ol start="2"&gt; &lt;li&gt;Navigate through the &lt;strong&gt;Configuration&lt;/strong&gt; menu under &lt;strong&gt;Integration&lt;/strong&gt; to set up the API mappings and security:&lt;/li&gt; &lt;/ol&gt; &lt;p style="color: #24292e; background-color: #ffffff; font-size: 16px;"&gt;&lt;img class="aligncenter" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/13.png" width="816" height="290" /&gt;&lt;/p&gt; &lt;ol start="3"&gt; &lt;li&gt;Choose &lt;strong&gt;APIcast&lt;/strong&gt; for the gateway:&lt;/li&gt; &lt;/ol&gt; &lt;p style="color: #24292e; background-color: #ffffff; font-size: 16px; margin-bottom: 16px;" align="center"&gt;&lt;a style="color: #0366d6; background-color: initial; text-decoration: none;" href="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/14.png" target="_blank" rel="noopener noreferrer"&gt;&lt;img class="" style="background-color: #ffffff;" title="APICast Gateway" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/14.png" width="297" height="143" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;ol start="4"&gt; &lt;li&gt;Choose &lt;strong&gt;OpenID Connect&lt;/strong&gt; in &lt;strong&gt;Integration settings&lt;/strong&gt;:&lt;/li&gt; &lt;/ol&gt; &lt;p style="color: #24292e; background-color: #ffffff; font-size: 16px; margin-bottom: 16px;" align="center"&gt;&lt;a style="color: #0366d6; background-color: initial; text-decoration: none;" href="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/15.png" target="_blank" rel="noopener noreferrer"&gt;&lt;img class="" style="background-color: #ffffff;" title="OpenID Connect" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/15.png" width="283" height="142" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p style="padding-left: 80px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; OpenID Connect is chosen because we will to protect our APIs with the OAuth2 capabilities provided by RHSSO.&lt;/p&gt; &lt;ol start="5"&gt; &lt;li&gt;Click:&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 40px;"&gt;&lt;a href="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/16.png" target="_blank" rel="noopener noreferrer"&gt;&lt;img class="" title="button: add the base URL of your API and save the configuration" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/16.png" width="336" height="32" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;ol start="6"&gt; &lt;li&gt;Define the &lt;strong&gt;Private Base URL&lt;/strong&gt; (your &lt;code&gt;auth-integration-api&lt;/code&gt; URL), the &lt;strong&gt;Staging Public Base URL&lt;/strong&gt;, and the &lt;strong&gt;Production Public Base URL&lt;/strong&gt;:&lt;/li&gt; &lt;/ol&gt; &lt;p style="color: #000000; background-color: #ffffff; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;img class="alignleft" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/17.png" width="745" height="421" /&gt;&lt;/p&gt; &lt;p style="padding-left: 80px;"&gt;&lt;b&gt;Note:&lt;/b&gt; Set the correct domain under each URL, which will become your API route on OpenShift.&lt;/p&gt; &lt;ol start="7"&gt; &lt;li&gt;Define all of the mapping rules for this API, according to the following table:&lt;/li&gt; &lt;/ol&gt; &lt;div&gt; &lt;div style="color: #24292e; background-color: #ffffff; font-size: 16px;"&gt; &lt;table style="border-width: 0.5; border-color: #e0e0e0;"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Verb&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Pattern&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;+&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-size: 13px;"&gt;&lt;strong&gt;Metric or Method&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;POST&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;DELETE&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product/*&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;PUT&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product/*&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product$&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product/*&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/status&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/product/status&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/supplier/status&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/stock/status&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/stock/maintenance&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-size: 13px;"&gt;/api/v1/supplier/maintenance&lt;/span&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;hits&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;ol start="8"&gt; &lt;li&gt;Define the authentication mechanism for this API:&lt;/li&gt; &lt;/ol&gt; &lt;p style="color: #000000; background-color: #ffffff; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;img class="j-img-centered" style="margin-left: auto; margin-right: auto;" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/19.png" width="777" height="289" /&gt;&lt;/p&gt; &lt;ol start="9"&gt; &lt;li&gt;Configure the API policies required to enable proper communication between resources inside the OpenShift Container Platform:&lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;div style="color: #24292e; background-color: #ffffff; font-size: 16px; text-align: left;"&gt;&lt;img class="j-img-centered" style="margin-left: auto; margin-right: auto;" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/30.png" width="626" height="205" /&gt;&lt;strong&gt;&lt;br /&gt; &lt;/strong&gt;Please follow the next steps carefully:&lt;/div&gt; &lt;ol&gt; &lt;li&gt;Select &lt;strong&gt;Authorization Code Flow&lt;/strong&gt;, &lt;strong&gt;Service Accounts Flow&lt;/strong&gt;, and &lt;strong&gt;Direct Access Grant Flow&lt;/strong&gt; under the &lt;strong&gt;OIDC AUTHORIZATION FLOW&lt;/strong&gt; section.&lt;/li&gt; &lt;li&gt;In &lt;strong&gt;Credentials location&lt;/strong&gt; set &lt;strong&gt;As HTTP Headers&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;In the &lt;strong&gt;Policies&lt;/strong&gt; section, add (in this order) &lt;code&gt;CORS&lt;/code&gt; and &lt;code&gt;3scale APIcast&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Expand CORS configuration, and set the following: &lt;ul&gt; &lt;li&gt;&lt;code&gt;ALLOW_HEADERS&lt;/code&gt; adds a 1&amp;#215;1 per input array:&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 80px;"&gt;&lt;strong&gt;Enabled&lt;/strong&gt;=checked &lt;strong&gt;ALLOW_HEADERS&lt;/strong&gt;&lt;/pre&gt; &lt;div style="padding-left: 80px;"&gt; &lt;table style="border-width: 0.5; border-color: #e0e0e0;"&gt; &lt;thead&gt; &lt;tr style="height: 27px;"&gt; &lt;th style="background-color: #306fc7; height: 27px;"&gt;&lt;span style="color: #ffffff; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;3scale CORS Policy: HEADERS&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Content-Type&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Authorization&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Content-Length&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;X-Requested-With&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Origin&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Accept&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;X-Requested-With&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Content-Type&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Access-Control-Request-Method&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Access-Control-Request-Headers&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Accept-Encoding&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Accept-Language&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Connection&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Host&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Referer&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;User-Agent&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;X-Business-FooBar&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The last header is used only for testing purposes.&lt;/p&gt; &lt;/div&gt; &lt;ol&gt; &lt;li style="list-style-type: none;"&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;ALLOW_METHODS&lt;/code&gt; adds a 1&amp;#215;1 per input array:&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 80px;"&gt;&lt;strong&gt;allow_credentials&lt;/strong&gt;=checked &lt;strong&gt;ALLOW_METHODS &lt;/strong&gt;&lt;/pre&gt; &lt;div style="padding-left: 80px;"&gt; &lt;table style="border-width: 0.5; border-color: #e0e0e0;"&gt; &lt;thead&gt; &lt;tr style="height: 27px;"&gt; &lt;th style="height: 27px; background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;strong&gt;3scale CORS Policy: HTTP Methods&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;HEAD&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;POST&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;PUT&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;DELETE&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr style="height: 27px;"&gt; &lt;td style="height: 27px;"&gt;&lt;span style="font-size: 13px; font-family: verdana, geneva, sans-serif;"&gt;OPTIONS&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;ol start="5"&gt; &lt;li&gt;Leave &lt;code&gt;allow_origin&lt;/code&gt; empty, and the rest as default.&lt;/li&gt; &lt;li&gt;Save the CORS configuration.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;b&gt;Note: &lt;/b&gt;After every change, remember to promote the staging configuration to production, by clicking:&lt;br /&gt; &lt;img class="" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/20.png" width="173" height="33" /&gt;&lt;/p&gt; &lt;p&gt;Your &lt;code&gt;auth-integration-api&lt;/code&gt; is ready to be used.&lt;/p&gt; &lt;p&gt;Repeat the same sequence of steps in this section for the Supplier API. This API has only two mapping rules:&lt;/p&gt; &lt;div&gt; &lt;table style="border-width: 0.5; border-color: #e0e0e0;"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;Verb&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;Pattern&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;+&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;th style="background-color: #306fc7;"&gt;&lt;span style="color: #ffffff; font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;&lt;strong&gt;Metric or Method&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;POST&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;/api/v1/sync&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;1&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;hits&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;GET&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;/actuator/health&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;1&lt;/span&gt;&lt;/td&gt; &lt;td&gt;&lt;span style="font-family: verdana, geneva, sans-serif; font-size: 13px;"&gt;hits&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3&gt;Step 9: 3scale microservices application plans&lt;/h3&gt; &lt;p&gt;Let&amp;#8217;s define the API&amp;#8217;s application plans. These plans will be used upon client registration for creating a new application:&lt;/p&gt; &lt;p&gt;&lt;img class="j-img-centered" style="margin-left: auto; margin-right: auto;" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/21.png" width="520" height="287" /&gt;&lt;/p&gt; &lt;p style="color: #24292e;"&gt;Click &lt;a style="color: #0366d6; background-color: initial; text-decoration: none;" href="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/23.png" target="_blank" rel="noopener noreferrer"&gt;&lt;img style="background-color: #ffffff;" title="3Scale admin portal - New Application Plan" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/23.png" width="20%" height="20%" /&gt;&lt;/a&gt; under the &lt;strong&gt;Applications/Application Plans&lt;/strong&gt; menu, then set the following configuration:&lt;/p&gt; &lt;p&gt;&lt;img class="aligncenter" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/22.png" width="338" height="457" /&gt;&lt;/p&gt; &lt;p&gt;After doing this, click the &lt;strong&gt;Publish&lt;/strong&gt; link to publish the application plan.&lt;/p&gt; &lt;p style="color: #24292e;"&gt;Follow the same steps for the &lt;code&gt;Supplier API&lt;/code&gt;. Remember to publish this application plan as well.&lt;/p&gt; &lt;p style="color: #24292e;"&gt;After you have done all of the previous steps, you&amp;#8217;ll get something like this:&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/24.png" width="633" height="438" /&gt;&lt;/p&gt; &lt;h3 style="color: #24292e;"&gt;Step 10: 3scale microservices application&lt;/h3&gt; &lt;p style="color: #24292e;"&gt;Navigate through the &lt;strong&gt;Audience&lt;/strong&gt; menu and under &lt;strong&gt;Accounts/Listing&lt;/strong&gt;, click &lt;a style="color: #0366d6; background-color: initial; text-decoration: none;" href="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/25.png" target="_blank" rel="noopener noreferrer"&gt;&lt;img class="" style="background-color: #ffffff;" title="3Scale admin portal - New Account" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/25.png" width="75" height="17" /&gt;&lt;/a&gt; to create a new account. Then, create a new account with your credentials for this demo:&lt;/p&gt; &lt;p style="background-color: #ffffff; font-weight: 400; margin-bottom: 16px; text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/26.png" width="243" height="424" /&gt;&lt;/p&gt; &lt;p style="color: #24292e;"&gt;This action creates a new 3scale application. If the application couldn&amp;#8217;t be created, just hit the &lt;a href="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/27.png" target="_blank" rel="noopener noreferrer"&gt;&lt;img class="" title="3Scale admin portal - New Application" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/27.png" width="142" height="16" /&gt;&lt;/a&gt; link.&lt;/p&gt; &lt;p style="color: #24292e;"&gt;This new application is created for use with the &lt;code&gt;auth-integration-api&lt;/code&gt;. A client-id and a Client-Secret will be generated automatically and pushed into RHSSO in the &lt;code&gt;3Scale-api&lt;/code&gt; realm by the &lt;code&gt;zynnc-que&lt;/code&gt; 3scale application:&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/29.png" width="673" height="354" /&gt;&lt;/p&gt; &lt;p style="color: #24292e;"&gt;After creating the API definition on 3scale, check if the generated client was pushed into the &lt;code&gt;3scale-api&lt;/code&gt; realm on RHSSO. If you&amp;#8217;re using a self-signed certificate, you&amp;#8217;ll need to make additional configurations in order to enable &lt;code&gt;zynnc-que&lt;/code&gt; 3scale application synchronization. Please refer to the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_3scale_api_management/2.6/html-single/operating_3scale/index#troubleshooting_ssl_issues" target="_blank" rel="nofollow noopener noreferrer"&gt;Documentation: Troubleshooting SSL issues&lt;/a&gt; and &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_3scale_api_management/2.4/html-single/api_authentication/index#zync-oidc-integration" target="_blank" rel="nofollow noopener noreferrer"&gt;Configure Zync to use custom CA certificates&lt;/a&gt;.&lt;/p&gt; &lt;p style="color: #24292e;"&gt;To fix this problem, proceed with the self-signed certificate installation:&lt;/p&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; THREESCALE_NAMESPACE=3scale26&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; THREESCALE_ZYNC_QUE_POD=$(oc get pods &amp;#8211;selector deploymentconfig=zync-que -n 3scale26 | { read line1 ; read line2 ; echo &amp;#8220;$line2&amp;#8221; ; } | awk &amp;#8216;{print $1;}&amp;#8217;)&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; RHSSO_URI=sso73.apps.&amp;#60;YOUR-DOMAIN&amp;#62;.com&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;echo | openssl s_client -showcerts -servername ${RHSSO_URI} -connect ${RHSSO_URI}:443 2&amp;#62;/dev/null | sed -ne &amp;#8216;/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p&amp;#8217; &amp;#62; self-signed-cert.pem&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;&lt;br /&gt; # Validate the connection first! must return HTTP/1.1 200 OK&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/span&gt; -v https://${RHSSO_URI}/auth/realms/master &amp;#8211;cacert self-signed-cert.pem&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc exec&lt;/strong&gt;&lt;/span&gt; ${THREESCALE_ZYNC_QUE_POD} cat /etc/pki/tls/cert.pem &amp;#62; zync-que.pem -n ${THREESCALE_NAMESPACE}&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;cp zync-que.pem zync-que-original.pem&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;echo &amp;#8216;\n# Red Hat Single Sign-On CA &amp;#8216;${RHSSO_URI} &amp;#62;&amp;#62; zync-que.pem&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;cat self-signed-cert.pem &amp;#62;&amp;#62; zync-que.pem&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# oc delete configmap zync-que-ca-bundle&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create configmap&lt;/strong&gt;&lt;/span&gt; zync-que-ca-bundle &amp;#8211;from-file=./zync-que.pem -n ${THREESCALE_NAMESPACE}&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc label configmap&lt;/strong&gt;&lt;/span&gt; zync-que-ca-bundle app=3scale-api-management -n ${THREESCALE_NAMESPACE}&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set volume&lt;/strong&gt;&lt;/span&gt; dc/zync-que &amp;#8211;overwrite &amp;#8211;add &amp;#8211;name=zync-que-ca-bundle &amp;#8211;mount-path /etc/pki/tls/zync-que/zync-que.pem &amp;#8211;sub-path zync-que.pem &amp;#8211;source='{&amp;#8220;configMap&amp;#8221;:{&amp;#8220;name&amp;#8221;:&amp;#8221;zync-que-ca-bundle&amp;#8221;,&amp;#8221;items&amp;#8221;:[{&amp;#8220;key&amp;#8221;:&amp;#8221;zync-que.pem&amp;#8221;,&amp;#8221;path&amp;#8221;:&amp;#8221;zync-que.pem&amp;#8221;}]}}&amp;#8217; -n ${THREESCALE_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc patch&lt;/strong&gt;&lt;/span&gt; dc/zync-que &amp;#8211;type=json -p &amp;#8216;[{&amp;#8220;op&amp;#8221;: &amp;#8220;add&amp;#8221;, &amp;#8220;path&amp;#8221;: &amp;#8220;/spec/template/spec/containers/0/volumeMounts/0/subPath&amp;#8221;, &amp;#8220;value&amp;#8221;:&amp;#8221;zync-que.pem&amp;#8221;}]&amp;#8217; -n ${THREESCALE_NAMESPACE}&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc exec&lt;/strong&gt;&lt;/span&gt; ${THREESCALE_ZYNC_QUE_POD} cat /etc/pki/tls/zync-que/zync-que.pem -n ${THREESCALE_NAMESPACE}&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; dc/zync-que SSL_CERT_FILE=/etc/pki/tls/zync-que/zync-que.pem -n ${THREESCALE_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# wait for the container restart and check the logs for any issue.&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc logs&lt;/strong&gt;&lt;/span&gt; -f po/${THREESCALE_ZYNC_QUE_POD}&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# &lt;strong&gt;Voila!&lt;/strong&gt; You have the 3Scale in sync with RHSSO using a self-signed certificate.&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3 style="color: #24292e;"&gt;Step 11: Node.js web application deployment&lt;/h3&gt; &lt;p style="color: #24292e;"&gt;In this step, we will test all scenarios with a suited NodeJS webapp based on Angular and Bootstrap. This application was designed to ease the understanding process and can be used to give clarification regarding the authorization behavior using our &lt;code&gt;Jon Doe&lt;/code&gt; user account:&lt;/p&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt;# Deploy nodejs-web application&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;# &lt;a class="jive-link-external-small" href="https://access.redhat.com/containers/?tab=images#/registry.access.redhat.com/rhscl/nodejs-10-rhel7" target="_blank" rel="nofollow noopener noreferrer"&gt;https://access.redhat.com/containers/?tab=images#/registry.access.redhat.com/rhscl/nodejs-10-rhel7&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc import-image&lt;/strong&gt;&lt;/span&gt; rhscl/nodejs-10-rhel7 &amp;#8211;from=registry.redhat.io/rhscl/nodejs-10-rhel7 -n openshift &amp;#8211;confirm&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; APIS_NAMESPACE=microservices-security&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; THREESCALE_NAMESPACE=3scale26&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; RHSSO_NAMESPACE=sso73&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; RHSSO_URL=https://$(oc get route -n ${RHSSO_NAMESPACE} | grep secured | awk &amp;#8216;{print $2;}&amp;#8217;)/auth&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; THREESCALE_APP_DOMAIN=&amp;#60;YOUR-DOMAIN&amp;#62;.com&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; THREESCALE_API_URL=https://$(oc get routes -n ${THREESCALE_NAMESPACE} | grep auth-integration | grep production | awk &amp;#8216;{print $2;}&amp;#8217;)&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; INTEGRATION_HEALTH_URL=http://$(oc get routes -n ${APIS_NAMESPACE} | grep auth-integration | grep metrics | awk &amp;#8216;{print $2;}&amp;#8217;)&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;echo -e \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8221; &lt;span style="color: #0000ff;"&gt;AUTH_CLIENT_ID&lt;/span&gt;=&amp;#60;AUTH_INTEGRATION_CLIENT_ID&amp;#62;\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8220;&lt;span style="color: #0000ff;"&gt;AUTH_URL&lt;/span&gt;=${RHSSO_URL}\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8220;&lt;span style="color: #0000ff;"&gt;AUTH_REALM&lt;/span&gt;=3scale-api\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8220;&lt;span style="color: #0000ff;"&gt;KEYCLOAK&lt;/span&gt;=true\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8220;&lt;span style="color: #0000ff;"&gt;INTEGRATION_URI&lt;/span&gt;=${THREESCALE_API_URL}\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8220;&lt;span style="color: #0000ff;"&gt;PRODUCT_PATH&lt;/span&gt;=/product\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8220;&lt;span style="color: #0000ff;"&gt;STOCK_PATH&lt;/span&gt;=/stock\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8220;&lt;span style="color: #0000ff;"&gt;SUPPLIER_PATH&lt;/span&gt;=/supplier\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8220;&lt;span style="color: #0000ff;"&gt;AUTH_CLIENT_SECRET&lt;/span&gt;=1d1beebcF1cJd002d51be7a346ab987p\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#8220;&lt;span style="color: #0000ff;"&gt;NODE_TLS_REJECT_UNAUTHORIZED&lt;/span&gt;=0\n&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&amp;#62; temp&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;sed&lt;/strong&gt;&lt;/span&gt; &amp;#8220;s/^.//g&amp;#8221; temp &amp;#62;&amp;#62; nodejs-config.properties&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;rm -fr temp&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt;# oc delete configmap nodejs-web-config&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create configmap&lt;/strong&gt;&lt;/span&gt; nodejs-web-config \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=AUTH_CLIENT_ID= \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=AUTH_URL= \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=AUTH_REALM= \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=KEYCLOAK= \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=INTEGRATION_URI= \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=PRODUCT_PATH= \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=SUPPLIER_PATH= \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=STOCK_PATH= \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=AUTH_CLIENT_SECRET= \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt; &amp;#8211;from-literal=NODE_TLS_REJECT_UNAUTHORIZED=&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt;# oc delete all -lapp=nodejs-web&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc new-app&lt;/strong&gt;&lt;/span&gt; nodejs-10-rhel7:latest~&lt;a class="jive-link-external-small" href="https://github.com/aelkz/microservices-security.git" rel="nofollow"&gt;https://github.com/aelkz/microservices-security.git&lt;/a&gt; &amp;#8211;name=nodejs-web &amp;#8211;context-dir=/webapp -n ${APIS_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt;# with the properties defined, set the environment variable on nodejs-web container.&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; &amp;#8211;from=configmap/nodejs-web-config dc/nodejs-web -n ${APIS_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p style="color: #24292e; padding-left: 40px;"&gt;&lt;b&gt;Note:&lt;/b&gt; Set all environment variables on the &lt;code&gt;nodejs-web&lt;/code&gt; container in order to enable API calls properly.&lt;/p&gt; &lt;p style="color: #24292e;"&gt;Expose the web app route:&lt;/p&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create route edge&lt;/strong&gt;&lt;/span&gt; &amp;#8211;service=nodejs-web &amp;#8211;cert=webapp/server.cert &amp;#8211;key=webapp/server.key -n ${APIS_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3 style="color: #24292e;"&gt;Step 12: Application settings and roles&lt;/h3&gt; &lt;p style="color: #24292e;"&gt;Now we create our application &lt;code&gt;roles&lt;/code&gt;. These roles are assigned to the application users that will be used to log into our web app.&lt;/p&gt; &lt;p style="color: #24292e;"&gt;Access the client-id that represents the &lt;code&gt;auth-integration&lt;/code&gt; client registered previously by the 3scale &lt;code&gt;application&lt;/code&gt; process, then go to the client&amp;#8217;s &lt;strong&gt;Settings&lt;/strong&gt; tab and apply additional configurations. Valid redirect URIs include:&lt;/p&gt; &lt;pre&gt;http://* https://*&lt;/pre&gt; &lt;p style="color: #24292e;"&gt;and valid web origins are simply:&lt;/p&gt; &lt;pre style="color: #24292e;"&gt;*&lt;/pre&gt; &lt;p style="color: #24292e;"&gt;Go to the &lt;strong&gt;Roles&lt;/strong&gt; tab on the &lt;strong&gt;Clients&lt;/strong&gt; menu on RHSSO (Keycloak) and create the following roles:&lt;/p&gt; &lt;p style="background-color: #ffffff; margin-bottom: 16px; text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/32.png" width="694" height="435" /&gt;&lt;/p&gt; &lt;p style="color: #24292e;"&gt;Repeat the same steps for the &lt;code&gt;Supplier API&lt;/code&gt; client. This client will have only one role defined:&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/33.png" width="623" height="194" /&gt;&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note:&lt;/b&gt; This client was also generated through 3scale. (You must create two applications: one for &lt;code&gt;auth-integration-api&lt;/code&gt; and another for &lt;code&gt;supplier-api&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;Step 13: User roles&lt;/h3&gt; &lt;p&gt;In this step, we assign all &lt;code&gt;client&lt;/code&gt; roles to the &lt;code&gt;john doe&lt;/code&gt; user and the &lt;code&gt;service-account&lt;/code&gt; user will handle the &lt;code&gt;supplier-service&lt;/code&gt; calls inside the &lt;code&gt;auth-integration-api&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Go to the &lt;strong&gt;Role Mappings&lt;/strong&gt; tab on the &lt;strong&gt;John Doe&lt;/strong&gt; user details page in the &lt;strong&gt;Users&lt;/strong&gt; menu. Assign all roles to the user, following the image below:&lt;/p&gt; &lt;p&gt;&lt;img class="aligncenter" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/34.png" width="784" height="340" /&gt;&lt;/p&gt; &lt;p&gt;In Step 7 we created the &lt;code&gt;John Doe&lt;/code&gt; user. We need to create another user that will be used as a &lt;code&gt;service-account&lt;/code&gt; to call the &lt;code&gt;Supplier API&lt;/code&gt; inside the &lt;code&gt;auth-integration-api&lt;/code&gt; (see line 123 of &lt;a href="https://raw.githubusercontent.com/aelkz/microservices-security/master/product/src/main/resources/application.yaml" target="_blank" rel="nofollow noopener noreferrer"&gt;application.yaml&lt;/a&gt;). This user will also have a password, so reset its credentials with &lt;code&gt;12345&lt;/code&gt;. The name of this user can be the &lt;code&gt;id&lt;/code&gt; of the &lt;code&gt;Supplier API&lt;/code&gt; client-id generated by 3scale appended with the &lt;code&gt;_svcacc&lt;/code&gt; suffix (see line 131 of &lt;a href="https://raw.githubusercontent.com/aelkz/microservices-security/master/product/src/main/resources/application.yaml" target="_blank" rel="nofollow noopener noreferrer"&gt;application.yaml&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;We also need to assign the &lt;code&gt;SUPPLIER_MAINTAINER&lt;/code&gt; role to this user.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This procedure is used as an alternative to the &lt;code&gt;token-exchange&lt;/code&gt; mechanism, but we could do a more detailed study of other possibilities of consuming third-party APIs by using the &lt;code&gt;token-exchange&lt;/code&gt; feature.&lt;/p&gt; &lt;p&gt;At last, create a &lt;code&gt;realm-admin&lt;/code&gt; user. This user will serve to consume the RHSSO REST API. Assign the credentials &lt;code&gt;12345&lt;/code&gt; and all &lt;code&gt;realm-management&lt;/code&gt; roles:&lt;/p&gt; &lt;p&gt;&lt;img class="j-img-centered" style="margin-left: auto; margin-right: auto;" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/35.png" width="678" height="340" /&gt;&lt;/p&gt; &lt;p&gt;In the end, we will have three users in the &lt;code&gt;3scale-api&lt;/code&gt; realm:&lt;/p&gt; &lt;p&gt;&lt;img class="aligncenter" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/36.png" width="816" height="197" /&gt;&lt;/p&gt; &lt;h3&gt;Step 14: Archive the SSO-common library jar on Nexus&lt;/h3&gt; &lt;p&gt;To make sure the &lt;code&gt;auth-integration-api&lt;/code&gt; (Fuse) works correctly, we need to archive a library, and then use that library to enable authentication and authorizations on top of Red Hat Single Sign-On:&lt;/p&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# NOTE: To make sure the auth-integration-api (Fuse) works correctly, we need to archive a library that will be used to provide authentication and authorizations capabilities on top of Red Hat Single Sign-On (Keycloak).Then, this library will be used on auth-integration-api to enable such capabilities.&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# Deploy auth-sso-common library on nexus&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; NEXUS_NAMESPACE=cicd-devtools&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; MAVEN_URL=http://$(oc get route nexus3 -n ${NEXUS_NAMESPACE} &amp;#8211;template='{{ .spec.host }}&amp;#8217;)/repository/maven-group/&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; MAVEN_URL_RELEASES=http://$(oc get route nexus3 -n ${NEXUS_NAMESPACE} &amp;#8211;template='{{ .spec.host }}&amp;#8217;)/repository/maven-releases/&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; MAVEN_URL_SNAPSHOTS=http://$(oc get route nexus3 -n ${NEXUS_NAMESPACE} &amp;#8211;template='{{ .spec.host }}&amp;#8217;)/repository/maven-snapshots/&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;mvn clean package deploy&lt;/strong&gt;&lt;/span&gt; -DnexusReleaseRepoUrl=$MAVEN_URL_RELEASES -DnexusSnapshotRepoUrl=$MAVEN_URL_SNAPSHOTS -s ./maven-settings.xml -e -X -pl auth-sso-common&lt;/span&gt;&lt;strong style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; text-align: justify;"&gt; &lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;This action creates the following artifact on Nexus:&lt;br /&gt; &lt;img class="j-img-centered" style="margin-left: auto; margin-right: auto;" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/06.png" width="334" height="320" /&gt;&lt;/p&gt; &lt;h3&gt;Step 15: Microservices deployment&lt;/h3&gt; &lt;p&gt;Retrieve RHSSO realm public key:&lt;/p&gt; &lt;div style="background-color: #ffffff; margin-bottom: 16px;"&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; RHSSO_REALM=3scale-api&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; RHSSO_URI=sso73.apps.&amp;#60;YOUR-DOMAIN&amp;#62;.com&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; TOKEN_URL=https://${RHSSO_URI}/auth/realms/${RHSSO_REALM}/protocol/openid-connect/token&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; THREESCALE_REALM_USERNAME=admin&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; THREESCALE_REALM_PASSWORD=12345&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #3366ff;"&gt;&lt;strong&gt;TKN&lt;/strong&gt;&lt;/span&gt;=$(curl -k -X POST &amp;#8220;$TOKEN_URL&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt; -H &amp;#8220;Content-Type: application/x-www-form-urlencoded&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt; -d &amp;#8220;username=$THREESCALE_REALM_USERNAME&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt; -d &amp;#8220;password=$THREESCALE_REALM_PASSWORD&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt; -d &amp;#8220;grant_type=password&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt; -d &amp;#8220;client_id=admin-cli&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt; | sed &amp;#8216;s/.*access_token&amp;#8221;:&amp;#8221;//g&amp;#8217; | sed &amp;#8216;s/&amp;#8221;.*//g&amp;#8217;)&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; REALM_KEYS_URL=https://${RHSSO_URI}/auth/admin/realms/${RHSSO_REALM}/keys&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #3366ff;"&gt;&lt;strong&gt;RSA_PUB_KEY&lt;/strong&gt;&lt;/span&gt;=$(curl -k -X GET &amp;#8220;$REALM_KEYS_URL&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt; -H &amp;#8220;Authorization: Bearer $TKN&amp;#8221; \&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt; | jq -r &amp;#8216;.keys[] | select(.type==&amp;#8221;RSA&amp;#8221;) | .publicKey&amp;#8217; )&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #999999;"&gt;# Create a valid .pem certificate&lt;br /&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;REALM_CERT=$RHSSO_REALM.pem&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;echo &lt;span style="color: #339966;"&gt;&lt;strong&gt;&amp;#8220;&amp;#8212;&amp;#8211;BEGIN CERTIFICATE&amp;#8212;&amp;#8211;&amp;#8220;&lt;/strong&gt;&lt;/span&gt; &amp;#62; $REALM_CERT; echo $RSA_PUB_KEY &amp;#62;&amp;#62; $REALM_CERT; echo &lt;span style="color: #339966;"&gt;&lt;strong&gt;&amp;#8220;&amp;#8212;&amp;#8211;END CERTIFICATE&amp;#8212;&amp;#8211;&amp;#8220;&lt;/strong&gt;&lt;/span&gt; &amp;#62;&amp;#62; $REALM_CERT&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #999999;"&gt;# Check the generated .pem certificate&lt;/span&gt;&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# fold -s -w 64 $REALM_CERT &amp;#62; $RHSSO_REALM.fixed.pem&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# openssl x509 -in $RHSSO_REALM.fixed.pem -text -noout&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# openssl x509 -in $RHSSO_REALM.fixed.pem -noout -issuer -fingerprint&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;p&gt;Then, deploy the &lt;code&gt;parent&lt;/code&gt; project:&lt;/p&gt; &lt;div style="color: #24292e;"&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# Deploy parent project on nexus&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;mvn clean package deploy&lt;/strong&gt;&lt;/span&gt; -DnexusReleaseRepoUrl=$MAVEN_URL_RELEASES -DnexusSnapshotRepoUrl=$MAVEN_URL_SNAPSHOTS -s ./maven-settings.xml -e -X -N&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;p&gt;Now, deploy the &lt;code&gt;stock-api&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div style="margin-bottom: 16px;"&gt; &lt;div&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# oc delete all -lapp=stock-api&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;oc new-app&lt;/span&gt; openjdk-8-rhel8:latest~&lt;a class="jive-link-external-small" href="https://github.com/aelkz/microservices-security.git" target="_blank" rel="nofollow noopener noreferrer"&gt;https://github.com/aelkz/microservices-security.git&lt;/a&gt; &amp;#8211;name=stock-api &amp;#8211;context-dir=/stock &amp;#8211;build-env=&amp;#8217;MAVEN_MIRROR_URL=&amp;#8217;${MAVEN_URL} -e MAVEN_MIRROR_URL=${MAVEN_URL}&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;oc patch svc&lt;/span&gt; stock-api -p &amp;#8216;{&amp;#8220;spec&amp;#8221;:{&amp;#8220;ports&amp;#8221;:[{&amp;#8220;name&amp;#8221;:&amp;#8221;http&amp;#8221;,&amp;#8221;port&amp;#8221;:8080,&amp;#8221;protocol&amp;#8221;:&amp;#8221;TCP&amp;#8221;,&amp;#8221;targetPort&amp;#8221;:8080}]}}&amp;#8217;&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;oc label svc&lt;/span&gt; stock-api monitor=springboot2-api&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;Use the provided &lt;code&gt;configmap&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; to set the required variables:&lt;/p&gt; &lt;div style="color: #24292e;"&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create&lt;/strong&gt;&lt;/span&gt; -f configuration/configmap/stock-api-env.yml -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create&lt;/strong&gt;&lt;/span&gt; -f configuration/secret/stock-api.yml -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; APP=stock-api&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; dc/${APP} &amp;#8211;from=secret/stock-api-secret&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; dc/${APP} &amp;#8211;from=configmap/stock-api-config&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;p&gt;Deploy the &lt;code&gt;supplier-api&lt;/code&gt;&lt;b&gt;, &lt;/b&gt;but first check all settings in the &lt;code&gt;application.yaml&lt;/code&gt; file before continuing. The attributes here must be updated to reflect your actual environment:&lt;/p&gt; &lt;ul style="padding-left: 2em;"&gt; &lt;li&gt;&lt;code&gt;rest.security.issuer-uri&lt;/code&gt; on Line 61.&lt;/li&gt; &lt;li&gt;&lt;code&gt;security.oauth2.resource.id&lt;/code&gt; on Line 71.&lt;/li&gt; &lt;li&gt;&lt;code&gt;security.oauth2.resource.jwt.key-value&lt;/code&gt; on Line 75.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div style="background-color: #ffffff; margin-bottom: 16px;"&gt; &lt;div&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace; color: #999999;"&gt;# oc delete all -lapp=supplier-api&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc new-app&lt;/strong&gt;&lt;/span&gt; openjdk-8-rhel8:latest~&lt;a class="jive-link-external-small" href="https://github.com/aelkz/microservices-security.git" target="_blank" rel="nofollow noopener noreferrer"&gt;https://github.com/aelkz/microservices-security.git&lt;/a&gt; &amp;#8211;name=supplier-api &amp;#8211;context-dir=/supplier &amp;#8211;build-env=&amp;#8217;MAVEN_MIRROR_URL=&amp;#8217;${MAVEN_URL} -e MAVEN_MIRROR_URL=${MAVEN_URL}&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc patch svc&lt;/strong&gt;&lt;/span&gt; supplier-api -p &amp;#8216;{&amp;#8220;spec&amp;#8221;:{&amp;#8220;ports&amp;#8221;:[{&amp;#8220;name&amp;#8221;:&amp;#8221;http&amp;#8221;,&amp;#8221;port&amp;#8221;:8080,&amp;#8221;protocol&amp;#8221;:&amp;#8221;TCP&amp;#8221;,&amp;#8221;targetPort&amp;#8221;:8080}]}}&amp;#8217;&lt;/span&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc label svc&lt;/strong&gt;&lt;/span&gt; supplier-api monitor=springboot2-api&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;Use the provided &lt;code&gt;configmap&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; to set the required variables:&lt;/p&gt; &lt;div&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create&lt;/strong&gt;&lt;/span&gt; -f configuration/configmap/supplier-api-env.yml -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create&lt;/strong&gt;&lt;/span&gt; -f configuration/secret/supplier-api.yml -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; APP=supplier-api&lt;br /&gt; &lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; dc/${APP} &amp;#8211;from=secret/supplier-api-secret&lt;/span&gt;&lt;br /&gt; &lt;span style="font-size: 13px; font-family: 'andale mono', monospace;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; dc/${APP} &amp;#8211;from=configmap/supplier-api-config&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;p&gt;Deploy the &lt;code&gt;product-api&lt;/code&gt;, but again, check all settings in the &lt;code&gt;application.yaml&lt;/code&gt; file before continuing. The following attributes must be updated to reflect your actual environment: &lt;code&gt;rest.security.issuer-uri&lt;/code&gt; on Line 61, and the&lt;code&gt;security.oauth2.resource.jwt.key-value&lt;/code&gt; on Line 75:&lt;/p&gt; &lt;div style="background-color: #ffffff; margin-bottom: 16px;"&gt; &lt;div&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# oc delete all -lapp=product-api&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc new-app&lt;/strong&gt;&lt;/span&gt; openjdk-8-rhel8:latest~&lt;a class="jive-link-external-small" href="https://github.com/aelkz/microservices-security.git" target="_blank" rel="nofollow noopener noreferrer"&gt;https://github.com/aelkz/microservices-security.git&lt;/a&gt; &amp;#8211;name=product-api &amp;#8211;context-dir=/product &amp;#8211;build-env=&amp;#8217;MAVEN_MIRROR_URL=&amp;#8217;${MAVEN_URL} -e MAVEN_MIRROR_URL=${MAVEN_URL}&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc patch svc&lt;/strong&gt;&lt;/span&gt; product-api -p &amp;#8216;{&amp;#8220;spec&amp;#8221;:{&amp;#8220;ports&amp;#8221;:[{&amp;#8220;name&amp;#8221;:&amp;#8221;http&amp;#8221;,&amp;#8221;port&amp;#8221;:8080,&amp;#8221;protocol&amp;#8221;:&amp;#8221;TCP&amp;#8221;,&amp;#8221;targetPort&amp;#8221;:8080}]}}&amp;#8217;&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc label svc&lt;/strong&gt;&lt;/span&gt; product-api monitor=springboot2-api&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;Use the provided &lt;code&gt;configmap&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; to set the required variables:&lt;/p&gt; &lt;div&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create&lt;/strong&gt;&lt;/span&gt; -f configuration/configmap/product-api-env.yml -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create&lt;/strong&gt;&lt;/span&gt; -f configuration/secret/product-api.yml -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; APP=supplier-api&lt;br /&gt; &lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; dc/${APP} &amp;#8211;from=secret/product-api-secret&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; dc/${APP} &amp;#8211;from=configmap/product-api-config&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3&gt;Step 16: Integration deployment (FUSE)&lt;/h3&gt; &lt;/div&gt; &lt;p&gt;Now that the microservices APIs are deployed, let’s deploy the integration layer:&lt;/p&gt; &lt;div style="color: #24292e; font-size: 16px;"&gt; &lt;div&gt; &lt;table class="j-table jiveBorder" style="border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5; background-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# import a new spring-boot camel template&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/span&gt; -o s2i-microservices-fuse74-spring-boot-camel.yaml -s &lt;a class="jive-link-external-small" href="https://raw.githubusercontent.com/aelkz/microservices-security/master/_configuration/openshift/s2i-microservices-fuse74-spring-boot-camel.yaml" target="_blank" rel="nofollow noopener noreferrer"&gt;https://raw.githubusercontent.com/aelkz/microservices-security/master/_configuration/openshift/s2i-microservices-fuse74-spring-boot-camel.yaml&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc delete template&lt;/strong&gt;&lt;/span&gt; s2i-microservices-fuse74-spring-boot-camel -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create&lt;/strong&gt;&lt;/span&gt; -n ${PROJECT_NAMESPACE} -f s2i-microservices-fuse74-spring-boot-camel.yaml&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# NOTE. You may want to check the ..self-signed.yaml template as it uses a customized imagestream for use with self-signed certificates. (see the APPENDIX-README.md for for info)&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; NEXUS_NAMESPACE=cicd-devtools&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; PROJECT_NAMESPACE=microservices-security&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; APP=auth-integration-api&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; APP_NAME=auth-integration&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; APP_GROUP=com.redhat.microservices&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; APP_GIT=&lt;a class="jive-link-external-small" href="https://github.com/aelkz/microservices-security.git" target="_blank" rel="nofollow noopener noreferrer"&gt;https://github.com/aelkz/microservices-security.git&lt;/a&gt;&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; APP_GIT_BRANCH=master&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; MAVEN_URL=http://$(oc get route nexus3 -n ${NEXUS_NAMESPACE} &amp;#8211;template='{{ .spec.host }}&amp;#8217;)/repository/maven-group/&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; CUSTOM_TEMPLATE=s2i-microservices-fuse74-spring-boot-camel-selfsigned&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# the previous template have some modifications regarding services,route and group definitions.&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# oc delete all -lapp=${APP}&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc new-app&lt;/strong&gt;&lt;/span&gt; &amp;#8211;template=${CUSTOM_TEMPLATE} &amp;#8211;name=${APP} &amp;#8211;build-env=&amp;#8217;MAVEN_MIRROR_URL=&amp;#8217;${MAVEN_URL} -e MAVEN_MIRROR_URL=${MAVEN_URL} &amp;#8211;param GIT_REPO=${APP_GIT} &amp;#8211;param APP_NAME=${APP} &amp;#8211;param ARTIFACT_DIR=${APP_NAME}/target &amp;#8211;param GIT_REF=${APP_GIT_BRANCH} &amp;#8211;param MAVEN_ARGS_APPEND=&amp;#8217;-pl &amp;#8216;${APP_NAME}&amp;#8217; &amp;#8211;also-make&amp;#8217;&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# Use this param if using a different TAG (example)&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# &amp;#8211;param BUILDER_VERSION=2.0&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# check the created services:&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# 1 for default app-context and 1 for /metrics endpoint.&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc get svc&lt;/strong&gt;&lt;/span&gt; -n ${PROJECT_NAMESPACE} | grep ${APP_NAME}&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# in order to auth-integration-api call the others APIs, we need to change it&amp;#8217;s configuration:&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/span&gt; -o application.yaml -s &lt;a class="jive-link-external-small" href="https://raw.githubusercontent.com/aelkz/microservices-security/master/_configuration/openshift/auth-integration/application.yaml" target="_blank" rel="nofollow noopener noreferrer"&gt;https://raw.githubusercontent.com/aelkz/microservices-security/master/_configuration/openshift/auth-integration/application.yaml&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# NOTE. If you have changed the service or application&amp;#8217;s name, you need to edit and change the downloaded application.yaml file with your definitions.&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px; color: #999999;"&gt;# create a configmap and mount a volume for auth-integration-api&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc delete configmap&lt;/strong&gt;&lt;/span&gt; ${APP} -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create&lt;/strong&gt;&lt;/span&gt; -f configuration/configmap/auth-integration-api-env.yml -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc create&lt;/strong&gt;&lt;/span&gt; -f configuration/secret/auth-integration-api.yml -n ${PROJECT_NAMESPACE}&lt;/span&gt;&lt;/p&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; dc/${APP} &amp;#8211;from=secret/auth-integration-api-secret&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff0000;"&gt;&lt;strong&gt;oc set env&lt;/strong&gt;&lt;/span&gt; dc/${APP} &amp;#8211;from=configmap/auth-integration-api-config&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; All application roles are prefixed with &lt;code&gt;ROLE_&lt;/code&gt; on source-code. This prefix can be changed if you want on line 80 in the &lt;code&gt;../configuration/security/JwtAccessTokenCustomizer.java&lt;/code&gt; class. On RHSSO, these roles are registered without this prefix. See this &lt;a href="https://stackoverflow.com/questions/33205236/spring-security-added-prefix-role-to-all-roles-name" target="_blank" rel="nofollow noopener noreferrer"&gt;stack overflow&lt;/a&gt; reference.&lt;/p&gt; &lt;h3&gt;Step 17: Testing the NodeJS application with Red Hat Single Sign-On&lt;/h3&gt; &lt;p&gt;Open the NodeJS web app in your browser:&lt;/p&gt; &lt;div style="color: #24292e;"&gt; &lt;table class="j-table jiveBorder" style="background-color: #fcf2f5; border: 1px solid #c6c6c6; border-width: 1px; border-color: #fcf2f5;" width="100%"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;p style="color: #000000; font-family: Verdana, Geneva, sans-serif; font-size: 14px; letter-spacing: -0.4px; font-weight: 400; text-decoration: none; font-style: normal; font-variant: normal; text-transform: none;"&gt;&lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff6600;"&gt;&lt;strong&gt;export&lt;/strong&gt;&lt;/span&gt; MICROSERVICES_NAMESPACE=microservices-security&lt;/span&gt;&lt;br /&gt; &lt;span style="font-family: 'andale mono', monospace; font-size: 13px;"&gt;&lt;span style="color: #ff6600;"&gt;&lt;strong&gt;echo&lt;/strong&gt;&lt;/span&gt; http://$(oc get route nodejs-web -n ${MICROSERVICES_NAMESPACE} &amp;#8211;template='{{ .spec.host }}&amp;#8217;)&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;p&gt;If you&amp;#8217;re using a self-signed certificate, the browser will request authorization to open an insecure URL. Navigate through the menus and test all actions by clicking on every button to see the final result. If an action returns 401 or 403, there is probably pending configuration on 3scale, or missing or invalid credentials on some application. If you get HTTP error 500, maybe the application is unavailable. Try changing &lt;code&gt;Jon Doe&lt;/code&gt; roles and check every situation after refreshing the access token:&lt;/p&gt; &lt;p&gt;&lt;img class="aligncenter" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_videos/screen01.gif" width="824" height="530" /&gt;&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;em&gt;(Click on the image to see it larger.)&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img class="j-img-centered" style="margin-left: auto; margin-right: auto;" src="https://raw.githubusercontent.com/aelkz/microservices-security/master/_images/37.png" width="808" height="272" /&gt;&lt;/p&gt; &lt;p&gt;I hope you enjoyed this tutorial. The troubleshooting was somewhat difficult because of all the OAuth2 adapters and security mechanisms involved. Please let me know if you want to improve something, or add more context to this PoC. Thank you.&lt;/p&gt; &lt;h3&gt;References&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://codepen.io/corenominal/pen/rxOmMJ" target="_blank" rel="noopener noreferrer"&gt;API Key Generator&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://jwt.io" target="_blank" rel="noopener noreferrer"&gt;JWT Key Generator&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://openidconnect.net" target="_blank" rel="noopener noreferrer"&gt;OpenID Connect Debugger&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.jsonschema2pojo.org" target="_blank" rel="noopener noreferrer"&gt;Generate Plain Old Java Objects from JSON or JSON-Schema&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://medium.com/@bcarunmail/securing-rest-api-using-keycloak-and-spring-oauth2-6ddf3a1efcc2" target="_blank" rel="noopener noreferrer"&gt;Securing REST API using Keycloak and Spring Oauth2 (@bcarun)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://medium.com/@siweheee/keycloak-a-real-scenario-from-development-to-production-ce57800e3ba9" target="_blank" rel="noopener noreferrer"&gt;Keycloak: A real Scenario from Development to Production&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/11/21/setup-3scale-openid-connect-oidc-integration-rh-sso/" target="_blank" rel="noopener noreferrer"&gt;HOW-TO setup 3scale OpenID Connect (OIDC) Integration with RH SSO&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/aelkz/ocp-sso/blob/master/README.pt-br.md" target="_blank" rel="noopener noreferrer"&gt;Red Hat Openshift Single Sign-On Secured N-tier application (@mechevarria)&lt;/a&gt;&lt;a href="https://github.com/aelkz/ocp-sso/blob/master/README.pt-br.md"&gt;&lt;br /&gt; &lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F30%2Fhow-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale%2F&amp;#38;linkname=How%20to%20secure%20microservices%20with%20Red%20Hat%20Single%20Sign-On%2C%20Fuse%2C%20and%203scale" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F30%2Fhow-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale%2F&amp;#38;linkname=How%20to%20secure%20microservices%20with%20Red%20Hat%20Single%20Sign-On%2C%20Fuse%2C%20and%203scale" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F30%2Fhow-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale%2F&amp;#38;linkname=How%20to%20secure%20microservices%20with%20Red%20Hat%20Single%20Sign-On%2C%20Fuse%2C%20and%203scale" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F30%2Fhow-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale%2F&amp;#38;linkname=How%20to%20secure%20microservices%20with%20Red%20Hat%20Single%20Sign-On%2C%20Fuse%2C%20and%203scale" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F30%2Fhow-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale%2F&amp;#38;linkname=How%20to%20secure%20microservices%20with%20Red%20Hat%20Single%20Sign-On%2C%20Fuse%2C%20and%203scale" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F30%2Fhow-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale%2F&amp;#38;linkname=How%20to%20secure%20microservices%20with%20Red%20Hat%20Single%20Sign-On%2C%20Fuse%2C%20and%203scale" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F30%2Fhow-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale%2F&amp;#38;linkname=How%20to%20secure%20microservices%20with%20Red%20Hat%20Single%20Sign-On%2C%20Fuse%2C%20and%203scale" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F30%2Fhow-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale%2F&amp;#038;title=How%20to%20secure%20microservices%20with%20Red%20Hat%20Single%20Sign-On%2C%20Fuse%2C%20and%203scale" data-a2a-url="https://developers.redhat.com/blog/2019/10/30/how-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale/" data-a2a-title="How to secure microservices with Red Hat Single Sign-On, Fuse, and 3scale"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/30/how-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale/"&gt;How to secure microservices with Red Hat Single Sign-On, Fuse, and 3scale&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/wGNu5e3rax0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In this article, we&amp;#8217;ll cover microservice security concepts by using protocols such as OpenID Connect with the support of Red Hat Single Sign-On and 3scale. Working with a microservice-based architecture, user identity, and access control in a distributed, in-depth form must be carefully designed. Here, the integration of these tools will be detailed, step-by-step, in [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/30/how-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale/"&gt;How to secure microservices with Red Hat Single Sign-On, Fuse, and 3scale&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">637097</post-id><dc:creator>raphael abreu</dc:creator><dc:date>2019-10-30T07:00:39Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/30/how-to-secure-microservices-with-red-hat-single-sign-on-fuse-and-3scale/</feedburner:origLink></entry></feed>
