<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Report from July 2019 ISO C++ Standards Committee Meeting (Concurrency and Parallelism Study Group)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/e4Y_ZpRXp9I/" /><category term="C" scheme="searchisko:content:tags" /><category term="C++" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><author><name>Thomas Rodgers</name></author><id>searchisko:content:id:jbossorg_blog-report_from_july_2019_iso_c_standards_committee_meeting_concurrency_and_parallelism_study_group</id><updated>2019-11-15T08:00:52Z</updated><published>2019-11-15T08:00:52Z</published><content type="html">&lt;p&gt;The &lt;a href="https://isocpp.org/std/meetings-and-participation/upcoming-meetings"&gt;summer 2019 WG21 C++ Committee meeting&lt;/a&gt; was held in Cologne, Germany during the week of July 13. As usual,&lt;br /&gt; Red Hat sent three representatives, &lt;a href="https://developers.redhat.com/blog/2019/09/03/report-from-july-2019-iso-c-meeting-core-language/"&gt;Jason Merrill in the Core Working Group (CWG)&lt;/a&gt;, Jonathan Wakely in the Library Working Group (LWG), and myself in the Concurrency and Parallelism Study Group (SG1). This rather late report covers the Cologne SG1 session and looks ahead to some revised papers from that meeting, which are scheduled for the fall meeting in Belfast, Northern Ireland, for the first week of November 2019.&lt;span id="more-648547"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;C++20 Synchronization Library&lt;/h2&gt; &lt;p&gt;Monday started as usual after the main plenary session. SG1 started the week by reviewing some non-controversial&lt;br /&gt; additions to C++20 synchronization primitives. The first of these papers was &lt;a href="https://wg21.link/p1633R0"&gt;p1633R0&lt;/a&gt; &amp;#8220;Amendments to the C++20&lt;br /&gt; Synchronization Library,&amp;#8221; which dealt some minor issues discovered during wording review of the C++20&lt;br /&gt; Synchronization Library (&lt;a href="https://wg21.link/p1135R4"&gt;p1135R4)&lt;/a&gt;. The changes were applied to R5 of the paper, and SG1 voted to forward &lt;a href="https://wg21.link/p1135R5"&gt;p1135R5&lt;/a&gt;&lt;br /&gt; to LWG. Next up were &lt;a href="https://wg21.link/p1643R0"&gt;p1643R0&lt;/a&gt; and &lt;a href="https://wg21.link/p1644R0"&gt;p1644R0&lt;/a&gt;, which propose to add wait/notify functionality to atomic_ref and&lt;br /&gt; atomic, respectively. SG1 voted to forward both of these papers to the Library Evolution Working Group (LEWG).&lt;br /&gt; The final paper before lunch was &lt;a href="https://wg21.link/p0943R2"&gt;p0943R2&lt;/a&gt;, which concerns supporting C atomics in C++. SG1 voted to let the paper&lt;br /&gt; proceed without needing to return for further review.&lt;/p&gt; &lt;p&gt;After the break, SG1 took up the subject of stackful co-routines (aka &amp;#8220;fibers&amp;#8221;) with two papers:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://wg21.link/p1520R0"&gt;P1520&lt;/a&gt; &amp;#8220;Response to response to &amp;#8220;Fibers under the magnifying glass.&amp;#8221;&amp;#8221; This paper seeks to clarify some aspects of the distinction between stackless co-routines and stackful fibers.&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/p0876R5"&gt;P0876&lt;/a&gt; &amp;#8220;fiber_context &amp;#8211; fibers without scheduler.&amp;#8221; This is the latest (R6) paper in the series of proposals to bring fibers to the C++ standard. SG1 consensus was that P0876 needs changes to proceed. Further discussion on Friday reached agreement to target a Technical Specification as a ship vehicle for the proposal with the requested changes applied.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Executors&lt;/h2&gt; &lt;p&gt;Next, it was on to everyone&amp;#8217;s favorite topic: Executors. The first paper &lt;a href="https://wg21.link/p1525R0"&gt;P1525&lt;/a&gt; &amp;#8220;One-Way execute is a Poor Basis Operation.&amp;#8221; This paper argues in favor of the previous proposal for Executor Sender/Receiver as described in &lt;a href="https://wg21.link/p1341r0"&gt;P1341&lt;/a&gt; as the basis operation(s) supported by Executors, with other operations built in terms of senders and receivers, as opposed to &lt;a href="https://wg21.link/p0443"&gt;P0443&lt;/a&gt;&amp;#8216;s OneWayExecutor concept. The SG1 presentation and subsequent discussion were primarily to inform Tuesday&amp;#8217;s discussions on &lt;a href="https://wg21.link/p0443"&gt;p0443&lt;/a&gt;. The last paper of the day was &lt;a href="https://wg21.link/p1738"&gt;P1738 &lt;/a&gt;&amp;#8220;The Executor Concept Hierarchy Needs a Single Root.&amp;#8221; This paper seeks to argue that, because P0443&amp;#8217;s Executor concepts and mechanism for adding new concepts don&amp;#8217;t form a subsumption hierarchy, it&amp;#8217;s difficult to design generic components that accept executors. As with &lt;a href="https://wg21.link/p1525"&gt;P1525&lt;/a&gt;, this was an informational presentation to inform Tuesday&amp;#8217;s discussions on &lt;a href="https://wg21.link/p0443"&gt;P0443&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Tuesday morning, SG1 kicked off by reviewing &lt;a href="https://wg21.link/p1068"&gt;P1068&lt;/a&gt; &amp;#8220;Vector API for random number generation.&amp;#8221; This paper&lt;br /&gt; proposes to add SIMD support for random number generation. The discussion led to weak consensus that such a facility should produce a SIMD type as described in &lt;a href="https://wg21.link/n4796"&gt;N4796&lt;/a&gt; &amp;#8220;Technical Specification for C++ Extensions for Parallelism.&amp;#8221; A revision of this paper will likely be discussed at the fall WG21 meeting.&lt;/p&gt; &lt;p&gt;Next up was &lt;a href="https://wg21.link/p1367"&gt;P1367&lt;/a&gt; &amp;#8220;Not All Agents Have TLS.&amp;#8221; This paper proposes standardizing the existing practice of thread_local, as the reality of TLS usage is much more complicated than the wording in the Standard even allows us to explain. This is a rather complicated topic and SG1 had an extensive discussion on the issues, but no straw polls were taken at this meeting.&lt;/p&gt; &lt;p&gt;Tuesday afternoon, SG1 resumed discussion on Executors with &lt;a href="https://wg21.link/p1658"&gt;P1658&lt;/a&gt; &amp;#8220;Suggestions for Consensus on Executors.&amp;#8221; This paper proposes to modify the executors model as described by &lt;a href="https://wg21.link/p0443"&gt;P0443&lt;/a&gt; to increase consensus in the hope that executors are merged with C++23 as planned. The compromise seeks to essentially create a singly rooted executor concept hierarchy and add support for customization of bulk_execute as well as introducing the Sender/Receiver concepts. The main point of contention remaining from the compromise is error handling.&lt;/p&gt; &lt;p&gt;We then discussed &lt;a href="https://wg21.link/p1791"&gt;P1791&lt;/a&gt;Â &amp;#8220;Evolution of the &lt;a href="https://wg21.link/p0443"&gt;P0443&lt;/a&gt; Unified Executors Proposal to accommodate new requirements.&amp;#8221; The central premise of this paper is the properties mechanism outlined in &lt;a href="https://wg21.link/p0443"&gt;P0443&lt;/a&gt; can support the requirements of &lt;a href="https://wg21.link/p1660"&gt;P1660&lt;/a&gt;&amp;#8216;s sender/receiver model. Again, significant discussion time was spent on what sort of error channel(s) should be supported. Next, &lt;a href="https://wg21.link/p1792"&gt;P1792&lt;/a&gt; &amp;#8220;Simplifying and generalising Sender/Receiver for asynchronous operations&amp;#8221; argues that the API design approach of &lt;a href="https://wg21.link/p1341"&gt;P1341&lt;/a&gt; &amp;#8220;Unifying Asynchronous APIs in C++ Standard Library&amp;#8221; presents problems with usability, flexibility, and efficiency compared to existing practice. No straw polls were taken; significant differences of opinion remain. The last paper of the day was &lt;a href="https://wg21.link/p1660"&gt;P1660&lt;/a&gt;. After extensive discussion, SG1 voted to apply &lt;a href="https://wg21.link/p1658"&gt;P1658&lt;/a&gt;&amp;#8216;s proposed changes to &lt;a href="https://wg21.link/p0443"&gt;P0443&lt;/a&gt;, and that it would be &amp;#8220;tolerable'&amp;#8221; to ship error handling as in P1660. There was no consensus to proceed with error&lt;br /&gt; handling as in &lt;a href="https://wg21.link/p1791"&gt;P1791&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Memory model topics&lt;/h2&gt; &lt;p&gt;Wednesday, SG1 turned its attention to all things memory model, starting with an update on &lt;a href="https://wg21.link/p1217"&gt;P1217 &lt;/a&gt;&amp;#8220;Out-of-thin-air, revisited, again.&amp;#8221; Next up, &lt;a href="https://wg21.link/p1780"&gt;P1780&lt;/a&gt; &amp;#8220;Modular Relaxed Dependencies: A new approach to the Out-Of-Thin-Air Problem.&amp;#8221; Next, SG1 reviewed &lt;a href="https://wg21.link/p1478"&gt;P1478R0&lt;/a&gt; &amp;#8220;Byte-wise atomic memcpy,&amp;#8221; which was presented as a draft at the Spring 2019 meeting and essentially looks to codify what most memcpy implementations already do. The shipping vehicle is likely a Technical Specification.&lt;/p&gt; &lt;p&gt;Wednesday afternoon, SG1 reviewed &lt;a href="https://wg21.link/p1116"&gt;P1116&lt;/a&gt; &amp;#8220;Re-Gaining Exclusive Ownership from shared_ptrs,&amp;#8221; which is a proposal to add a &amp;#8220;lock_exclusive()&amp;#8221; operation to shared_ptr. SG1 determined it is implementable but not without ABI breakage, and they don&amp;#8217;t like the name of the operation. Next up, we reviewed &lt;a href="https://wg21.link/p1726"&gt;P1726&lt;/a&gt; &amp;#8220;Pointer lifetime-end zap.&amp;#8221; This paper seeks to reconcile what the Standard says about the state of pointer after an object&amp;#8217;s lifetime has ended, with well-known algorithms that rely on being able to perform certain operations on pointers whose lifetimes have ended. There are various suggestions to address this issue, but no conclusions were reached at this meeting.&lt;/p&gt; &lt;p&gt;Next, we looked at &lt;a href="https://wg21.link/p0940"&gt;P0940&lt;/a&gt; &amp;#8220;Concurrency TS is growing: Concurrent Utilities and Data Structures&amp;#8221; and &lt;a href="https://wg21.link/p1445"&gt;P1445&lt;/a&gt; &amp;#8220;Concurrency TS: to update or not update.&amp;#8221; The discussion of these papers mostly had to do with timing of issuing a new Technical Specification and what language standard it should be based on. From here, the discussion moved on to &amp;#8220;Clarifying atomic&amp;#60;thread::id&amp;#62;::compare_exchange_*&amp;#8221; (&lt;a href="https://wg21.link/p1801"&gt;P1801&lt;/a&gt;). SG1 voted to approve the proposed resolution presented in the paper.&lt;/p&gt; &lt;h2&gt;Low-level I/O and more executors&lt;/h2&gt; &lt;p&gt;Thursday morning, SG1 considered a pair of related papers that deal with supporting low-level IO facilities and the ability to detach objects, transport them elsewhere, and resume the object lifetime. The papers were &lt;a href="https://wg21.link/p1031"&gt;P1031&lt;/a&gt; &amp;#8220;Low-level file i/o library&amp;#8221; and &lt;a href="https://wg21.link/p1631"&gt;P1631&lt;/a&gt; &amp;#8220;Object detachment and attachment.&amp;#8221; The scope of these papers is quite large, even to just survey the issues, and SG1 determined that these proposals fall squarely in SG1&amp;#8217;s remit. Next SG1 considered&lt;br /&gt; &lt;a href="https://wg21.link/p0652"&gt;P0652&lt;/a&gt; &amp;#8220;Concurrent associative data structure with unsynchronized view,&amp;#8221; which had been updated based on SG1&amp;#8217;s guidance at the Spring 2019 meeting. SG1 discussed the various issues with such a datatype, but no straw polls were taken. Next SG1 looked at &lt;a href="https://wg21.link/p1761"&gt;P1761&lt;/a&gt; &amp;#8220;Concurrent map customization options.&amp;#8221; These concurrent data structure papers are likely headed to a Technical Specification.&lt;/p&gt; &lt;p&gt;On Thursday afternoon, SG1 reviewed a handful of executor-related papers, starting with &lt;a href="https://wg21.link/p1019"&gt;P1019&lt;/a&gt; &amp;#8220;Integrating Executors with Parallel Algorithms.&amp;#8221; Next was &lt;a href="https://wg21.link/p0797r2"&gt;P0797R2&lt;/a&gt; &amp;#8220;Handling Concurrent Exceptions with Executors,&amp;#8221; followed by &lt;a href="https://wg21.link/p1436"&gt;P1436R0&lt;/a&gt; &amp;#8220;Executor properties for affinity-based execution.&amp;#8221; There was general agreement that executors should support some form of error handling facility, as not all agents support C++ exceptions.&lt;/p&gt; &lt;h2&gt;Friday papers&lt;/h2&gt; &lt;p&gt;SG1 started Friday morning looking at &lt;a href="https://wg21.link/p1382"&gt;P1382&lt;/a&gt; &amp;#8220;volatile_load&amp;#60;T&amp;#62; and volatile_store&amp;#60;T&amp;#62;,&amp;#8221; which is related to &lt;a href="https://wg21.link/p1152"&gt;P1152&lt;/a&gt; &amp;#8220;Deprecating volatile.&amp;#8221; Next up was &lt;a href="https://wg21.link/p1750"&gt;P1750&lt;/a&gt; &amp;#8220;A Proposal to Add Process Management to the C++ Standard Library.&amp;#8221; The proposal is based on the boost.process library, which provides cross-platform process management functionality, with a lot of discussion about how to support this within the standard. A new version of &lt;a href="https://wg21.link/p1750"&gt;P1750&lt;/a&gt; is available in the pre-Belfast meeting and is likely to be on SG1&amp;#8217;s agenda again. The last paper of the morning was &lt;a href="https://wg21.link/p1108"&gt;P1108&lt;/a&gt; &amp;#8220;web_view,&amp;#8221; which proposes a web_view facility for the C++ standard library that leverages existing web standards and technology. A new version of &lt;a href="https://wg21.link/p1108"&gt;P1108&lt;/a&gt; is in the pre-Belfast mailing and is likely to be on SG1&amp;#8217;s agenda again.&lt;/p&gt; &lt;p&gt;Friday afternoon, SG1 reviewed &lt;a href="https://wg21.link/p1795"&gt;P1795&lt;/a&gt; &amp;#8220;System topology discovery for heterogeneous and distributed computing.&amp;#8221; A new revision of this paper is available in the pre-Belfast meeting and is likely to be on SG1&amp;#8217;s agenda again. The last paper SG1 discussed in Cologne was &lt;a href="https://wg21.link/p0642"&gt;P0642&lt;/a&gt; &amp;#8220;The Concurrent Invocation Library.&amp;#8221; The aim of this paper is to provide structural support for invoking multiple operations concurrently in C++. SG1&amp;#8217;s feedback was to review &lt;a href="https://wg21.link/p1660"&gt;P1660&lt;/a&gt; and come back with a new version of the paper, which is part of the pre-Belfast meeting and is likely to be reviewed again.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F15%2Freport-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group%2F&amp;#38;linkname=Report%20from%20July%202019%20ISO%20C%2B%2B%20Standards%20Committee%20Meeting%20%28Concurrency%20and%20Parallelism%20Study%20Group%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F15%2Freport-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group%2F&amp;#38;linkname=Report%20from%20July%202019%20ISO%20C%2B%2B%20Standards%20Committee%20Meeting%20%28Concurrency%20and%20Parallelism%20Study%20Group%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F15%2Freport-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group%2F&amp;#38;linkname=Report%20from%20July%202019%20ISO%20C%2B%2B%20Standards%20Committee%20Meeting%20%28Concurrency%20and%20Parallelism%20Study%20Group%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F15%2Freport-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group%2F&amp;#38;linkname=Report%20from%20July%202019%20ISO%20C%2B%2B%20Standards%20Committee%20Meeting%20%28Concurrency%20and%20Parallelism%20Study%20Group%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F15%2Freport-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group%2F&amp;#38;linkname=Report%20from%20July%202019%20ISO%20C%2B%2B%20Standards%20Committee%20Meeting%20%28Concurrency%20and%20Parallelism%20Study%20Group%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F15%2Freport-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group%2F&amp;#38;linkname=Report%20from%20July%202019%20ISO%20C%2B%2B%20Standards%20Committee%20Meeting%20%28Concurrency%20and%20Parallelism%20Study%20Group%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F15%2Freport-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group%2F&amp;#38;linkname=Report%20from%20July%202019%20ISO%20C%2B%2B%20Standards%20Committee%20Meeting%20%28Concurrency%20and%20Parallelism%20Study%20Group%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F15%2Freport-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group%2F&amp;#038;title=Report%20from%20July%202019%20ISO%20C%2B%2B%20Standards%20Committee%20Meeting%20%28Concurrency%20and%20Parallelism%20Study%20Group%29" data-a2a-url="https://developers.redhat.com/blog/2019/11/15/report-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group/" data-a2a-title="Report from July 2019 ISO C++ Standards Committee Meeting (Concurrency and Parallelism Study Group)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/15/report-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group/"&gt;Report from July 2019 ISO C++ Standards Committee Meeting (Concurrency and Parallelism Study Group)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/e4Y_ZpRXp9I" height="1" width="1" alt=""/&gt;</content><summary>The summer 2019 WG21 C++ Committee meeting was held in Cologne, Germany during the week of July 13. As usual, Red Hat sent three representatives, Jason Merrill in the Core Working Group (CWG), Jonathan Wakely in the Library Working Group (LWG), and myself in the Concurrency and Parallelism Study Group (SG1). This rather late report covers the Cologne SG1 session and looks ahead to some revised pap...</summary><dc:creator>Thomas Rodgers</dc:creator><dc:date>2019-11-15T08:00:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/15/report-from-july-2019-iso-c-standards-committee-meeting-concurrency-and-parallelism-study-group/</feedburner:origLink></entry><entry><title>Open Liberty Java runtime now available to Red Hat Runtimes subscribers</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/D8KcEuakrIs/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Open Liberty" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat Runtimes" scheme="searchisko:content:tags" /><author><name>Laura Cowen</name></author><id>searchisko:content:id:jbossorg_blog-open_liberty_java_runtime_now_available_to_red_hat_runtimes_subscribers</id><updated>2019-11-14T08:01:10Z</updated><published>2019-11-14T08:01:10Z</published><content type="html">&lt;p&gt;&lt;a href="https://openliberty.io/" target="_blank" rel="noopener noreferrer"&gt;Open Liberty&lt;/a&gt; is a lightweight, production-ready &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; runtime for containerizing and deploying microservices to the cloud, and isÂ now available as part of a &lt;a href="https://www.redhat.com/en/products/runtimes" target="_blank" rel="noopener noreferrer"&gt;Red Hat Runtimes&lt;/a&gt; subscription. If you are a Red Hat Runtimes subscriber, you can write your &lt;a href="https://microprofile.io/" target="_blank" rel="noopener noreferrer"&gt;Eclipse MicroProfile&lt;/a&gt; and &lt;a href="https://jakarta.ee/" target="_blank" rel="noopener noreferrer"&gt;Jakarta EE&lt;/a&gt; apps on Open Liberty and then run them in containers on &lt;a href="http://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;, with commercial support from Red Hat and IBM.&lt;span id="more-649837"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Develop cloud-native Java microservices&lt;/h2&gt; &lt;p&gt;Open Liberty is designed to provide a smooth developer experience with a &lt;a href="https://openliberty.io/blog/2019/10/30/faster-startup-open-liberty.html" target="_blank" rel="noopener noreferrer"&gt;one-second startup time&lt;/a&gt;, a low memory footprint, and our new &lt;a href="https://openliberty.io/blog/2019/10/22/liberty-dev-mode.html" target="_blank" rel="noopener noreferrer"&gt;dev mode&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;a href="https://twitter.com/javahippie/status/1187986394117001216"&gt;&lt;img class=" aligncenter wp-image-650757 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/OL-DevMode-Tweet.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/OL-DevMode-Tweet.png" alt="Tweet about Open Liberty Dev Mode." width="598" height="216" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/OL-DevMode-Tweet.png 598w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/OL-DevMode-Tweet-300x108.png 300w" sizes="(max-width: 598px) 100vw, 598px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Open Liberty provides a full implementation of MicroProfile 3 and &lt;a href="https://developers.redhat.com/blog/2019/09/12/jakarta-ee-8-the-new-era-of-java-ee-explained/"&gt;Jakarta EE 8&lt;/a&gt;. &lt;a href="https://developers.redhat.com/videos/youtube/fbVYQENPa4s/"&gt;MicroProfile&lt;/a&gt; is aÂ &lt;a href="https://microprofile.io/contributors/" target="_blank" rel="noopener noreferrer"&gt;collaborative project&lt;/a&gt; between multiple vendors (including Red Hat and IBM) and the Java community that aims to optimize enterprise Java for writing microservices. With a four-week release schedule, Liberty usually has the latest MicroProfile release available soon after the spec is published.&lt;/p&gt; &lt;p&gt;Also, Open Liberty is supported in common developer tools, including VS Code, Eclipse, Maven, and Gradle. Server configuration (e.g., adding or removing a capability, or &amp;#8220;feature,&amp;#8221; to your app) is through an XML file. Open Libertyâs zero migration policy means that you can focus on whatâs important (writing your app!) and not have to worry about APIs changing under you.&lt;/p&gt; &lt;h2&gt;Deploy in containers to any cloud&lt;/h2&gt; &lt;p&gt;When youâre ready to deploy your app, you can just containerize it and deploy it to OpenShift. The zero migration principle means that new versions of Open Liberty features will not break your app, and you can control which version of the feature your app uses.&lt;/p&gt; &lt;p&gt;Monitoring live microservices is enabled by MicroProfile &lt;a href="https://www.openliberty.io/guides/microprofile-metrics.html" target="_blank" rel="noopener noreferrer"&gt;Metrics&lt;/a&gt;, &lt;a href="https://www.openliberty.io/guides/kubernetes-microprofile-health.html" target="_blank" rel="noopener noreferrer"&gt;Health&lt;/a&gt;, and &lt;a href="https://www.openliberty.io/guides/microprofile-opentracing.html" target="_blank" rel="noopener noreferrer"&gt;OpenTracing&lt;/a&gt;, which add observability to your apps. The emitted metrics from your apps and from the Open Liberty runtime can be consolidated using Prometheus and presented in Grafana.&lt;/p&gt; &lt;h2&gt;Learn with the Open Liberty developer guides&lt;/h2&gt; &lt;p&gt;Our &lt;a href="https://www.openliberty.io/guides/" target="_blank" rel="noopener noreferrer"&gt;Open Liberty developer guides&lt;/a&gt; are available with runnable code and explanations to help you learn how to write microservices with &lt;a href="https://openliberty.io/guides/?search=microprofile&amp;#38;key=tag" target="_blank" rel="noopener noreferrer"&gt;MicroProfile&lt;/a&gt; and &lt;a href="https://openliberty.io/guides/?search=jakarta%20ee" target="_blank" rel="noopener noreferrer"&gt;Jakarta EE&lt;/a&gt;, and then to deploy them to Red Hat OpenShift.&lt;/p&gt; &lt;h2&gt;Get started&lt;/h2&gt; &lt;p&gt;To get started with Open Liberty, try the &lt;a href="https://openliberty.io/guides/getting-started.html" target="_blank" rel="noopener noreferrer"&gt;Packaging and deploying applications guide&lt;/a&gt; and the &lt;a href="https://openliberty.io/guides/cloud-openshift.html" target="_blank" rel="noopener noreferrer"&gt;Deploying microservices to OpenShift guide&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Fopen-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers%2F&amp;#38;linkname=Open%20Liberty%20Java%20runtime%20now%20available%20to%20Red%20Hat%20Runtimes%20subscribers" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Fopen-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers%2F&amp;#38;linkname=Open%20Liberty%20Java%20runtime%20now%20available%20to%20Red%20Hat%20Runtimes%20subscribers" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Fopen-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers%2F&amp;#38;linkname=Open%20Liberty%20Java%20runtime%20now%20available%20to%20Red%20Hat%20Runtimes%20subscribers" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Fopen-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers%2F&amp;#38;linkname=Open%20Liberty%20Java%20runtime%20now%20available%20to%20Red%20Hat%20Runtimes%20subscribers" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Fopen-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers%2F&amp;#38;linkname=Open%20Liberty%20Java%20runtime%20now%20available%20to%20Red%20Hat%20Runtimes%20subscribers" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Fopen-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers%2F&amp;#38;linkname=Open%20Liberty%20Java%20runtime%20now%20available%20to%20Red%20Hat%20Runtimes%20subscribers" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Fopen-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers%2F&amp;#38;linkname=Open%20Liberty%20Java%20runtime%20now%20available%20to%20Red%20Hat%20Runtimes%20subscribers" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Fopen-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers%2F&amp;#038;title=Open%20Liberty%20Java%20runtime%20now%20available%20to%20Red%20Hat%20Runtimes%20subscribers" data-a2a-url="https://developers.redhat.com/blog/2019/11/14/open-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers/" data-a2a-title="Open Liberty Java runtime now available to Red Hat Runtimes subscribers"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/14/open-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers/"&gt;Open Liberty Java runtime now available to Red Hat Runtimes subscribers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/D8KcEuakrIs" height="1" width="1" alt=""/&gt;</content><summary>Open Liberty is a lightweight, production-ready Java runtime for containerizing and deploying microservices to the cloud, and isÂ now available as part of a Red Hat Runtimes subscription. If you are a Red Hat Runtimes subscriber, you can write your Eclipse MicroProfile and Jakarta EE apps on Open Liberty and then run them in containers on Red Hat OpenShift, with commercial support from Red Hat and ...</summary><dc:creator>Laura Cowen</dc:creator><dc:date>2019-11-14T08:01:10Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/14/open-liberty-java-runtime-now-available-to-red-hat-runtimes-subscribers/</feedburner:origLink></entry><entry><title>Tracing Kubernetes applications with Jaeger and Eclipse Che</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9rwysMdWORY/" /><category term="Eclipse Che" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Jaeger" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="opentracing" scheme="searchisko:content:tags" /><author><name>Gary Brown</name></author><id>searchisko:content:id:jbossorg_blog-tracing_kubernetes_applications_with_jaeger_and_eclipse_che</id><updated>2019-11-14T08:00:28Z</updated><published>2019-11-14T08:00:28Z</published><content type="html">&lt;p&gt;Developing distributed applications is complicated. You can wait to monitor for performance issues once you launch the application on your test or staging servers, or in production if youâre feeling lucky, but why not track performance as you develop? This allows you to identify improvement opportunities before rolling out changes to a test or production environment. This article demonstrates how two tools can work together to integrate performance monitoring into your development environment: &lt;a href="https://www.eclipse.org/che/" target="_blank" rel="noopener noreferrer"&gt;Eclipse Che&lt;/a&gt; and &lt;a href="https://www.jaegertracing.io/" target="_blank" rel="noopener noreferrer"&gt;Jaeger&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;According to the Eclipse Che website:&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;em&gt;&amp;#8220;Che brings your Kubernetes application into your development environment and provides an in-browser IDE, allowing you to code, build, test, and run applications exactly as they run on production from any machine.&amp;#8221;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;In this article, we show how simple it is to add Jaeger to your Eclipse Che development workspace and observe how your Kubernetes application performs. We will use &lt;a href="http://che.openshift.io/" target="_blank" rel="noopener noreferrer"&gt;che.openshift.io&lt;/a&gt; as the hosting environment, although you could &lt;a href="https://www.eclipse.org/che/docs/che-7/running-che-locally/" target="_blank" rel="noopener noreferrer"&gt;set up a local Che server&lt;/a&gt; if you prefer.&lt;span id="more-648657"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="create-the-workspace"&gt;Create the workspace&lt;/h2&gt; &lt;p&gt;Che 7 introduced the capability to define a development workspace in a YAML format called a &lt;a href="https://www.eclipse.org/che/docs/che-7/configuring-a-workspace-using-a-devfile/" target="_blank" rel="noopener noreferrer"&gt;devfile&lt;/a&gt;. Example devfiles can be found in the &lt;a href="https://github.com/redhat-developer/devfile" target="_blank" rel="noopener noreferrer"&gt;Red Hat Developers GitHub&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For this post, we use a modified version of the &lt;a href="https://github.com/redhat-developer/devfile/blob/master/getting-started/spring-boot/devfile.yaml" target="_blank" rel="noopener noreferrer"&gt;Spring Boot getting started devfile&lt;/a&gt;, which adds the Jaeger all-in-one backend to the workspace. The main change is to add the following section just before the &lt;code&gt;commands&lt;/code&gt; top-level node:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;- type: dockerimage alias: tracing image: jaegertracing/all-in-one:latest env: - name: MEMORY_MAX_TRACES value: "5000" - name: COLLECTOR_ZIPKIN_HTTP_PORT value: "9411" memoryLimit: 128Mi endpoints: - name: 'tracing-ui' port: 16686 - name: 'collector-grpc' port: 14250 attributes: public: 'false' - name: 'collector-http' port: 14268 attributes: public: 'false' - name: 'collector-zipkin' port: 9411 attributes: public: 'false' - name: 'agent-config' port: 5778 attributes: public: 'false' - name: '6831/udp' port: 6831 attributes: public: 'false' - name: '6832/udp' port: 6832 attributes: public: 'false' volumes: - name: tmp containerPath: /tmp &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The fully modified version of the devfile can be found &lt;a href="https://gist.github.com/objectiser/667615926a40d6cd8eb675859ddee1a1"&gt;here&lt;/a&gt;, with the additional memory limit changes required for using &lt;a href="http://che.openshift.io" target="_blank" rel="noopener noreferrer"&gt;che.openshift.io&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To start the workspace on &lt;a href="http://che.openshift.io" target="_blank" rel="noopener noreferrer"&gt;che.openshift.io&lt;/a&gt;, point a browser to &lt;a href="http://che.openshift.io/f?url=https://gist.githubusercontent.com/objectiser/667615926a40d6cd8eb675859ddee1a1/raw/06d25e2026d7a689dd8b38a343eec9a9cc431cde/che-spring-boot-devfile.yaml" target="_blank" rel="noopener noreferrer"&gt;this url&lt;/a&gt;. Chrome is recommended due to issues on some versions of Firefox.&lt;/p&gt; &lt;h2 id="add-opentracing-instrumentation"&gt;Add OpenTracing instrumentation&lt;/h2&gt; &lt;p&gt;When the workspace is initially opened, the application has no OpenTracing instrumentation, as you can see in Figure 1:&lt;/p&gt; &lt;div id="attachment_648917" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-648917" class="wp-image-648917 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che1-1024x694.png" alt="Figure 1: The initial workspace." width="640" height="434" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che1-1024x694.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che1-300x203.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che1-768x520.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che1.png 1416w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-648917" class="wp-caption-text"&gt;Figure 1: The initial workspace.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;OpenTracing instrumentation can implicitly be added by including a dependency on &lt;code&gt;opentracing-spring-jaeger-cloud-starter&lt;/code&gt; (shown in the updated &lt;code&gt;pom.xml&lt;/code&gt; file in Figure 2), along with updating the &lt;code&gt;spring-boot-starter-parent&lt;/code&gt; version to &lt;code&gt;2.2.0.RELEASE&lt;/code&gt; (which is required by the OpenTracing instrumentation):&lt;/p&gt; &lt;div id="attachment_648907" style="width: 610px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-648907" class="wp-image-648907" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che2-300x127.png" alt="OpenTracing" width="600" height="253" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che2-300x127.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che2-768x324.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che2.png 891w" sizes="(max-width: 600px) 100vw, 600px" /&gt;&lt;p id="caption-attachment-648907" class="wp-caption-text"&gt;Figure 2: Adding the OpenTracing instrumentation.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;This dependency automatically instruments the inbound and outbound HTTP requests. It also bootstraps the Jaeger tracer to report the tracing data to the Jaeger back end (included in the workspace). The default tracer configuration will report the data via UDP to the Jaeger agent, although the application can be configured to report the data via &lt;a href="https://github.com/opentracing-contrib/java-spring-jaeger#configuration" target="_blank" rel="noopener noreferrer"&gt;HTTP directly to the collector&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The final step is to add a property that defines the service name within the tracing data. This goal is achieved by creating the &lt;code&gt;src/main/resources&lt;/code&gt; folder and then creating the file &lt;code&gt;application.properties&lt;/code&gt; with the contents shown in Figure 3:&lt;/p&gt; &lt;div id="attachment_648897" style="width: 610px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-648897" class="wp-image-648897" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che3-300x147.png" alt="" width="600" height="295" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che3-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che3-768x378.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che3.png 895w" sizes="(max-width: 600px) 100vw, 600px" /&gt;&lt;p id="caption-attachment-648897" class="wp-caption-text"&gt;Figure 3: Defining the service name within the tracing data.&lt;/p&gt;&lt;/div&gt; &lt;h2 id="trace-the-running-application"&gt;Trace the running application&lt;/h2&gt; &lt;p&gt;On the right side of the workspace is a cube symbol. When selected, this icon expands a tree. Under the &lt;strong&gt;User Runtimes/tools&lt;/strong&gt; tree node is a task called &lt;strong&gt;run webapp&lt;/strong&gt;. Selecting this option will run the Spring Boot application. When it starts, a window appears with the button &lt;strong&gt;Open Link&lt;/strong&gt;Â as shown in Figure 4. Press this button to start a browser for the application.&lt;/p&gt; &lt;div id="attachment_648887" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-648887" class="wp-image-648887 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che4-1024x694.png" alt="" width="640" height="434" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che4-1024x694.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che4-300x203.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che4-768x520.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che4.png 1416w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-648887" class="wp-caption-text"&gt;Figure 4: Opening a browser for the application.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;In the same tree, select the &lt;strong&gt;User Runtimes/tracing&lt;/strong&gt; option &lt;strong&gt;tracing-ui&lt;/strong&gt;, which launches the Jaeger UI in a separate browser tab as shown in Figure 5:&lt;/p&gt; &lt;div id="attachment_648877" style="width: 443px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-648877" class="wp-image-648877 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che5.png" alt="" width="433" height="359" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che5.png 433w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che5-300x249.png 300w" sizes="(max-width: 433px) 100vw, 433px" /&gt;&lt;p id="caption-attachment-648877" class="wp-caption-text"&gt;Figure 5: Launching a new browser tab for tracing.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Press the refresh button at the top of the browser a couple of times to see the text &lt;code&gt;Span reported&lt;/code&gt; in the console window, as shown at the bottom of Figure 6:&lt;/p&gt; &lt;div id="attachment_648867" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-648867" class="wp-image-648867 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che6-1024x694.png" alt="" width="640" height="434" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che6-1024x694.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che6-300x203.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che6-768x520.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che6.png 1416w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-648867" class="wp-caption-text"&gt;Figure 6: Running application with console log showing spans being reported.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Change to the &lt;strong&gt;Jaeger UI&lt;/strong&gt; tab to see the resulting traces that were reported from the application, as shown in Figures 7 and 8:&lt;/p&gt; &lt;div id="attachment_648857" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-648857" class="wp-image-648857 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che7-1024x694.png" alt="" width="640" height="434" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che7-1024x694.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che7-300x203.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che7-768x520.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che7.png 1416w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-648857" class="wp-caption-text"&gt;Figure 7: The completed traces.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_648847" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-648847" class="wp-image-648847 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che8-1024x694.png" alt="" width="640" height="434" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che8-1024x694.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che8-300x203.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che8-768x520.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/jaeger-che8.png 1416w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-648847" class="wp-caption-text"&gt;Figure 8: Details for the first completed trace.&lt;/p&gt;&lt;/div&gt; &lt;h2 id="summary"&gt;Summary&lt;/h2&gt; &lt;p&gt;This article has shown how OpenTracing with Jaeger can easily be introduced into an Eclipse Che workspace so you can obtain tracing information from applications during development.&lt;/p&gt; &lt;p&gt;This particular example is simple and only captures tracing from a single service. The benefit offered by Che is enabling complete applications (multiple services) to be used within the same workspace, thus producing more interesting traces and helping developers understand the performance of their developed service in the context of the complete application.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Ftracing-kubernetes-applications-with-jaeger-and-eclipse-che%2F&amp;#38;linkname=Tracing%20Kubernetes%20applications%20with%20Jaeger%20and%20Eclipse%20Che" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Ftracing-kubernetes-applications-with-jaeger-and-eclipse-che%2F&amp;#38;linkname=Tracing%20Kubernetes%20applications%20with%20Jaeger%20and%20Eclipse%20Che" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Ftracing-kubernetes-applications-with-jaeger-and-eclipse-che%2F&amp;#38;linkname=Tracing%20Kubernetes%20applications%20with%20Jaeger%20and%20Eclipse%20Che" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Ftracing-kubernetes-applications-with-jaeger-and-eclipse-che%2F&amp;#38;linkname=Tracing%20Kubernetes%20applications%20with%20Jaeger%20and%20Eclipse%20Che" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Ftracing-kubernetes-applications-with-jaeger-and-eclipse-che%2F&amp;#38;linkname=Tracing%20Kubernetes%20applications%20with%20Jaeger%20and%20Eclipse%20Che" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Ftracing-kubernetes-applications-with-jaeger-and-eclipse-che%2F&amp;#38;linkname=Tracing%20Kubernetes%20applications%20with%20Jaeger%20and%20Eclipse%20Che" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Ftracing-kubernetes-applications-with-jaeger-and-eclipse-che%2F&amp;#38;linkname=Tracing%20Kubernetes%20applications%20with%20Jaeger%20and%20Eclipse%20Che" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F14%2Ftracing-kubernetes-applications-with-jaeger-and-eclipse-che%2F&amp;#038;title=Tracing%20Kubernetes%20applications%20with%20Jaeger%20and%20Eclipse%20Che" data-a2a-url="https://developers.redhat.com/blog/2019/11/14/tracing-kubernetes-applications-with-jaeger-and-eclipse-che/" data-a2a-title="Tracing Kubernetes applications with Jaeger and Eclipse Che"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/14/tracing-kubernetes-applications-with-jaeger-and-eclipse-che/"&gt;Tracing Kubernetes applications with Jaeger and Eclipse Che&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9rwysMdWORY" height="1" width="1" alt=""/&gt;</content><summary>Developing distributed applications is complicated. You can wait to monitor for performance issues once you launch the application on your test or staging servers, or in production if youâre feeling lucky, but why not track performance as you develop? This allows you to identify improvement opportunities before rolling out changes to a test or production environment. This article demonstrates how ...</summary><dc:creator>Gary Brown</dc:creator><dc:date>2019-11-14T08:00:28Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/14/tracing-kubernetes-applications-with-jaeger-and-eclipse-che/</feedburner:origLink></entry><entry><title>Pod Lifecycle Event Generator: Understanding the âPLEG is not healthyâ issue in Kubernetes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/k5tVaV2KsXc/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Daein Park</name></author><id>searchisko:content:id:jbossorg_blog-pod_lifecycle_event_generator_understanding_the_pleg_is_not_healthy_issue_in_kubernetes</id><updated>2019-11-13T08:00:25Z</updated><published>2019-11-13T08:00:25Z</published><content type="html">&lt;p&gt;In this article, I&amp;#8217;ll explore the &amp;#8220;PLEG is not healthy&amp;#8221; issue in &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;, which sometimes leads to a &amp;#8220;NodeNotReady&amp;#8221; status. When understanding how the Pod Lifecycle Event Generator (PLEG) works, it is helpful to also understand troubleshooting around this issue.&lt;/p&gt; &lt;h2&gt;What is PLEG?&lt;/h2&gt; &lt;p&gt;The PLEG module in kubelet (Kubernetes) adjusts the container runtime state with each matched pod-level event and keeps the pod cache up to date by applying changes.&lt;span id="more-645967"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a look at the dotted red line below in the process image.&lt;/p&gt; &lt;p&gt;&lt;img class="alignnone size-full wp-image-645557" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/orig-pleg-1.png" alt="" width="761" height="437" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/orig-pleg-1.png 761w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/orig-pleg-1-300x172.png 300w" sizes="(max-width: 761px) 100vw, 761px" /&gt;&lt;/p&gt; &lt;p&gt;The original image is here: &lt;a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node/pod-lifecycle-event-generator.md"&gt;Kubelet: Pod Lifecycle Event Generator (PLEG)&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;How does &amp;#8220;PLEG is not healthy&amp;#8221; happen?&lt;/h2&gt; &lt;p&gt;Kubelet keeps checking PLEG health by calling &lt;code&gt;Healthy()&lt;/code&gt; periodically in &lt;code&gt;SyncLoop()&lt;/code&gt; as follows.&lt;/p&gt; &lt;p&gt;&lt;code&gt;Healthy()&lt;/code&gt; checks whether the &lt;code&gt;relist&lt;/code&gt; process (the PLEG key task) completes within 3 minutes. This function is added to &lt;code&gt;runtimeState&lt;/code&gt; as &amp;#8220;PLEG&amp;#8221; and is called periodically from &amp;#8220;SyncLoop&amp;#8221;(every 10s by default). If the &amp;#8220;relist&amp;#8221; process take more than 3 minutes, a &amp;#8220;PLEG is not healthy&amp;#8221; issue is reported through this stack process.&lt;/p&gt; &lt;p&gt;I&amp;#8217;ll walk you through the related source code based on Kubernetes 1.11 (OpenShift 3.11) in each part to help your understanding. Don&amp;#8217;t worry if you are not familiar with the Go syntax, as it&amp;#8217;s enough to read the comments in the code.Â  I will also explain the summary before the code and snip less important things from the source code for readability.&lt;/p&gt; &lt;p&gt;&lt;img class="alignnone size-full wp-image-645577" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-healthy-checks.png" alt="" width="682" height="401" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-healthy-checks.png 682w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-healthy-checks-300x176.png 300w" sizes="(max-width: 682px) 100vw, 682px" /&gt;&lt;/p&gt; &lt;pre&gt;//// pkg/kubelet/pleg/generic.go - Healthy() // The threshold needs to be greater than the relisting period + the // relisting time, which can vary significantly. Set a conservative // threshold to avoid flipping between healthy and unhealthy. relistThreshold = 3 * time.Minute : func (g *GenericPLEG) Healthy() (bool, error) { relistTime := g.getRelistTime() elapsed := g.clock.Since(relistTime) if elapsed &amp;#62; relistThreshold { return false, fmt.Errorf("pleg was last seen active %v ago; threshold is %v", elapsed, relistThreshold) } return true, nil } //// pkg/kubelet/kubelet.go - NewMainKubelet() func NewMainKubelet(kubeCfg *kubeletconfiginternal.KubeletConfiguration, ... : klet.runtimeState.addHealthCheck("PLEG", klet.pleg.Healthy) //// pkg/kubelet/kubelet.go - syncLoop() func (kl *Kubelet) syncLoop(updates &amp;#60;-chan kubetypes.PodUpdate, handler SyncHandler) { : // The resyncTicker wakes up kubelet to checks if there are any pod workers // that need to be sync'd. A one-second period is sufficient because the // sync interval is defaulted to 10s. : const ( base = 100 * time.Millisecond max = 5 * time.Second factor = 2 ) duration := base for { if rs := kl.runtimeState.runtimeErrors(); len(rs) != 0 { glog.Infof("skipping pod synchronization - %v", rs) // exponential backoff time.Sleep(duration) duration = time.Duration(math.Min(float64(max), factor*float64(duration))) continue } : } : } //// pkg/kubelet/runtime.go - runtimeErrors() func (s *runtimeState) runtimeErrors() []string { : for _, hc := range s.healthChecks { if ok, err := hc.fn(); !ok { ret = append(ret, fmt.Sprintf("%s is not healthy: %v", hc.name, err)) } } : }&lt;/pre&gt; &lt;h2&gt;Review &amp;#8220;relist&amp;#8221;&lt;/h2&gt; &lt;p&gt;Let&amp;#8217;s look at more details of the &lt;code&gt;relist&lt;/code&gt; function. Specifically, you&amp;#8217;ll want to watch carefully for the remote process calls and check how to process the pull data, because these parts can easily bottleneck.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-645977 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-process.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-process.png" alt="" width="839" height="621" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-process.png 839w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-process-300x222.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-process-768x568.png 768w" sizes="(max-width: 839px) 100vw, 839px" /&gt;&lt;/p&gt; &lt;p&gt;In the above flow chart, you can see the process and implementation of &lt;code&gt;relist&lt;/code&gt;. Refer &lt;a href="https://github.com/openshift/origin/blob/release-3.11/vendor/k8s.io/kubernetes/pkg/kubelet/pleg/generic.go#L180-L284"&gt;here&lt;/a&gt; for full source codes.&lt;/p&gt; &lt;p&gt;Even though &lt;code&gt;relist&lt;/code&gt; is set as calling every 1s, it can take more than 1s to finish. If the container runtime responds slowly and/or when there are many container changes in one cycle. So, the next &lt;code&gt;relist&lt;/code&gt; will call after the previous one is complete. For example, if &lt;code&gt;relist&lt;/code&gt; takes 5s to complete, then next relist time is 6s (1s + 5s).&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-645987 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-start-relist.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-start-relist.png" alt="" width="681" height="371" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-start-relist.png 681w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-start-relist-300x163.png 300w" sizes="(max-width: 681px) 100vw, 681px" /&gt;&lt;/p&gt; &lt;pre&gt;//// pkg/kubelet/kubelet.go - NewMainKubelet() // Generic PLEG relies on relisting for discovering container events. // A longer period means that kubelet will take longer to detect container // changes and to update pod status. On the other hand, a shorter period // will cause more frequent relisting (e.g., container runtime operations), // leading to higher cpu usage. // Note that even though we set the period to 1s, the relisting itself can // take more than 1s to finish if the container runtime responds slowly // and/or when there are many container changes in one cycle. plegRelistPeriod = time.Second * 1 // NewMainKubelet instantiates a new Kubelet object along with all the required internal modules. // No initialization of Kubelet and its modules should happen here. func NewMainKubelet(kubeCfg *kubeletconfiginternal.KubeletConfiguration, ... : klet.pleg = pleg.NewGenericPLEG(klet.containerRuntime, plegChannelCapacity, plegRelistPeriod, klet.podCache, clock.RealClock{}) //// pkg/kubelet/pleg/generic.go - Start() // Start spawns a goroutine to relist periodically. func (g *GenericPLEG) Start() { go wait.Until(g.relist, g.relistPeriod, wait.NeverStop) } //// pkg/kubelet/pleg/generic.go - relist() func (g *GenericPLEG) relist() { ... WE WILL REVIEW HERE ... }&lt;/pre&gt; &lt;p&gt;The function process starts by recording some metrics for Kubelet (such as &lt;code&gt;kubelet_pleg_relist_latency_microseconds&lt;/code&gt;) and then takes all &amp;#8220;Pods&amp;#8221; (including stopped pods) list from the container runtime using the CRI interface for getting the current Pods status. This Pods list is used for comparison with previous pods list to check changes and the matched pod-level events are generated along with the changed states.&lt;/p&gt; &lt;pre&gt;//// pkg/kubelet/pleg/generic.go - relist() : // get a current timestamp timestamp := g.clock.Now() // kubelet_pleg_relist_latency_microseconds for prometheus metrics defer func() { metrics.PLEGRelistLatency.Observe(metrics.SinceInMicroseconds(timestamp)) }() // Get all the pods. podList, err := g.runtime.GetPods(true) :&lt;/pre&gt; &lt;p&gt;The trace &amp;#8220;GetPods()&amp;#8221; call stack details are below.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-645997 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-getpods.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-getpods.png" alt="" width="709" height="561" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-getpods.png 709w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-getpods-300x237.png 300w" sizes="(max-width: 709px) 100vw, 709px" /&gt;&lt;/p&gt; &lt;pre&gt;//// pkg/kubelet/kuberuntime/kuberuntime_manager.go - GetPods() // GetPods returns a list of containers grouped by pods. The boolean parameter // specifies whether the runtime returns all containers including those already // exited and dead containers (used for garbage collection). func (m *kubeGenericRuntimeManager) GetPods(all bool) ([]*kubecontainer.Pod, error) { pods := make(map[kubetypes.UID]*kubecontainer.Pod) sandboxes, err := m.getKubeletSandboxes(all) : } //// pkg/kubelet/kuberuntime/kuberuntime_sandbox.go - getKubeletSandboxes() // getKubeletSandboxes lists all (or just the running) sandboxes managed by kubelet. func (m *kubeGenericRuntimeManager) getKubeletSandboxes(all bool) ([]*runtimeapi.PodSandbox, error) { : resp, err := m.runtimeService.ListPodSandbox(filter) : } //// pkg/kubelet/remote/remote_runtime.go - ListPodSandbox() // ListPodSandbox returns a list of PodSandboxes. func (r *RemoteRuntimeService) ListPodSandbox(filter *runtimeapi.PodSandboxFilter) ([]*runtimeapi.PodSandbox, error) { : resp, err := r.runtimeClient.ListPodSandbox(ctx, &amp;#38;runtimeapi.ListPodSandboxRequest{ : return resp.Items, nil }&lt;/pre&gt; &lt;p&gt;After getting all Pods, the last &lt;code&gt;relist&lt;/code&gt; time is updated as current timestamp. In other words, &lt;code&gt;Healthy()&lt;/code&gt; can be evaluated by using this updated timestamp.&lt;/p&gt; &lt;pre&gt;//// pkg/kubelet/pleg/generic.go - relist() // update as a current timestamp g.updateRelistTime(timestamp)&lt;/pre&gt; &lt;p&gt;As mentioned previously, after comparing current and previous Pods list, every matched pod-level event is generated with the differences/changes between both lists below.&lt;/p&gt; &lt;p&gt;Here &lt;code&gt;generateEvents()&lt;/code&gt; generates matched pod-level events (such as &lt;code&gt;ContainerStarted&lt;/code&gt;, &lt;code&gt;ContainerDied&lt;/code&gt;, and so on), and then the events are updated by &lt;code&gt;updateEvents()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;//// pkg/kubelet/pleg/generic.go - relist() pods := kubecontainer.Pods(podList) g.podRecords.setCurrent(pods) // Compare the old and the current pods, and generate events. eventsByPodID := map[types.UID][]*PodLifecycleEvent{} for pid := range g.podRecords { oldPod := g.podRecords.getOld(pid) pod := g.podRecords.getCurrent(pid) // Get all containers in the old and the new pod. allContainers := getContainersFromPods(oldPod, pod) for _, container := range allContainers { events := computeEvents(oldPod, pod, &amp;#38;container.ID) for _, e := range events { updateEvents(eventsByPodID, e) } } }&lt;/pre&gt; &lt;p&gt;The trace &lt;code&gt;computeEvents()&lt;/code&gt; call stack details are shown below.&lt;/p&gt; &lt;pre&gt;//// pkg/kubelet/pleg/generic.go - computeEvents() func computeEvents(oldPod, newPod *kubecontainer.Pod, cid *kubecontainer.ContainerID) []*PodLifecycleEvent { : return generateEvents(pid, cid.ID, oldState, newState) } //// pkg/kubelet/pleg/generic.go - generateEvents() func generateEvents(podID types.UID, cid string, oldState, newState plegContainerState) []*PodLifecycleEvent { : glog.V(4).Infof("GenericPLEG: %v/%v: %v -&amp;#62; %v", podID, cid, oldState, newState) switch newState { case plegContainerRunning: return []*PodLifecycleEvent{{ID: podID, Type: ContainerStarted, Data: cid}} case plegContainerExited: return []*PodLifecycleEvent{{ID: podID, Type: ContainerDied, Data: cid}} case plegContainerUnknown: return []*PodLifecycleEvent{{ID: podID, Type: ContainerChanged, Data: cid}} case plegContainerNonExistent: switch oldState { case plegContainerExited: // We already reported that the container died before. return []*PodLifecycleEvent{{ID: podID, Type: ContainerRemoved, Data: cid}} default: return []*PodLifecycleEvent{{ID: podID, Type: ContainerDied, Data: cid}, {ID: podID, Type: ContainerRemoved, Data: cid}} } default: panic(fmt.Sprintf("unrecognized container state: %v", newState)) } }&lt;/pre&gt; &lt;p&gt;The last part of the process checks whether there are events associated with a pod, and updates the &lt;code&gt;podCache&lt;/code&gt; as follows.&lt;/p&gt; &lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;updateCache()&lt;/code&gt; will inspect each pod and update it one by one in a single loop, so if many pods changed during the same &lt;code&gt;relist&lt;/code&gt; period, this process can be a bottleneck. Lastly, updated new pod lifecycle events are sent to &lt;code&gt;eventChannel&lt;/code&gt; after updates.&lt;/p&gt; &lt;p&gt;Tracing call stack details are not as important for understanding the process, but some remote clients are called per pod for getting pod inspection information. This may increase latency for proportional to pod numbers, because many pods usually generate many events.&lt;/p&gt; &lt;pre&gt;//// pkg/kubelet/pleg/generic.go - relist() // If there are events associated with a pod, we should update the // podCache. for pid, events := range eventsByPodID { pod := g.podRecords.getCurrent(pid) if g.cacheEnabled() { // updateCache() will inspect the pod and update the cache. If an // error occurs during the inspection, we want PLEG to retry again // in the next relist. To achieve this, we do not update the // associated podRecord of the pod, so that the change will be // detect again in the next relist. // TODO: If many pods changed during the same relist period, // inspecting the pod and getting the PodStatus to update the cache // serially may take a while. We should be aware of this and // parallelize if needed. if err := g.updateCache(pod, pid); err != nil { glog.Errorf("PLEG: Ignoring events for pod %s/%s: %v", pod.Name, pod.Namespace, err) : } : } // Update the internal storage and send out the events. g.podRecords.update(pid) for i := range events { // Filter out events that are not reliable and no other components use yet. if events[i].Type == ContainerChanged { continue } g.eventChannel &amp;#60;- events[i] } }&lt;/pre&gt; &lt;p&gt;The trace &lt;code&gt;updateCache()&lt;/code&gt; call stack details are below. Multiple remote requests are called by &lt;code&gt;GetPodStatus()&lt;/code&gt; for pod inspection.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-646007 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-updatecache.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-updatecache.png" alt="" width="709" height="711" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-updatecache.png 709w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-updatecache-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-updatecache-300x300.png 300w" sizes="(max-width: 709px) 100vw, 709px" /&gt;&lt;/p&gt; &lt;pre&gt;//// pkg/kubelet/pleg/generic.go - updateCache() func (g *GenericPLEG) updateCache(pod *kubecontainer.Pod, pid types.UID) error { : timestamp := g.clock.Now() // TODO: Consider adding a new runtime method // GetPodStatus(pod *kubecontainer.Pod) so that Docker can avoid listing // all containers again. status, err := g.runtime.GetPodStatus(pod.ID, pod.Name, pod.Namespace) : g.cache.Set(pod.ID, status, err, timestamp) return err } //// pkg/kubelet/kuberuntime/kuberuntime_manager.go - GetPodStatus() // GetPodStatus retrieves the status of the pod, including the // information of all containers in the pod that are visible in Runtime. func (m *kubeGenericRuntimeManager) GetPodStatus(uid kubetypes.UID, name, namespace string) (*kubecontainer.PodStatus, error) { podSandboxIDs, err := m.getSandboxIDByPodUID(uid, nil) : for idx, podSandboxID := range podSandboxIDs { podSandboxStatus, err := m.runtimeService.PodSandboxStatus(podSandboxID) : } // Get statuses of all containers visible in the pod. containerStatuses, err := m.getPodContainerStatuses(uid, name, namespace) : } //// pkg/kubelet/kuberuntime/kuberuntime_sandbox.go - getSandboxIDByPodUID() // getPodSandboxID gets the sandbox id by podUID and returns ([]sandboxID, error). // Param state could be nil in order to get all sandboxes belonging to same pod. func (m *kubeGenericRuntimeManager) getSandboxIDByPodUID(podUID kubetypes.UID, state *runtimeapi.PodSandboxState) ([]string, error) { : sandboxes, err := m.runtimeService.ListPodSandbox(filter) : return sandboxIDs, nil } //// pkg/kubelet/remote/remote_runtime.go - PodSandboxStatus() // PodSandboxStatus returns the status of the PodSandbox. func (r *RemoteRuntimeService) PodSandboxStatus(podSandBoxID string) (*runtimeapi.PodSandboxStatus, error) { ctx, cancel := getContextWithTimeout(r.timeout) defer cancel() resp, err := r.runtimeClient.PodSandboxStatus(ctx, &amp;#38;runtimeapi.PodSandboxStatusRequest{ PodSandboxId: podSandBoxID, }) : return resp.Status, nil } //// pkg/kubelet/kuberuntime/kuberuntime_container.go - getPodContainerStatuses() // getPodContainerStatuses gets all containers' statuses for the pod. func (m *kubeGenericRuntimeManager) getPodContainerStatuses(uid kubetypes.UID, name, namespace string) ([]*kubecontainer.ContainerStatus, error) { // Select all containers of the given pod. containers, err := m.runtimeService.ListContainers(&amp;#38;runtimeapi.ContainerFilter{ LabelSelector: map[string]string{types.KubernetesPodUIDLabel: string(uid)}, }) : // TODO: optimization: set maximum number of containers per container name to examine. for i, c := range containers { status, err := m.runtimeService.ContainerStatus(c.Id) : } : return statuses, nil }&lt;/pre&gt; &lt;p&gt;We have taken a look at the &lt;code&gt;relist&lt;/code&gt; process through related source code and called stack trace. I hope this gives you more details about PLEG and how to update the required data in the process.&lt;/p&gt; &lt;h2&gt;Monitoring &amp;#8220;relist&amp;#8221;&lt;/h2&gt; &lt;p&gt;We can monitor the &lt;code&gt;relist&lt;/code&gt; latency using kubelet metrics. The &lt;code&gt;relist&lt;/code&gt; period is 1 second, in other words relist complete time (kubelet_pleg_relist_latency_microseconds) + 1 second is &lt;code&gt;kubelet_pleg_relist_interval_microseconds&lt;/code&gt;. Additionally, you can monitor how long each operation will take in container runtime. These metrics are also helpful to troubleshoot.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-646097 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-kubelet-metrics-table-1024x621.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-kubelet-metrics-table.png" alt="" width="1735" height="1053" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-kubelet-metrics-table.png 1735w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-kubelet-metrics-table-300x182.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-kubelet-metrics-table-768x466.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-kubelet-metrics-table-1024x621.png 1024w" sizes="(max-width: 1735px) 100vw, 1735px" /&gt;&lt;/p&gt; &lt;p&gt;You can take the metrics using &lt;code&gt;https://127.0.0.1:10250/metrics&lt;/code&gt; on the node host.&lt;/p&gt; &lt;pre&gt;# HELP kubelet_pleg_relist_interval_microseconds Interval in microseconds between relisting in PLEG. # TYPE kubelet_pleg_relist_interval_microseconds summary kubelet_pleg_relist_interval_microseconds{quantile="0.5"} 1.054052e+06 kubelet_pleg_relist_interval_microseconds{quantile="0.9"} 1.074873e+06 kubelet_pleg_relist_interval_microseconds{quantile="0.99"} 1.126039e+06 kubelet_pleg_relist_interval_microseconds_count 5146 # HELP kubelet_pleg_relist_latency_microseconds Latency in microseconds for relisting pods in PLEG. # TYPE kubelet_pleg_relist_latency_microseconds summary kubelet_pleg_relist_latency_microseconds{quantile="0.5"} 53438 kubelet_pleg_relist_latency_microseconds{quantile="0.9"} 74396 kubelet_pleg_relist_latency_microseconds{quantile="0.99"} 115232 kubelet_pleg_relist_latency_microseconds_count 5106 # HELP kubelet_runtime_operations Cumulative number of runtime operations by operation type. # TYPE kubelet_runtime_operations counter kubelet_runtime_operations{operation_type="container_status"} 472 kubelet_runtime_operations{operation_type="create_container"} 93 kubelet_runtime_operations{operation_type="exec"} 1 kubelet_runtime_operations{operation_type="exec_sync"} 533 kubelet_runtime_operations{operation_type="image_status"} 579 kubelet_runtime_operations{operation_type="list_containers"} 10249 kubelet_runtime_operations{operation_type="list_images"} 782 kubelet_runtime_operations{operation_type="list_podsandbox"} 10154 kubelet_runtime_operations{operation_type="podsandbox_status"} 315 kubelet_runtime_operations{operation_type="pull_image"} 57 kubelet_runtime_operations{operation_type="remove_container"} 49 kubelet_runtime_operations{operation_type="run_podsandbox"} 28 kubelet_runtime_operations{operation_type="start_container"} 93 kubelet_runtime_operations{operation_type="status"} 1116 kubelet_runtime_operations{operation_type="stop_container"} 9 kubelet_runtime_operations{operation_type="stop_podsandbox"} 33 kubelet_runtime_operations{operation_type="version"} 564 # HELP kubelet_runtime_operations_latency_microseconds Latency in microseconds of runtime operations. Broken down by operation type. # TYPE kubelet_runtime_operations_latency_microseconds summary kubelet_runtime_operations_latency_microseconds{operation_type="container_status",quantile="0.5"} 12117 kubelet_runtime_operations_latency_microseconds{operation_type="container_status",quantile="0.9"} 26607 kubelet_runtime_operations_latency_microseconds{operation_type="container_status",quantile="0.99"} 27598 kubelet_runtime_operations_latency_microseconds_count{operation_type="container_status"} 486 kubelet_runtime_operations_latency_microseconds{operation_type="list_containers",quantile="0.5"} 29972 kubelet_runtime_operations_latency_microseconds{operation_type="list_containers",quantile="0.9"} 47907 kubelet_runtime_operations_latency_microseconds{operation_type="list_containers",quantile="0.99"} 80982 kubelet_runtime_operations_latency_microseconds_count{operation_type="list_containers"} 10812 kubelet_runtime_operations_latency_microseconds{operation_type="list_podsandbox",quantile="0.5"} 18053 kubelet_runtime_operations_latency_microseconds{operation_type="list_podsandbox",quantile="0.9"} 28116 kubelet_runtime_operations_latency_microseconds{operation_type="list_podsandbox",quantile="0.99"} 68748 kubelet_runtime_operations_latency_microseconds_count{operation_type="list_podsandbox"} 10712 kubelet_runtime_operations_latency_microseconds{operation_type="podsandbox_status",quantile="0.5"} 4918 kubelet_runtime_operations_latency_microseconds{operation_type="podsandbox_status",quantile="0.9"} 15671 kubelet_runtime_operations_latency_microseconds{operation_type="podsandbox_status",quantile="0.99"} 18398 kubelet_runtime_operations_latency_microseconds_count{operation_type="podsandbox_status"} 323 :&lt;/pre&gt; &lt;p&gt;The above metrics can monitor using Prometheus by default on Red Hat OpenShift.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-646017 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-prometheus-metrics-1024x483.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-prometheus-metrics.png" alt="" width="2037" height="961" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-prometheus-metrics.png 2037w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-prometheus-metrics-300x142.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-prometheus-metrics-768x362.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pleg-prometheus-metrics-1024x483.png 1024w" sizes="(max-width: 2037px) 100vw, 2037px" /&gt;&lt;/p&gt; &lt;h2&gt;Conclusions&lt;/h2&gt; &lt;p&gt;In my experience, &amp;#8220;PLEG is not healthy&amp;#8221; can happen due to various causes, and I believe there are many potential causes we have not run into yet. I&amp;#8217;d like to introduce the following causes for your additional information.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Container runtime latency or timeout (performance degradation, deadlock, bugs&amp;#8230;) during remote requests.&lt;/li&gt; &lt;li&gt;Too many running pods for host resources or too many running pods on high-spec hosts to complete the relist within 3 min. As seen in this article, events and latency are proportional to the pod numbers regardless of host resources.&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/kubernetes/kubernetes/issues/72482"&gt;Deadlock in PLEG relist&lt;/a&gt; has been fixed as of Kubernetes 1.14 (OpenShift 4.2).&lt;/li&gt; &lt;li&gt;CNI bugs when getting a pod network status.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;References&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node/pod-lifecycle-event-generator.md"&gt;Kubelet: Pod Lifecycle Event Generator (PLEG)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node/runtime-pod-cache.md"&gt;Kubelet: Runtime Pod Cache&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/openshift/origin/blob/release-3.11/vendor/k8s.io/kubernetes/pkg/kubelet/pleg/generic.go#L180-L284"&gt;relist() in kubernetes/pkg/kubelet/pleg/generic.go&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Past bug about CNI â &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1486914#c16"&gt;PLEG is not healthy error, node marked NotReady&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F13%2Fpod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes%2F&amp;#38;linkname=Pod%20Lifecycle%20Event%20Generator%3A%20Understanding%20the%20%E2%80%9CPLEG%20is%20not%20healthy%E2%80%9D%20issue%20in%20Kubernetes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F13%2Fpod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes%2F&amp;#38;linkname=Pod%20Lifecycle%20Event%20Generator%3A%20Understanding%20the%20%E2%80%9CPLEG%20is%20not%20healthy%E2%80%9D%20issue%20in%20Kubernetes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F13%2Fpod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes%2F&amp;#38;linkname=Pod%20Lifecycle%20Event%20Generator%3A%20Understanding%20the%20%E2%80%9CPLEG%20is%20not%20healthy%E2%80%9D%20issue%20in%20Kubernetes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F13%2Fpod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes%2F&amp;#38;linkname=Pod%20Lifecycle%20Event%20Generator%3A%20Understanding%20the%20%E2%80%9CPLEG%20is%20not%20healthy%E2%80%9D%20issue%20in%20Kubernetes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F13%2Fpod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes%2F&amp;#38;linkname=Pod%20Lifecycle%20Event%20Generator%3A%20Understanding%20the%20%E2%80%9CPLEG%20is%20not%20healthy%E2%80%9D%20issue%20in%20Kubernetes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F13%2Fpod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes%2F&amp;#38;linkname=Pod%20Lifecycle%20Event%20Generator%3A%20Understanding%20the%20%E2%80%9CPLEG%20is%20not%20healthy%E2%80%9D%20issue%20in%20Kubernetes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F13%2Fpod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes%2F&amp;#38;linkname=Pod%20Lifecycle%20Event%20Generator%3A%20Understanding%20the%20%E2%80%9CPLEG%20is%20not%20healthy%E2%80%9D%20issue%20in%20Kubernetes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F13%2Fpod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes%2F&amp;#038;title=Pod%20Lifecycle%20Event%20Generator%3A%20Understanding%20the%20%E2%80%9CPLEG%20is%20not%20healthy%E2%80%9D%20issue%20in%20Kubernetes" data-a2a-url="https://developers.redhat.com/blog/2019/11/13/pod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes/" data-a2a-title="Pod Lifecycle Event Generator: Understanding the âPLEG is not healthyâ issue in Kubernetes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/13/pod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes/"&gt;Pod Lifecycle Event Generator: Understanding the &amp;#8220;PLEG is not healthy&amp;#8221; issue in Kubernetes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/k5tVaV2KsXc" height="1" width="1" alt=""/&gt;</content><summary>In this article, Iâll explore the âPLEG is not healthyâ issue in Kubernetes, which sometimes leads to a âNodeNotReadyâ status. When understanding how the Pod Lifecycle Event Generator (PLEG) works, it is helpful to also understand troubleshooting around this issue. What is PLEG? The PLEG module in kubelet (Kubernetes) adjusts the container runtime state with each matched pod-level event and keeps ...</summary><dc:creator>Daein Park</dc:creator><dc:date>2019-11-13T08:00:25Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/13/pod-lifecycle-event-generator-understanding-the-pleg-is-not-healthy-issue-in-kubernetes/</feedburner:origLink></entry><entry><title>Plumbing Kubernetes CI/CD with Tekton</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/oRwtfcN3pNI/" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="DevNation Live" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Tekton" scheme="searchisko:content:tags" /><author><name>Editorial Team</name></author><id>searchisko:content:id:jbossorg_blog-plumbing_kubernetes_ci_cd_with_tekton</id><updated>2019-11-12T08:00:31Z</updated><published>2019-11-12T08:00:31Z</published><content type="html">&lt;p&gt;Our first &lt;a href="https://developers.redhat.com/devnationlive-india/"&gt;DevNation Live regional event was held in Bengaluru, India&lt;/a&gt; in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists.&lt;/p&gt; &lt;p&gt;In this session, &lt;a href="https://developers.redhat.com/blog/author/kameshsampath/"&gt;Kamesh Sampath&lt;/a&gt; introduces &lt;a href="https://developers.redhat.com/blog/2019/07/19/getting-started-with-tekton-on-red-hat-openshift/"&gt;Tekton&lt;/a&gt;, which is the &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;-native way of defining and running &lt;a href="https://developers.redhat.com/blog/2019/07/22/how-to-build-cloud-native-ci-cd-pipelines-with-tekton-on-kubernetes/"&gt;CI/CD&lt;/a&gt;. Sampath explores the characteristics of Tektonâcloud-native, decoupled, and declarativeâand shows how to combine various building blocks of Tekton to build and deploy a cloud-native application.&lt;span id="more-624737"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;br /&gt; &lt;iframe src="https://www.youtube.com/embed/5zwW6DHCWFc" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;Learn more&lt;/h3&gt; &lt;p&gt;Join us at an upcoming&lt;a href="https://developers.redhat.com/events/"&gt; developer event&lt;/a&gt;, and see our collection of&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; past DevNation Live tech talks&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To hear more from Red Hat experts,Â &lt;a href="https://redhat-events.com/devnation_austin2019/?sc_cid=7013a000002D5uHAAS" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://redhat-events.com/devnation_austin2019/?sc_cid%3D7013a000002D5uHAAS&amp;#38;source=gmail&amp;#38;ust=1572807311274000&amp;#38;usg=AFQjCNHByfT8tiI-TLiXXHEc42cSc9c0HQ"&gt;join us in Austin on December 12, 2019&lt;/a&gt;Â for a free, one-day, two-track DevNation Live event and get hands-on experience with Kubernetes, Quarkus, and more.Â &lt;strong&gt;&lt;a href="https://redhat-events.com/devnation_austin2019/?sc_cid=7013a000002D5uHAAS" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://redhat-events.com/devnation_austin2019/?sc_cid%3D7013a000002D5uHAAS&amp;#38;source=gmail&amp;#38;ust=1572807311274000&amp;#38;usg=AFQjCNHByfT8tiI-TLiXXHEc42cSc9c0HQ"&gt;Register now&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fplumbing-kubernetes-ci-cd-with-tekton%2F&amp;#38;linkname=Plumbing%20Kubernetes%20CI%2FCD%20with%20Tekton" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fplumbing-kubernetes-ci-cd-with-tekton%2F&amp;#38;linkname=Plumbing%20Kubernetes%20CI%2FCD%20with%20Tekton" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fplumbing-kubernetes-ci-cd-with-tekton%2F&amp;#38;linkname=Plumbing%20Kubernetes%20CI%2FCD%20with%20Tekton" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fplumbing-kubernetes-ci-cd-with-tekton%2F&amp;#38;linkname=Plumbing%20Kubernetes%20CI%2FCD%20with%20Tekton" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fplumbing-kubernetes-ci-cd-with-tekton%2F&amp;#38;linkname=Plumbing%20Kubernetes%20CI%2FCD%20with%20Tekton" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fplumbing-kubernetes-ci-cd-with-tekton%2F&amp;#38;linkname=Plumbing%20Kubernetes%20CI%2FCD%20with%20Tekton" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fplumbing-kubernetes-ci-cd-with-tekton%2F&amp;#38;linkname=Plumbing%20Kubernetes%20CI%2FCD%20with%20Tekton" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fplumbing-kubernetes-ci-cd-with-tekton%2F&amp;#038;title=Plumbing%20Kubernetes%20CI%2FCD%20with%20Tekton" data-a2a-url="https://developers.redhat.com/blog/2019/11/12/plumbing-kubernetes-ci-cd-with-tekton/" data-a2a-title="Plumbing Kubernetes CI/CD with Tekton"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/12/plumbing-kubernetes-ci-cd-with-tekton/"&gt;Plumbing Kubernetes CI/CD with Tekton&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/oRwtfcN3pNI" height="1" width="1" alt=""/&gt;</content><summary>Our first DevNation Live regional event was held in Bengaluru, India in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists. In this session, Kamesh Sampath introduces Tekton, which is the Kubernetes-native way of defining and running CI/CD. Sampath explores the characteristics of Tektonâcloud-native, decoupled, and declarativ...</summary><dc:creator>Editorial Team</dc:creator><dc:date>2019-11-12T08:00:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/12/plumbing-kubernetes-ci-cd-with-tekton/</feedburner:origLink></entry><entry><title>Using the Red Hat OpenShift tuned Operator for Elasticsearch</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Hjf_SUgMV70/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Storafe" scheme="searchisko:content:tags" /><author><name>Rarm Nagalingam</name></author><id>searchisko:content:id:jbossorg_blog-using_the_red_hat_openshift_tuned_operator_for_elasticsearch</id><updated>2019-11-12T08:00:10Z</updated><published>2019-11-12T08:00:10Z</published><content type="html">&lt;p&gt;I recently assisted a client to deploy Elastic Cloud on Kubernetes (ECK) on &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift 4.x&lt;/a&gt;. They had run into an issue where Elasticsearch would throw an error similar to:&lt;/p&gt; &lt;pre&gt;Max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]&lt;/pre&gt; &lt;p&gt;According to the official documentation, &lt;a href="https://www.elastic.co/guide/en/cloud-on-k8s/current/index.html"&gt;Elasticsearch&lt;/a&gt; uses a &lt;code&gt;mmapfs&lt;/code&gt; directory by default to store its indices. The default operating system limits on mmap counts are likely to be too low, which may result in out of memory exceptions. Usually, administrators would just increase the limits by running:&lt;/p&gt; &lt;pre&gt;sysctl -w vm.max_map_count=262144&lt;/pre&gt; &lt;p&gt;However, OpenShift uses &lt;a href="https://www.openshift.com/learn/coreos/"&gt;Red Hat CoreOS&lt;/a&gt; for its worker nodes and, because it is an automatically updating, minimal operating system for running containerized workloads, you shouldn&amp;#8217;t manually log on to worker nodes and make changes. This approach is unscalable and results in a worker node becoming tainted. Instead, OpenShift provides an elegant and scalable method to achieve the same via its &lt;a href="https://docs.openshift.com/container-platform/4.2/nodes/nodes/nodes-node-tuning-operator.html"&gt;Node Tuning Operator&lt;/a&gt;.&lt;span id="more-645287"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The default tuned configuration contains a profile for Elasticsearch. The tuned operator on a given node looks for a pod running on the same node with the tuned.openshift.io/elasticsearch label set (match). If found, it applies the &lt;code&gt;sysctl&lt;/code&gt; command (data).&lt;/p&gt; &lt;p&gt;You can view the default configuration by logging into your OpenShift cluster and running:&lt;/p&gt; &lt;pre&gt;bastion $ oc get Tuned/default -o yaml -n openshift-cluster-node-tuning-operator apiVersion: tuned.openshift.io/v1alpha1 kind: Tuned metadata: name: default namespace: openshift-cluster-node-tuning-operator spec: profile: ... ... - name: "openshift-node-es" data: | [main] summary=Optimize systems running ES on OpenShift nodes include=openshift-node [sysctl] vm.max_map_count=262144 recommend: ... ... - profile: "openshift-node-es" priority: 20 match: - label: "tuned.openshift.io/elasticsearch" type: "pod" ``` &lt;/pre&gt; &lt;p&gt;The trick is to ensure that the Elasticsearch operator tags its pods with the label: &lt;code&gt;tuned.openshift.io/elasticsearch&lt;/code&gt;. Below is an example of how to achieve this.&lt;/p&gt; &lt;pre&gt;--- apiVersion: elasticsearch.k8s.elastic.co/v1alpha1 kind: Elasticsearch metadata: name: elasticsearch-tst spec: version: "7.2.0" setVmMaxMapCount: false nodes: - config: node.master: true node.data: true nodeCount: 1 podTemplate: metadata: labels: tuned.openshift.io/elasticsearch: "" &lt;/pre&gt; &lt;p&gt;The tuned operator will read the pod label &lt;code&gt;tuned.openshift.io/elasticsearch&lt;/code&gt; and add the &lt;code&gt;vm.max_map_count=262144&lt;/code&gt; to the node running the pod. This is useful because pods can be terminated and scheduled on different nodes across the cluster. No more manually worrying about the sysctl configuration of the nodes running a particular workload.&lt;/p&gt; &lt;p&gt;Thanks to James Ryles for helping solve this problem.&lt;/p&gt; &lt;p&gt;Let me know if you run into any issues.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fusing-the-red-hat-openshift-tuned-operator-for-elasticsearch%2F&amp;#38;linkname=Using%20the%20Red%20Hat%20OpenShift%20tuned%20Operator%20for%20Elasticsearch" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fusing-the-red-hat-openshift-tuned-operator-for-elasticsearch%2F&amp;#38;linkname=Using%20the%20Red%20Hat%20OpenShift%20tuned%20Operator%20for%20Elasticsearch" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fusing-the-red-hat-openshift-tuned-operator-for-elasticsearch%2F&amp;#38;linkname=Using%20the%20Red%20Hat%20OpenShift%20tuned%20Operator%20for%20Elasticsearch" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fusing-the-red-hat-openshift-tuned-operator-for-elasticsearch%2F&amp;#38;linkname=Using%20the%20Red%20Hat%20OpenShift%20tuned%20Operator%20for%20Elasticsearch" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fusing-the-red-hat-openshift-tuned-operator-for-elasticsearch%2F&amp;#38;linkname=Using%20the%20Red%20Hat%20OpenShift%20tuned%20Operator%20for%20Elasticsearch" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fusing-the-red-hat-openshift-tuned-operator-for-elasticsearch%2F&amp;#38;linkname=Using%20the%20Red%20Hat%20OpenShift%20tuned%20Operator%20for%20Elasticsearch" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fusing-the-red-hat-openshift-tuned-operator-for-elasticsearch%2F&amp;#38;linkname=Using%20the%20Red%20Hat%20OpenShift%20tuned%20Operator%20for%20Elasticsearch" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F12%2Fusing-the-red-hat-openshift-tuned-operator-for-elasticsearch%2F&amp;#038;title=Using%20the%20Red%20Hat%20OpenShift%20tuned%20Operator%20for%20Elasticsearch" data-a2a-url="https://developers.redhat.com/blog/2019/11/12/using-the-red-hat-openshift-tuned-operator-for-elasticsearch/" data-a2a-title="Using the Red Hat OpenShift tuned Operator for Elasticsearch"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/12/using-the-red-hat-openshift-tuned-operator-for-elasticsearch/"&gt;Using the Red Hat OpenShift tuned Operator for Elasticsearch&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Hjf_SUgMV70" height="1" width="1" alt=""/&gt;</content><summary>I recently assisted a client to deploy Elastic Cloud on Kubernetes (ECK) on Red Hat OpenShift 4.x. They had run into an issue where Elasticsearch would throw an error similar to: Max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144] According to the official documentation, Elasticsearch uses a mmapfs directory by default to store its indices. The default o...</summary><dc:creator>Rarm Nagalingam</dc:creator><dc:date>2019-11-12T08:00:10Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/12/using-the-red-hat-openshift-tuned-operator-for-elasticsearch/</feedburner:origLink></entry><entry><title>Autoscaling Red Hat Fuse applications with OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Ix1c52tseag/" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><category term="Spring Boot" scheme="searchisko:content:tags" /><author><name>Chandra Shekhar Pandey</name></author><id>searchisko:content:id:jbossorg_blog-autoscaling_red_hat_fuse_applications_with_openshift</id><updated>2019-11-11T08:00:07Z</updated><published>2019-11-11T08:00:07Z</published><content type="html">&lt;p&gt;In this article, we demonstrate &lt;a href="http://developers.redhat.com/openshift/" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift&amp;#8217;s&lt;/a&gt; horizontal autoscaling feature with &lt;a href="https://developers.redhat.com/products/fuse/overview"&gt;Red Hat Fuse&lt;/a&gt; applications. The result is a Spring Boot-based application that uses the Apache Camel component &lt;a href="https://camel.apache.org/components/2.x/twitter-search-component.html" target="_blank" rel="noopener noreferrer"&gt;&lt;code&gt;twitter-search&lt;/code&gt;&lt;/a&gt; that searches Twitter for tweets based on specific keywords. If traffic or the number of tweets increases, and this application cannot serve all requests, then the application autoscales itself by increasing the number of pods. The ability to serve all requests is monitored by tracking this application&amp;#8217;s CPU utilization on a particular pod. Also, as soon as traffic or CPU utilization is back to normal, the number of pods is reduced to the minimum configured value.&lt;/p&gt; &lt;p&gt;There are two types of scaling: &lt;em&gt;horizontal&lt;/em&gt; and &lt;em&gt;vertical&lt;/em&gt;. Horizontal scaling is where the number of application instances or containers is increased. Vertical scaling is where system resources like CPU and memory are increased at the running application&amp;#8217;s or container&amp;#8217;s runtime. Horizontal scaling can be used for &lt;em&gt;stateless&lt;/em&gt; applications, whereas vertical scaling is more suitable for &lt;em&gt;stateful&lt;/em&gt; applications.&lt;span id="more-644747"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Autoscaling is useful when applications are deployed in a cloud environment from any of the cloud vendors, where users have to pay for resources like CPU and memory.Â It may happen that traffic is heavier on weekends or particular weekdays, or even for a few hours on a specific day, so having a static setup might cost more and not fully utilize system resources. Having a dynamic environment where applications can scale themselves reduces overall cost.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For demonstration and proof-of-concept purposes, we are using Red Hat OpenShift 3.11 and Red Hat Fuse 7.4. Our aim is to display one of the OpenShift features (autoscaling), which is not available with traditional applications.&lt;/p&gt; &lt;h3&gt;Prerequisites&lt;/h3&gt; &lt;p&gt;Follow the instructions in the official &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_fuse/7.4/html/fuse_on_openshift_guide/get-started-admin#configure-container-registry" target="_blank" rel="noopener noreferrer"&gt;Red Hat Fuse documentation&lt;/a&gt; to set up Red Hat Fuse 7.4 on OpenShift.Â OpenShift should automatically increase or decrease the scale of a replication controller, or deployment configuration, based on metrics collected from the pods. To collect these CPU and memory metrics from your pods, theÂ &lt;code&gt;metrics&lt;/code&gt; server has to be installed on yourÂ OpenShift server to capture CPU and memory metrics from pods.Â Check out the &lt;a href="https://docs.openshift.com/container-platform/3.11/dev_guide/pod_autoscaling.html" target="_blank" rel="noopener noreferrer"&gt;Pod Autoscaling guide&lt;/a&gt; for how to do this using Ansible.&lt;/p&gt; &lt;h2&gt;Create the application&lt;/h2&gt; &lt;p&gt;The code for this demonstration is available inÂ &lt;a href="https://github.com/1984shekhar/camel-twitter-shift" target="_blank" rel="noopener noreferrer"&gt;my personal GitHub repository&lt;/a&gt;. Start by deploying this code to your OpenShift environmentÂ using the source-to-image (S2I) approach. First, select an application template from the OpenShift catalog. I selected Red Hat Fuse 7.4 Camel with Spring Boot, shown in Figure 1:&lt;/p&gt; &lt;div id="attachment_644947" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644947" class="wp-image-644947 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/6_Catalog_Fuse-1024x447.png" alt="The OpenShift catalog with an application template selected." width="640" height="279" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/6_Catalog_Fuse-1024x447.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/6_Catalog_Fuse-300x131.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/6_Catalog_Fuse-768x335.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644947" class="wp-caption-text"&gt;&lt;em&gt;Figure 1: The OpenShift catalog with an application template selected.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, point the Git Repository URL to the GitHub repository&amp;#8217;s link. In our case, this &lt;code&gt;camel-twitter-shift&lt;/code&gt; component searches tweets with the keywords &lt;code&gt;imcdemo,&lt;/code&gt;Â &lt;code&gt;RED_HAT_APAC&lt;/code&gt;, or &lt;code&gt;RedHatTelco&lt;/code&gt;. This component will poll Twitter for two minutes, which is configured with the &lt;code&gt;delay&lt;/code&gt; property and other properties that are user-specific.&lt;/p&gt; &lt;p&gt;Now, point Git Reference to the branch containing the actual code. I set it to &lt;code&gt;master&lt;/code&gt;, as you can see in Figure 2:&lt;/p&gt; &lt;div id="attachment_644957" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644957" class="wp-image-644957 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/7_s2i_github_hook-1024x471.png" alt="Configuring the selected application template." width="640" height="294" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/7_s2i_github_hook-1024x471.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/7_s2i_github_hook-300x138.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/7_s2i_github_hook-768x353.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644957" class="wp-caption-text"&gt;&lt;em&gt;Figure 2: Configuring the selected application template.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;To get your &lt;code&gt;consumerKey&lt;/code&gt;, &lt;code&gt;consumerSecret&lt;/code&gt;, &lt;code&gt;accessToken&lt;/code&gt;, and &lt;code&gt;accessTokenSecret,&lt;/code&gt;Â register for the Standard API (which is free, though there are limitations) through theÂ &lt;a href="https://developer.twitter.com/en/docs/basics/getting-started" target="_blank" rel="noopener noreferrer"&gt;Twitter developer platform&lt;/a&gt;.Â After consuming tweets for keywords, we then log them to the console with theÂ Camel log component:&lt;/p&gt; &lt;pre&gt;&amp;#60;route id="twitter-search"&amp;#62; &amp;#60;from id="route-search" uri="twitter-search://imcdemo OR RED_HAT_APAC OR RedHatTelco?type=polling&amp;#38;amp;delay=120000&amp;#38;amp;consumerKey=dF&amp;#38;amp;consumerSecret=Ay&amp;#38;amp;accessToken=7d&amp;#38;amp;accessTokenSecret=9K"/&amp;#62; &amp;#60;log id="route-log-search" message="&amp;#62;&amp;#62;&amp;#62; ${body}"/&amp;#62; &amp;#60;/route&amp;#62; &lt;/pre&gt; &lt;h2&gt;Set up horizontal autoscaling&lt;/h2&gt; &lt;p&gt;We can set autoscaling for theÂ &lt;code&gt;fuse74-camel-twitter&lt;/code&gt; deployment config with the following command. Note that &lt;code&gt;cpu-percent&lt;/code&gt; is set to 10, which means that as soon as CPU utilization is more than 10% for the pod, the application will scale new pods, with the maximum number of pods being five:&lt;/p&gt; &lt;pre&gt;cpandey@cpandey camel-twitter-shift]$ oc autoscale dc/fuse74-camel-twitter --min 1 --max 5 --cpu-percent=10 horizontalpodautoscaler.autoscaling/fuse74-camel-twitter autoscaled &lt;/pre&gt; &lt;p&gt;In Figure 3, the first red arrow points to the minimum and the maximum number of configured pods. The second arrow is the route with which we can access a pod from an external HTTP-based service or application. This setup is just to send HTTP traffic to the pod:&lt;/p&gt; &lt;div id="attachment_644937" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644937" class="wp-image-644937 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/1_Standard_GUI_view-1024x481.png" alt="Setting up autoscaling." width="640" height="301" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/1_Standard_GUI_view-1024x481.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/1_Standard_GUI_view-300x141.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/1_Standard_GUI_view-768x361.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644937" class="wp-caption-text"&gt;&lt;em&gt;Figure 3: Setting up autoscaling.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, let&amp;#8217;s get information from the horizontal pod autoscaler (HPA):&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey camel-twitter-shift]$ oc get hpa NAME REFERENCE TARGETS MINPODS MAXPODS REPLICAS AGE fuse74-camel-twitter DeploymentConfig/fuse74-camel-twitter 10% 1 5 0 4s&lt;/pre&gt; &lt;p&gt;We can check OpenShift&amp;#8217;s GUI for the number of pods, as shown in Figure 4:&lt;/p&gt; &lt;div id="attachment_644997" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644997" class="wp-image-644997 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view-1024x583.png" alt="The number of pods as shown in the OpenShift GUI." width="640" height="364" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view-1024x583.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view-300x171.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view-768x438.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/2_Standard_CLI_view.png 1469w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644997" class="wp-caption-text"&gt;&lt;em&gt;Figure 4: The number of pods as shown in the OpenShift GUI.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;However, I find the command line to be more informative, as at runtime it provides CPU utilization and the number of active pods:&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey camel-twitter-shift]$ watch 'oc describe hpa fuse74-camel-twitter'&lt;/pre&gt; &lt;p&gt;You can find more on this command in theÂ &lt;a href="https://docs.openshift.com/container-platform/3.11/dev_guide/pod_autoscaling.html" target="_blank" rel="noopener noreferrer"&gt;OpenShiftÂ Pod Autoscaling docs&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Simulate traffic to the application&lt;/h2&gt; &lt;p&gt;To simulate traffic so that we can demonstrate theÂ OpenShift autoscaler feature, there is another route that accepts HTTP requests.Â This route usesÂ Camel&amp;#8217;s undertow &lt;code&gt;component&lt;/code&gt;, which starts the &lt;code&gt;undertow&lt;/code&gt; web container. This container listens on port 9956:&lt;/p&gt; &lt;pre&gt;&amp;#60;route id="load-route"&amp;#62; &amp;#60;from id="_from1" uri="undertow:http://0.0.0.0:9956/undertowTest"/&amp;#62; &amp;#60;convertBodyTo id="_convertBodyTo1" type="java.lang.String"/&amp;#62; &amp;#60;log id="_log1" loggingLevel="INFO" message="\n REQUEST RECEIVED :\n Headers: ${headers}\n Body: ${body} \n"/&amp;#62; &amp;#60;setBody id="_setBody1"&amp;#62; &amp;#60;constant&amp;#62;hello all&amp;#60;/constant&amp;#62; &amp;#60;/setBody&amp;#62; &amp;#60;/route&amp;#62;&lt;/pre&gt; &lt;p&gt;With the &lt;code&gt;loop.sh&lt;/code&gt; script, we can send requests to this route in bulk. One can run this script in three or four terminals so that there is concurrent traffic, which would increase CPU utilization quickly. This script is part of the project as well:&lt;/p&gt; &lt;pre&gt;#!/bin/bash for ((;;)) do curl http://demo-service-imc-demo.apps.csppnq.lab.pnq2.cee.redhat.com/undertowTest done&lt;/pre&gt; &lt;p&gt;See Figure 5 for the results in the GUI, and Figure 6 for the command-line version:&lt;/p&gt; &lt;div id="attachment_644977" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644977" class="wp-image-644977 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/4_AutoScaline_GUI_view-1024x437.png" alt="Loop script results in the GUI." width="640" height="273" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/4_AutoScaline_GUI_view-1024x437.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/4_AutoScaline_GUI_view-300x128.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/4_AutoScaline_GUI_view-768x328.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644977" class="wp-caption-text"&gt;&lt;em&gt;Figure 5: Loop script results in the GUI.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_644987" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644987" class="wp-image-644987 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment-1024x347.png" alt="Loop script results on the command line." width="640" height="217" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment-1024x347.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment-300x102.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment-768x260.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/3_AutoScaling_CLI_view_increment.png 1497w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644987" class="wp-caption-text"&gt;&lt;em&gt;Figure 6: Loop script results on the command line.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;If we stop these scripts from executing, then CPU utilization returns to normal:&lt;/p&gt; &lt;div id="attachment_644967" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-644967" class="wp-image-644967 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement-1024x343.png" alt="After stopping the loop script." width="640" height="214" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement-1024x343.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement-300x100.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement-768x257.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/5_AutoScaling_CLI_view_decrement.png 1464w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-644967" class="wp-caption-text"&gt;&lt;em&gt;Figure 7: After stopping the loop script.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Disable the horizontal pod autoscaler&lt;/h2&gt; &lt;p&gt;We can disable autoscaling with the following command:&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey camel-twitter-shift]$ oc delete hpa fuse74-camel-twitter horizontalpodautoscaler.autoscaling "fuse74-camel-twitter" deleted&lt;/pre&gt; &lt;p&gt;That&amp;#8217;s it. I hope this demonstration helps you set up and use OpenShift&amp;#8217;s autoscaler feature with Red Hat Fuse applications, or any other application as well.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#38;linkname=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fautoscaling-red-hat-fuse-applications-with-openshift%2F&amp;#038;title=Autoscaling%20Red%20Hat%20Fuse%20applications%20with%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/11/11/autoscaling-red-hat-fuse-applications-with-openshift/" data-a2a-title="Autoscaling Red Hat Fuse applications with OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/11/autoscaling-red-hat-fuse-applications-with-openshift/"&gt;Autoscaling Red Hat Fuse applications with OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Ix1c52tseag" height="1" width="1" alt=""/&gt;</content><summary>In this article, we demonstrate Red Hat OpenShiftâs horizontal autoscaling feature with Red Hat Fuse applications. The result is a Spring Boot-based application that uses the Apache Camel component twitter-search that searches Twitter for tweets based on specific keywords. If traffic or the number of tweets increases, and this application cannot serve all requests, then the application autoscales ...</summary><dc:creator>Chandra Shekhar Pandey</dc:creator><dc:date>2019-11-11T08:00:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/11/autoscaling-red-hat-fuse-applications-with-openshift/</feedburner:origLink></entry><entry><title>New features in Red Hat CodeReady Studio 12.13.0.GA and JBoss Tools 4.13.0.Final for Eclipse 2019-09</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/s01-OcNhEhw/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="Eclipse" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat CodeReady Containers" scheme="searchisko:content:tags" /><category term="Red Hat CodeReady Studio" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Enterprise Application Platform" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Jeff Maury</name></author><id>searchisko:content:id:jbossorg_blog-new_features_in_red_hat_codeready_studio_12_13_0_ga_and_jboss_tools_4_13_0_final_for_eclipse_2019_09</id><updated>2019-11-11T07:30:52Z</updated><published>2019-11-11T07:30:52Z</published><content type="html">&lt;p&gt;&lt;a href="http://tools.jboss.org/documentation/whatsnew/jbosstools/4.13.0.Final.html"&gt;JBoss Tools 4.13.0&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio 12.13&lt;/a&gt; for Eclipse 2019-09 are here and waiting for you. In this article, I&amp;#8217;ll cover the highlights of the new releases and show how to get started.&lt;/p&gt; &lt;p&gt;&lt;span id="more-649017"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="installation"&gt;Installation&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio&lt;/a&gt; (previously known as Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;pre&gt;java -jar codereadystudio-&amp;#60;installername&amp;#62;.jar&lt;/pre&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio requires a bit more.&lt;/p&gt; &lt;p&gt;This release requires at least Eclipse 4.13 (2019-09), but we recommend using the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2019-09/r/eclipse-ide-java-ee-developers"&gt;Eclipse 4.13 2019-09 JEE Bundle&lt;/a&gt; because then you get most of the dependencies pre-installed.&lt;/p&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;#8220;JBoss Tools&amp;#8221; or &amp;#8220;Red Hat CodeReady Studio.&amp;#8221;&lt;/p&gt; &lt;p&gt;For JBoss Tools, you can also use our update site directly:&lt;/p&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;h2 id="what-is-new"&gt;What&amp;#8217;s new?&lt;/h2&gt; &lt;p&gt;Our main focus for this release was improvements for container-based development and bug fixing. Eclipse 2019-06 itself has a lot of new cool stuff, but I&amp;#8217;ll highlight just a few updates in both Eclipse 2019-06 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;h3 id="openshift"&gt;Red Hat OpenShift&lt;/h3&gt; &lt;h4 id="openshift-container-platform-4-2-support"&gt;OpenShift Container Platform 4.2 support&lt;/h4&gt; &lt;p&gt;With the new &lt;a href="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/"&gt;OpenShift Container Platform (OCP) 4.2&lt;/a&gt; now available (see the &lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-expands-kubernetes-developer-experience-newest-version-red-hat-openshift-4" target="_blank" rel="noopener noreferrer"&gt;announcement&lt;/a&gt;), even if this is a major shift compared to OCP 3, Red Hat CodeReady Studio and JBoss Tools are compatible with this major release in a transparent way. Just define your connection to your OCP 4.2 based cluster as you did before for an OCP 3 cluster, and use the tooling!&lt;/p&gt; &lt;h4 id="codeready-containers-1-0-server-adapter"&gt;CodeReady Containers 1.0 Server Adapter&lt;/h4&gt; &lt;p&gt;A new server adapter has been added to support the next generation of CodeReady Containers 1.0. Although the server adapter itself has limited functionality, it is able to start and stop the CodeReady Containers virtual machine via its crc binary. Simply hit Ctrl+3 (Cmd+3 on OSX) and type &lt;code&gt;new server&lt;/code&gt;, which will bring up a command to set up a new server.&lt;/p&gt; &lt;p&gt;&lt;img class="aligncenter" src="https://tools.stage.jboss.org/documentation/whatsnew/openshift/images/crc-server-adapter.png" alt="crc server adapter" /&gt;&lt;/p&gt; &lt;p&gt;EnterÂ &lt;code&gt;crc&lt;/code&gt;Â in the filter textbox.&lt;/p&gt; &lt;p&gt;You should see theÂ &lt;em&gt;Red Hat CodeReady Containers 1.0&lt;/em&gt;Â server adapter.&lt;/p&gt; &lt;p id="pdBgHkl"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png"&gt;&lt;img class=" size-full wp-image-649037 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png 601w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a-286x300.png 286w" sizes="(max-width: 601px) 100vw, 601px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;SelectÂ &lt;em&gt;Red Hat CodeReady Containers 1.0&lt;/em&gt; and click &lt;em&gt;Next&lt;/em&gt;.&lt;/p&gt; &lt;p id="CXRwfPn"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png"&gt;&lt;img class=" size-full wp-image-649047 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png 609w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37-290x300.png 290w" sizes="(max-width: 609px) 100vw, 609px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;All you have to do is set the location of the CodeReady Containers crc binary file and the pull secret file location, which can be downloaded from &lt;a class="bare" href="https://cloud.redhat.com/openshift/install/crc/installer-provisioned"&gt;https://cloud.redhat.com/openshift/install/crc/installer-provisioned&lt;/a&gt;.&lt;/p&gt; &lt;p id="vmqfgiq"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png"&gt;&lt;img class=" size-full wp-image-649057 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png 603w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391-288x300.png 288w" sizes="(max-width: 603px) 100vw, 603px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once youâre finished, a new CodeReady Containers server adapter will then be created and visible in the Servers view.&lt;/p&gt; &lt;p id="qBXUONu"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png"&gt;&lt;img class=" size-full wp-image-649067 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png 993w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64-300x79.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64-768x203.png 768w" sizes="(max-width: 993px) 100vw, 993px" /&gt;&lt;/a&gt;Once the server is started, a new OpenShift connection should appear in the &lt;em&gt;OpenShift Explorer&lt;/em&gt; view, allowing the user to quickly create a new Openshift application and begin developing their AwesomeApp in a highly replicatable environment.&lt;/p&gt; &lt;h3 id="miwdVPP"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png"&gt;&lt;img class=" size-full wp-image-649077 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png 995w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c-300x79.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c-768x203.png 768w" sizes="(max-width: 995px) 100vw, 995px" /&gt;&lt;/a&gt;Server tools&lt;/h3&gt; &lt;h4 id="wildfly-18-server-adapter"&gt;Wildfly 18 Server Adapter&lt;/h4&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 18. It adds support for Java EE 8 and Jakarta EE 8.&lt;/p&gt; &lt;h4 id="eap-7-3-beta-server-adapter"&gt;EAP 7.3 Beta Server Adapter&lt;/h4&gt; &lt;p&gt;A server adapter has been added to work with EAP 7.3 Beta.&lt;/p&gt; &lt;h3 id="hibernate-tools"&gt;Hibernate Tools&lt;/h3&gt; &lt;h4 id="hibernate-runtime-provider-updates"&gt;Hibernate Runtime Provider Updates&lt;/h4&gt; &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime providers.&lt;/p&gt; &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.7.Final and Hibernate Tools version 5.4.7.Final.&lt;/p&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.13.Final and Hibernate Tools version 5.3.13.Final.&lt;/p&gt; &lt;h3 id="platform"&gt;Platform&lt;/h3&gt; &lt;h4 id="views-dialogs-and-toolbar"&gt;Views, Dialogs and Toolbar&lt;/h4&gt; &lt;h5 id="quick-search"&gt;Quick Search&lt;/h5&gt; &lt;p&gt;The newÂ &lt;em&gt;Quick Search&lt;/em&gt;Â dialog provides a convenient, simple and fast way to run a textual search across your workspace and jump to matches in your code. The dialog provides a quick overview showing matching lines of text at a glance. It updates as quickly as you can type and allows for quick navigation using only the keyboard. A typical workflow starts by pressing the keyboard shortcutÂ Ctrl+Alt+Shift+LÂ (orÂ Cmd+Alt+Shift+LÂ on Mac). Typing a few letters updates the search result as you type. UseÂ Up-DownÂ arrow keys to select a match, then hitÂ EnterÂ to open it in an editor.&lt;/p&gt; &lt;p id="pHSOHma"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png"&gt;&lt;img class=" size-full wp-image-649087 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png 720w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9-300x208.png 300w" sizes="(max-width: 720px) 100vw, 720px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="save-editor-when-project-explorer-has-focus"&gt;Save editor when Project Explorer has focus&lt;/h5&gt; &lt;p&gt;You can now save the active editor even when theÂ Project ExplorerÂ has focus. In cases where an extension contributesÂ SaveablesÂ to the Project Explorer, the extension is honored and the save action on the Project Explorer will save the provided saveable item instead of the active editor.&lt;/p&gt; &lt;p id="CTSUcva"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png"&gt;&lt;img class=" size-full wp-image-649097 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png 656w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab-300x105.png 300w" sizes="(max-width: 656px) 100vw, 656px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="show-in-context-menu-available-for-normal-resources"&gt;&amp;#8220;Show In&amp;#8221; context menu available for normal resources&lt;/h5&gt; &lt;p&gt;TheÂ &lt;em&gt;Show In&lt;/em&gt;Â context menu is now available for an element inside a resource project on theÂ &lt;em&gt;Project Explorer&lt;/em&gt;.&lt;/p&gt; &lt;p id="EACPfRL"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png"&gt;&lt;img class=" size-full wp-image-649107 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png 582w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c-300x151.png 300w" sizes="(max-width: 582px) 100vw, 582px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="show-colors-for-additions-and-deletions-in-compare-viewer"&gt;Show colors for additions and deletions in Compare viewer&lt;/h5&gt; &lt;p&gt;In simple cases such as a two-way comparison or a three-way comparison with no merges and conflicts, the &lt;em&gt;Compare&lt;/em&gt; viewer now shows different colors, depending on whether text has been added, removed, or modified. The default colors are green, red, and black, respectively.&lt;/p&gt; &lt;p id="WZwBvIr"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png"&gt;&lt;img class=" size-full wp-image-649117 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png 467w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9-300x207.png 300w" sizes="(max-width: 467px) 100vw, 467px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The colors can be customized through usual theme customization approaches, including using related entries in theÂ Colors and Fonts preferenceÂ page.&lt;/p&gt; &lt;h5 id="editor-status-line-shows-more-selection-details"&gt;Editor status line shows more selection details&lt;/h5&gt; &lt;p&gt;The status line forÂ Text EditorsÂ now shows the cursor position, and when the editor has something selected, it shows the number of characters in the selection as well. This also works in the block selection mode.&lt;/p&gt; &lt;p&gt;These two new additions to the status line can be disabled via theÂ &lt;em&gt;General &amp;#62; Editors &amp;#62; Text Editors&lt;/em&gt;Â preference page.&lt;/p&gt; &lt;p id="FWOExwX"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png"&gt;&lt;img class=" size-full wp-image-649127 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png 675w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f-300x80.png 300w" sizes="(max-width: 675px) 100vw, 675px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="WozmhCk"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png"&gt;&lt;img class=" size-full wp-image-649137 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png 675w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375-300x80.png 300w" sizes="(max-width: 675px) 100vw, 675px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="shorter-dialog-text"&gt;Shorter dialog text&lt;/h5&gt; &lt;p&gt;Several dialog texts have been shortened. This allows you to capture important information faster.&lt;/p&gt; &lt;p&gt;Previously:&lt;/p&gt; &lt;p id="gkQxLJW"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png"&gt;&lt;img class=" size-full wp-image-649147 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png 611w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2-300x90.png 300w" sizes="(max-width: 611px) 100vw, 611px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Now:&lt;/p&gt; &lt;p id="hvcRhOL"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png"&gt;&lt;img class=" size-full wp-image-649157 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png 613w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d-300x89.png 300w" sizes="(max-width: 613px) 100vw, 613px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="close-project-via-middle-click"&gt;Close project via middle-click&lt;/h5&gt; &lt;p&gt;In theÂ Project Explorer, you can now close a project using middle-click.&lt;/p&gt; &lt;h4 id="debug"&gt;Debug&lt;/h4&gt; &lt;h5 id="improved-usability-of-environment-tab-in-launch-configurations"&gt;Improved usability of Environment tab in Launch Configurations&lt;/h5&gt; &lt;p&gt;In theÂ &lt;em&gt;Environment &lt;/em&gt;tab of the &lt;em&gt;Launch Configuration&lt;/em&gt;Â dialog, you can now double-click on an environment variable name or value and start editing it directly from the table.&lt;/p&gt; &lt;p id="jlDQIQU"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png"&gt;&lt;img class=" size-full wp-image-649167 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png 500w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944-300x113.png 300w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Right-clicking on the environment variable table now opens a context menu, allowing for quick addition, removal, copying, and pasting of environment variables.&lt;/p&gt; &lt;p id="lvnAjnF"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png"&gt;&lt;img class=" size-full wp-image-649177 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png 505w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63-300x153.png 300w" sizes="(max-width: 505px) 100vw, 505px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="show-command-line-for-external-program-launch"&gt;Show Command Line for external program launch&lt;/h5&gt; &lt;p&gt;TheÂ &lt;em&gt;External Tools Configuration&lt;/em&gt;Â dialog for launching an external program now supports theÂ &lt;em&gt;Show Command Line&lt;/em&gt;Â button.&lt;/p&gt; &lt;p id="YvIXtXZ"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png"&gt;&lt;img class=" size-full wp-image-649187 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8-300x249.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="preferences"&gt;Preferences&lt;/h4&gt; &lt;h5 id="close-editors-automatically-when-reaching-99-open-editors"&gt;Close editors automatically when reaching 99 open editors&lt;/h5&gt; &lt;p&gt;The preference to close editors automatically is now enabled by default. It will be triggered when you have opened 99 files. If you continue to open editors, old editors will be closed to protect you from performance problems. You can modify this setting in theÂ &lt;em&gt;PreferencesÂ &lt;/em&gt;dialog via theÂ &lt;em&gt;General &amp;#62; Editors &amp;#62; Close&lt;/em&gt;Â editors automatically preference.&lt;/p&gt; &lt;h5 id="in-table-color-previews-for-text-editor-appearance-color-options"&gt;In-table color previews for Text Editor appearance color options&lt;/h5&gt; &lt;p&gt;You can now see all the colors currently being used inÂ &lt;em&gt;Text Editors&lt;/em&gt;Â from the &lt;em&gt;Appearance&lt;/em&gt; color options table, located in theÂ &lt;em&gt;Preferences &amp;#62; General &amp;#62; Editors &amp;#62; Text Editor&lt;/em&gt;Â page.&lt;/p&gt; &lt;p id="kiZnGAv"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a2598121.png"&gt;&lt;img class=" size-full wp-image-649197 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a2598121.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a2598121.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="automatic-detection-of-ui-freezes-in-the-eclipse-sdk"&gt;Automatic detection of UI freezes in the Eclipse SDK&lt;/h5&gt; &lt;p&gt;The Eclipse SDK has been configured to show stack traces for UI freezes in theÂ Error LogÂ view by default for new workspaces. You can use this information to identify and report slow parts of the Eclipse IDE.&lt;/p&gt; &lt;p id="gzSfxaG"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png"&gt;&lt;img class=" size-full wp-image-649207 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png 585w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521-300x269.png 300w" sizes="(max-width: 585px) 100vw, 585px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can disable the monitoring or tweak its settings via the options in theÂ &lt;em&gt;General &amp;#62; UI Responsiveness Monitoring&lt;/em&gt;Â preference page as shown below.&lt;/p&gt; &lt;p id="DWTLdpb"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png"&gt;&lt;img class=" size-full wp-image-649217 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png 600w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf-300x272.png 300w" sizes="(max-width: 600px) 100vw, 600px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="themes-and-styling"&gt;Themes and Styling&lt;/h4&gt; &lt;h5 id="start-automatically-in-dark-theme-based-on-os-theme"&gt;Start automatically in dark theme based on OS theme&lt;/h5&gt; &lt;p&gt;On Linux and Mac, Eclipse can now start automatically in dark theme when the OS theme is dark. This works by default, that is on a new workspace or when the user has not explicitly set or changed the theme in Eclipse.&lt;/p&gt; &lt;h5 id="display-of-help-content-respects-os-theme"&gt;Display of Help content respects OS theme&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;More and more operating systems provide a system-wide dark theme. Eclipse now respects this system-wide theme setting when the Eclipse help content is displayed in an external browser. A prerequisite for this is a browser that supports the prefers-color-scheme CSS media query.&lt;/p&gt; &lt;p&gt;As of the time of writing, the following browser versions support it:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Firefox version 67&lt;/li&gt; &lt;li&gt;Chrome version 76&lt;/li&gt; &lt;li&gt;Safari version 12.1&lt;/li&gt; &lt;/ul&gt; &lt;p id="vKFrhgY"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a.png"&gt;&lt;img class=" size-full wp-image-649237 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a-1024x766.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a.png 2018w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a-300x224.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a-768x575.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a-1024x766.png 1024w" sizes="(max-width: 2018px) 100vw, 2018px" /&gt;&lt;/a&gt;Help content uses high-resolution icons.&lt;/p&gt; &lt;p&gt;The Help System, as well as the help content of the Eclipse Platform, the Java Development Tooling, and the Plug-in Development Environment, now uses high-resolution icons. They are now crisp on high-resolution displays and also look much better in the dark theme.&lt;/p&gt; &lt;p id="MgPdhll"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f.png"&gt;&lt;img class=" size-full wp-image-649247 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f-1024x838.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f.png 2236w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f-300x246.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f-768x629.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f-1024x838.png 1024w" sizes="(max-width: 2236px) 100vw, 2236px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="improved-dark-theme-on-windows"&gt;Improved dark theme on Windows&lt;/h5&gt; &lt;p&gt;Labels, Sections, Checkboxes, Radio Buttons, FormTexts, and Sashes on forms now use the correct background color in the dark mode on windows.&lt;/p&gt; &lt;p id="eCZFkGA"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5.png"&gt;&lt;img class=" size-full wp-image-649257 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5-1024x520.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5.png 1218w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5-300x152.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5-768x390.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5-1024x520.png 1024w" sizes="(max-width: 1218px) 100vw, 1218px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="general-updates"&gt;General Updates&lt;/h4&gt; &lt;h5 id="interactive-performance"&gt;Interactive performance&lt;/h5&gt; &lt;p&gt;Interactive performance has been further improved in this release and several UI freezes have been fixed.&lt;/p&gt; &lt;h5 id="show-key-bindings-when-command-is-invoked"&gt;Show key bindings when command is invoked&lt;/h5&gt; &lt;p&gt;For presentations, screencasts, and learning purposes, it is very helpful to show the corresponding key binding when a command is invoked. When the command is invoked (via a key binding or menu interaction) the key binding, the commandâs name and description are shown on the screen.&lt;/p&gt; &lt;p id="GYMhyBt"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3.png"&gt;&lt;img class=" size-full wp-image-649267 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3-1024x332.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3.png 1315w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3-300x97.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3-768x249.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3-1024x332.png 1024w" sizes="(max-width: 1315px) 100vw, 1315px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can activate this in theÂ &lt;em&gt;Preferences&lt;/em&gt;Â dialog via theÂ &lt;em&gt;Show key binding when command is invoked&lt;/em&gt; checkbox on the &lt;em&gt;General &amp;#62; Keys&lt;/em&gt; preference page. To toggle this setting quickly, you can use the &lt;em&gt;Toggle Whether to Show Key Binding&lt;/em&gt;Â command (e.g., via the quick access).&lt;/p&gt; &lt;h3 id="java-developement-tools-jdt"&gt;Java Developement Tools (JDT)&lt;/h3&gt; &lt;h4 id="java-13-support"&gt;Java 13 Support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Java 13 is out, and Eclipse JDT supports Java 13 for 4.13 via Marketplace.&lt;/p&gt; &lt;p&gt;The release notably includes the following Java 13 features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JEP 354: Switch Expressions (Preview).&lt;/li&gt; &lt;li&gt;JEP 355: Text Blocks (Preview).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Please note that these are preview language features; hence, the &lt;em&gt;enable preview&lt;/em&gt; option should be on. For an informal introduction of the support, please refer to &lt;a href="https://wiki.eclipse.org/Java13/Examples"&gt;Java 13 Examples wiki&lt;/a&gt;.&lt;/p&gt; &lt;h4 id="java-views-and-dialogs"&gt;Java Views and Dialogs&lt;/h4&gt; &lt;h5 id="synchronize-standard-and-error-output-in-console"&gt;Synchronize standard and error output in console&lt;/h5&gt; &lt;p&gt;The &lt;em&gt;EclipseÂ Console&lt;/em&gt; view currently can not ensure that mixed standard and error output is shown in the same order as it is produced by the running process. For Java applications, the launch configuration &lt;em&gt;Common&lt;/em&gt; tab now provides an option to merge standard and error output. This ensures that standard and error output is shown in the same order it was produced but also disables the individual coloring of error output.&lt;/p&gt; &lt;p id="gIOygVd"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png"&gt;&lt;img class=" size-full wp-image-649277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png 508w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373-182x300.png 182w" sizes="(max-width: 508px) 100vw, 508px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="java-editor"&gt;Java Editor&lt;/h4&gt; &lt;h5 id="convert-to-enhanced-for-loop-using-collections"&gt;Convert to enhanced &amp;#8216;for&amp;#8217; loop using Collections&lt;/h5&gt; &lt;p&gt;The Java quickfix/cleanupÂ &lt;em&gt;Convert to enhanced &amp;#8216;for&amp;#8217; loop&lt;/em&gt;Â is now offered onÂ &lt;code&gt;for&lt;/code&gt;Â loops that are iterating through Collections. The loop must reference theÂ &lt;code&gt;size&lt;/code&gt;Â method as part of the condition and if accessing elements in the body, must use theÂ &lt;code&gt;get&lt;/code&gt;Â method. All other Collection methods other thanÂ &lt;code&gt;isEmpty&lt;/code&gt;Â invalidate the quickfix being offered.&lt;/p&gt; &lt;p id="sPapTUy"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png"&gt;&lt;img class=" size-full wp-image-649287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png 500w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d-300x136.png 300w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="YEvemaq"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png"&gt;&lt;img class=" size-full wp-image-649297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png 571w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307-300x120.png 300w" sizes="(max-width: 571px) 100vw, 571px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="AHsmwvS"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png"&gt;&lt;img class=" size-full wp-image-649307 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png 424w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf-300x161.png 300w" sizes="(max-width: 424px) 100vw, 424px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="initialize-final-fields"&gt;Initialize &amp;#8216;final&amp;#8217; fields&lt;/h5&gt; &lt;p&gt;A Java quickfix is now offered to initialize an uninitializedÂ &lt;code&gt;final&lt;/code&gt;Â field in the class constructor. The fix will initialize aÂ &lt;code&gt;String&lt;/code&gt; to the empty string, a numeric base type to 0, and, for class fields, it initializes them using their default constructor if available or &lt;code&gt;null&lt;/code&gt;Â if no default constructor exists.&lt;/p&gt; &lt;p id="mawdFOH"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png"&gt;&lt;img class=" size-full wp-image-649317 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png 567w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01-300x147.png 300w" sizes="(max-width: 567px) 100vw, 567px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="ZsqgmUv"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png"&gt;&lt;img class=" size-full wp-image-649327 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png 565w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e-300x140.png 300w" sizes="(max-width: 565px) 100vw, 565px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="autoboxing-and-unboxing"&gt;Autoboxing and Unboxing&lt;/h5&gt; &lt;p&gt;Use &lt;em&gt;Autoboxing&lt;/em&gt; and &lt;em&gt;Unboxing&lt;/em&gt; when possible. These features are enabled only for Java 5 and higher.&lt;/p&gt; &lt;p id="lNmXHIs"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png"&gt;&lt;img class=" size-full wp-image-649337 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png 409w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f-300x154.png 300w" sizes="(max-width: 409px) 100vw, 409px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="improved-redundant-modifier-removal"&gt;Improved redundant modifier removal&lt;/h5&gt; &lt;p&gt;The &lt;em&gt;Remove redundant modifier&lt;/em&gt;Â now also removes uselessÂ &lt;code&gt;abstract&lt;/code&gt;Â modifier on the interfaces.&lt;/p&gt; &lt;p id="AXlqKLQ"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png"&gt;&lt;img class=" size-full wp-image-649347 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png 720w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e-300x215.png 300w" sizes="(max-width: 720px) 100vw, 720px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;p id="JHNZiFo"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png"&gt;&lt;img class=" size-full wp-image-649357 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png 459w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7-300x87.png 300w" sizes="(max-width: 459px) 100vw, 459px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You get this:&lt;/p&gt; &lt;p id="AChNWYA"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png"&gt;&lt;img class=" size-full wp-image-649367 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png 459w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a-300x86.png 300w" sizes="(max-width: 459px) 100vw, 459px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="javadoc-comment-generation-for-module"&gt;Javadoc comment generation for module&lt;/h5&gt; &lt;p&gt;Adding a Javadoc comment to a Java module (module-info.java) will result in automatic annotations being added per the new module comment preferences.&lt;/p&gt; &lt;p id="GdyeAMe"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png"&gt;&lt;img class=" size-full wp-image-649377 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png 650w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d-286x300.png 286w" sizes="(max-width: 650px) 100vw, 650px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;TheÂ &lt;code&gt;$(tags)&lt;/code&gt;Â directive will addÂ &lt;code&gt;@uses&lt;/code&gt;Â andÂ &lt;code&gt;@provides&lt;/code&gt;Â tags for allÂ usesÂ andÂ providesÂ module statements.&lt;/p&gt; &lt;p id="fvoYQoK"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png"&gt;&lt;img class=" size-full wp-image-649387 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png 626w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf-300x159.png 300w" sizes="(max-width: 626px) 100vw, 626px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="chain-completion-code-assist"&gt;Chain Completion Code Assist&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Code assist for &amp;#8220;Chain Template Proposals&amp;#8221; will be available. These will traverse reachable local variables, fields, and methods, to produce a chain whose return type is compatible with the expected type in a particular context.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The preference to enable the feature can be found in the &lt;em&gt;Advanced&lt;/em&gt; sub-menu of the &lt;em&gt;Content Assis&lt;/em&gt;t menu group (&lt;em&gt;Preferences &amp;#62; Java &amp;#62; Editor &amp;#62; Content Assist &amp;#62; Advanced&lt;/em&gt;).&lt;/p&gt; &lt;p id="KvCKJwO"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png"&gt;&lt;img class=" size-full wp-image-649397 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc-300x151.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="java-formatter"&gt;Java Formatter&lt;/h4&gt; &lt;h5 id="remove-excess-blank-lines"&gt;Remove excess blank lines&lt;/h5&gt; &lt;p&gt;All the settings in theÂ &lt;em&gt;Blank lines&lt;/em&gt;Â section can now be configured toÂ remove excess blank lines, effectively taking precedence over theÂ &lt;em&gt;Number of empty lines to preserve&lt;/em&gt;Â setting. Each setting has its own button to turn the feature on, right next to its number control. The button is enabled only if the selected number of lines is smaller than theÂ &lt;em&gt;Number of empty lines to preserve;&lt;/em&gt; otherwise, any excess lines are removed anyway.&lt;/p&gt; &lt;p id="hvxYnRD"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png"&gt;&lt;img class=" size-full wp-image-649407 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png 461w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d-300x146.png 300w" sizes="(max-width: 461px) 100vw, 461px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5 id="changes-in-blank-lines-settings"&gt;Changes in blank lines settings&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Thereâs quite a lot of changes in theÂ &lt;em&gt;Blank linesÂ &lt;/em&gt;section of the formatter profile.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Some of the existing subsections and settings are now phrased differently to better express their function:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt;TheÂ &lt;em&gt;Blank lines within class declarations&lt;/em&gt;Â subsection is nowÂ &lt;em&gt;Blank lines within type declaration.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before first declaration&lt;/em&gt;Â is nowÂ &lt;em&gt;Before first member declaration.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before declarations of the same kind&lt;/em&gt;Â is nowÂ &lt;em&gt;Between member declarations of different kind.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before member class declarations&lt;/em&gt;Â is nowÂ &lt;em&gt;Between member type declarations.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before field declarations&lt;/em&gt;Â is nowÂ &lt;em&gt;Between field declarations.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before method declarations&lt;/em&gt;Â is nowÂ &lt;em&gt;Between method/constructor declarations.&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;More importantly, a few new settings have been added to support more places where the number of empty lines can be controlled:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;After last member declaration&lt;/em&gt;Â in a type (to complement previously existingÂ &lt;em&gt;Before first member declaration&lt;/em&gt; setting).&lt;/li&gt; &lt;li&gt;&lt;em&gt;Between abstract method declarations&lt;/em&gt;Â in a type (these cases were previously handled byÂ &lt;em&gt;Between method/constructor declarations&lt;/em&gt;).&lt;/li&gt; &lt;li&gt;&lt;em&gt;At end of method/constructor body&lt;/em&gt;Â (to complement previously existingÂ &lt;em&gt;At beginning of method/constructor body&lt;/em&gt; setting).&lt;/li&gt; &lt;li&gt;&lt;em&gt;At beginning of code block&lt;/em&gt;Â andÂ &lt;em&gt;At end of code block.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Before statement with code block&lt;/em&gt;Â andÂ &lt;em&gt;After statement with code block.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Between statement groups in &amp;#8216;switch.&amp;#8217;&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Most of the new settings have been put in a new subsectionÂ &lt;em&gt;Blank lines within method/constructor declarations.&lt;/em&gt;&lt;/p&gt; &lt;p id="iEvaaJW"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png"&gt;&lt;img class=" size-full wp-image-649417 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png 461w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f-300x147.png 300w" sizes="(max-width: 461px) 100vw, 461px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="junit"&gt;JUnit&lt;/h4&gt; &lt;h5 id="junit-5-5-1"&gt;JUnit 5.5.1&lt;/h5&gt; &lt;p&gt;JUnit 5.5.1 is here and Eclipse JDT has been updated to use this version.&lt;/p&gt; &lt;h4 id="debug-2"&gt;Debug&lt;/h4&gt; &lt;h5 id="enhanced-support-for-patch-module-during-launch"&gt;Enhanced support for &amp;#8211;patch-module during launch&lt;/h5&gt; &lt;p&gt;TheÂ Java Launch ConfigurationÂ now supports patching of different modules by different sources during the launch. This can be verified in theÂ &lt;em&gt;Override Dependenciesâ¦â&lt;/em&gt;Â dialog in theÂ &lt;em&gt;Dependencies&lt;/em&gt;Â tab in a Java Launch Configuration.&lt;/p&gt; &lt;p id="UPIgMIc"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png"&gt;&lt;img class=" size-full wp-image-649427 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png 486w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb-300x141.png 300w" sizes="(max-width: 486px) 100vw, 486px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p id="FVHSBeU"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png"&gt;&lt;img class=" size-full wp-image-649437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png 493w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578-300x269.png 300w" sizes="(max-width: 493px) 100vw, 493px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4 id="java-build"&gt;Java Build&lt;/h4&gt; &lt;h5 id="full-build-on-jdt-core-preferences-change"&gt;Full build on JDT core preferences change&lt;/h5&gt; &lt;p&gt;Manually changing the settings fileÂ &lt;code&gt;.settings/org.eclipse.jdt.core.prefs&lt;/code&gt;Â of a project will result in a full project build, if the workspace auto-build is on. For example, pulling different settings from a git repository or generating the settings with a tool will now trigger a build. Note that this includes timestamp changes, even if actual settings file contents were not changed.&lt;/p&gt; &lt;p&gt;For the 4.13 release, it is possible to disable this new behavior with the VM property:Â &lt;code&gt;-Dorg.eclipse.disableAutoBuildOnSettingsChange=true&lt;/code&gt;. It is planned to remove this VM property in a future release.&lt;/p&gt; &lt;h3 id="and-more"&gt;And moreâ¦â&lt;/h3&gt; &lt;p&gt;You can find more noteworthy updates in onÂ &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.13.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;h2 id="what-is-next"&gt;What is next?&lt;/h2&gt; &lt;p&gt;Having JBoss Tools 4.13.0 and Red Hat CodeReady Studio 12.13 out we are already working on the next release for Eclipse 2019-12.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;#038;title=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09" data-a2a-url="https://developers.redhat.com/blog/2019/11/11/new-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09/" data-a2a-title="New features in Red Hat CodeReady Studio 12.13.0.GA and JBoss Tools 4.13.0.Final for Eclipse 2019-09"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/11/new-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09/"&gt;New features in Red Hat CodeReady Studio 12.13.0.GA and JBoss Tools 4.13.0.Final for Eclipse 2019-09&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/s01-OcNhEhw" height="1" width="1" alt=""/&gt;</content><summary>JBoss Tools 4.13.0 and Red Hat CodeReady Studio 12.13 for Eclipse 2019-09 are here and waiting for you. In this article, Iâll cover the highlights of the new releases and show how to get started. Installation Red Hat CodeReady Studio (previously known as Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download it from our Red Hat CodeReady Studio product page a...</summary><dc:creator>Jeff Maury</dc:creator><dc:date>2019-11-11T07:30:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/11/new-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09/</feedburner:origLink></entry><entry><title>How to setup OpenShift Container Platform on your local machine in minutes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/0pQsTdRojcw/how-to-setup-openshift-container-platform-in-minutes.html" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyStudio" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-how_to_setup_openshift_container_platform_on_your_local_machine_in_minutes</id><updated>2019-11-11T06:00:07Z</updated><published>2019-11-11T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="764" data-original-width="1110" height="220" src="https://1.bp.blogspot.com/-fonHfEZK46c/XcWOK8w6-kI/AAAAAAAAwtw/hA4DRURPdmwuWge82KloZ9NB6g8_3qMbACNcBGAsYHQ/s320/Screenshot%2B2019-11-08%2Bat%2B16.47.43.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;It's been awhile since I've talked about running OpenShift Container Platform on your local machine.&lt;br /&gt;&lt;br /&gt;This mean a container platform at your finger tips, one you can experience the joys of cloud native development and automated rolling deployments. Since I started pulling together ways to easily experience this with OpenShift Container Platform, back with &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" target="_blank"&gt;version 3.3&lt;/a&gt; believe it or not, we've come a long ways.&lt;br /&gt;&lt;br /&gt;For some time now I've been waiting for the local installation that stopped being supported with &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" target="_blank"&gt;OpenShift Container Platform 3.9&lt;/a&gt; to reappear in version 4.x. Well now it's finally here with the last release of OpenShift Container Platform 4.2, in the form of Code Ready Containers.&lt;br /&gt;&lt;br /&gt;The idea was to make this as streamlined of an experience as possible by using the same &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" target="_blank"&gt;OpenShift Container Platform Easy Local Install project&lt;/a&gt;. Let's take a look at what this looks like.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The first focus was to have this work for Unix based operating systems using a single installation script. The secondary wish is to provide a windows based installation script.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Linux or Mac installation&lt;/h3&gt;This installation requires the following (all freely available):&lt;br /&gt;&lt;br /&gt;&lt;pre class="code highlight" lang="plaintext"&gt;&lt;span style="font-size: x-small;"&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt;1. HyperKit for OSX, Hyper-V for Windows, or Libvirt for Linux&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt;2. Code Ready Containers (OCP 4.2)&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt;3. OpenShift Client (oc) v4.2.0&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;br /&gt;First you need to ensure your virtualization tooling is installed for your platform, just search online for how to do that or your specific platform. Second you need to download the Code Ready Containers. Finally, you need the OpenShift client. Normally you'd expect to have to track these last two down but we've made this all easy by just including checks during the installation. If you have something installed, it checks the version, if good then it moves on with next steps. If anything is missing or wrong version, the installation stops and notifies you where to find that component for your platform (including URL).&lt;br /&gt;&lt;br /&gt;Let's get started by downloading the &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo/-/archive/master/ocp-install-demo-master.zip" target="_blank"&gt;OpenShift Container Platform Easy Local Install Project and unzipping in some directory&lt;/a&gt;. This gives you a file called &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;span style="font-size: x-small;"&gt;ocp-install-demo-master.zip&lt;/span&gt;,&lt;/span&gt;just unzip and run the &lt;span style="font-size: x-small;"&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;init.sh&lt;/span&gt;&lt;/span&gt; as follows:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ ./init.sh &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Follow the instructions as each of the dependencies is checked and you're provided with pointers to getting the versions you need for your platform. &lt;br /&gt;&lt;br /&gt;&lt;i&gt;Note: Each Code Ready Container download is tied to an embedded secret. This secret you need to download (link will be provided) as a file and you'll be asked to point to that secret to start your container platform. This pull-secret has a 30 day lifespan, so once it's expired you'll need to download both a new Code Ready Container AND a new pull-secret. &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Once you've gotten all the dependencies sorted out, the install runs like this:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-zgpBf1bu4sU/XcWIMoyMHyI/AAAAAAAAwsw/J0nom9zPqAY0v4TSeX5NBVu_lHTvCtDlACNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.21.38.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1414" data-original-width="1264" height="640" src="https://1.bp.blogspot.com/-zgpBf1bu4sU/XcWIMoyMHyI/AAAAAAAAwsw/J0nom9zPqAY0v4TSeX5NBVu_lHTvCtDlACNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.21.38.png" width="571" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;A little ASCII art and then it's checking for my platforms virtualization (Hyperkit), then looking for the OpenShift client version 4.2 (oc client), then running a setup (crc setup).&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-ynR__THDufU/XcWJXHXWBhI/AAAAAAAAws8/qnDZmQkYFgIxSoDe44dcld0Y5cSj4JPWQCNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.27.14.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="670" data-original-width="1200" height="355" src="https://1.bp.blogspot.com/-ynR__THDufU/XcWJXHXWBhI/AAAAAAAAws8/qnDZmQkYFgIxSoDe44dcld0Y5cSj4JPWQCNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.27.14.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The next steps are providing the pull-secret-file, you can set this in the variables at the top of the installation script. Now the moment of truth, the Code Ready Containers cluster starts, which takes some time depending on your network (crc start). With a good networks it's about a five minute wait.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-cXUVFMazNBc/XcWJ8E6lnGI/AAAAAAAAwtE/-9adInVQM2IY1TaKdZsMmWWWBvOLU91DwCNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.29.41.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="413" data-original-width="1600" height="164" src="https://1.bp.blogspot.com/-cXUVFMazNBc/XcWJ8E6lnGI/AAAAAAAAwtE/-9adInVQM2IY1TaKdZsMmWWWBvOLU91DwCNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.29.41.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;This is the logging you'll see as the OpenShift cluster starts on your local machine. The warning is normal, just some of the features have been trimmed to speed up deployment.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-ANOqL4P-2V4/XcWKVwl8b2I/AAAAAAAAwtM/dc-jJY2AiyEuUgIu8MoHkYmbWfXvJf5AgCNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.31.26.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1300" data-original-width="930" height="640" src="https://1.bp.blogspot.com/-ANOqL4P-2V4/XcWKVwl8b2I/AAAAAAAAwtM/dc-jJY2AiyEuUgIu8MoHkYmbWfXvJf5AgCNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.31.26.png" width="456" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;At the end we'll retrieve the admin password for logging in to the cluster's console, pick up the host URL, test the deployment by logging in with our client (oc login), and finally you're given all the details in a nice box. You have the option to stop, start it again, or delete the OpenShift Container Platform cluster as shown in the dialog.&lt;br /&gt;&lt;br /&gt;Next open the web console using URL and login 'kubeadmin' with the corresponding password. In our case it's the URL: &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;"&gt;https://console-openshift-console.apps-crc.testing&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-yaW4ZQGESi4/XcWLXR_x4SI/AAAAAAAAwtc/Ek1HwcbAhOsc9J81--y3-ACI-UIXtQFYwCNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.34.35.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="795" data-original-width="1600" height="318" src="https://1.bp.blogspot.com/-yaW4ZQGESi4/XcWLXR_x4SI/AAAAAAAAwtc/Ek1HwcbAhOsc9J81--y3-ACI-UIXtQFYwCNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.34.35.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Log in with user: &lt;span style="font-size: x-small;"&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;kubeadmin&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;Password in our case: &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;"&gt;wyozw-5ywAy-5yoap-7rj8q&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;That opens the main dashboard:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-7179roqgrYA/XcWLoFVtINI/AAAAAAAAwtk/C6v_BBxepTk2_qaw7fSNHpTzEStC8VcMACNcBGAsYHQ/s1600/Screenshot%2B2019-11-08%2Bat%2B16.35.03.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="883" data-original-width="1600" height="352" src="https://1.bp.blogspot.com/-7179roqgrYA/XcWLoFVtINI/AAAAAAAAwtk/C6v_BBxepTk2_qaw7fSNHpTzEStC8VcMACNcBGAsYHQ/s640/Screenshot%2B2019-11-08%2Bat%2B16.35.03.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;This concludes the installation of an OpenShift Container Platform on our local machine using Code Ready Containers.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;What about Windows?&lt;/h3&gt;If you are a sharp observer, you'll notice there is a file called &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo/blob/master/init.bat" target="_blank"&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;init.bat&lt;/span&gt;&lt;/a&gt; for windows platforms to install with. The problem is I've not been able to test this yet on a windows machine, so I'd love to call out to the readers out there that might have some time to contribute to test this script and help us complete the installation. You'll notice a few TODO's marked in the scripts code, as they are untested areas in the installation.&lt;br /&gt;&lt;br /&gt;You can &lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo/issues/new?issue%5Bassignee_id%5D=&amp;amp;issue%5Bmilestone_id%5D=" target="_blank"&gt;raise new issues here&lt;/a&gt; and help us complete the windows based installation and get your name added to the contributors list. We'd be really thankful!&lt;br /&gt;&lt;br /&gt;Stay tuned for more on cloud native development using other Red Hat technologies on your new OpenShift Container Platform installed locally on your own machine!&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=j2IBGFQ40b4:fS9sXqFCgVE:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=j2IBGFQ40b4:fS9sXqFCgVE:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=j2IBGFQ40b4:fS9sXqFCgVE:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=j2IBGFQ40b4:fS9sXqFCgVE:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=j2IBGFQ40b4:fS9sXqFCgVE:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/j2IBGFQ40b4" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/0pQsTdRojcw" height="1" width="1" alt=""/&gt;</content><summary>It's been awhile since I've talked about running OpenShift Container Platform on your local machine. This mean a container platform at your finger tips, one you can experience the joys of cloud native development and automated rolling deployments. Since I started pulling together ways to easily experience this with OpenShift Container Platform, back with version 3.3 believe it or not, we've come a...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-11-11T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/j2IBGFQ40b4/how-to-setup-openshift-container-platform-in-minutes.html</feedburner:origLink></entry><entry><title>Narayana 5.10.0.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/XgUs70PfIaY/narayana-5100final-released.html" /><category term="feed_group_name_jbosstransactions" scheme="searchisko:content:tags" /><category term="feed_name_transactions" scheme="searchisko:content:tags" /><author><name>Michael Musgrove</name></author><id>searchisko:content:id:jbossorg_blog-narayana_5_10_0_final_released</id><updated>2019-11-08T10:24:48Z</updated><published>2019-11-08T10:24:00Z</published><content type="html">The team are pleased to announce our latest release of Narayana - the premier open source transaction manager.&lt;br /&gt;&lt;br /&gt;The release is available for &lt;a href="http://narayana.io/downloads/index.html"&gt;download&lt;/a&gt; from our website.&lt;br /&gt;It is a bug fix release and a list of what we fixed is available in the&amp;nbsp;&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310200&amp;amp;version=12342779"&gt;release notes&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/XgUs70PfIaY" height="1" width="1" alt=""/&gt;</content><summary>The team are pleased to announce our latest release of Narayana - the premier open source transaction manager. The release is available for download from our website. It is a bug fix release and a list of what we fixed is available in theÂ release notes.</summary><dc:creator>Michael Musgrove</dc:creator><dc:date>2019-11-08T10:24:00Z</dc:date><feedburner:origLink>http://jbossts.blogspot.com/2019/11/narayana-5100final-released.html</feedburner:origLink></entry></feed>
